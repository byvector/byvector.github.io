<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[vector's blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://blog.supce.com/"/>
  <updated>2016-07-24T12:31:16.805Z</updated>
  <id>http://blog.supce.com/</id>
  
  <author>
    <name><![CDATA[vector]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[DOM(一)]]></title>
    <link href="http://blog.supce.com/2016/07/24/JavaScript%E4%B9%8B%E5%9F%BA%E7%A1%8010/"/>
    <id>http://blog.supce.com/2016/07/24/JavaScript之基础10/</id>
    <published>2016-07-23T16:00:00.000Z</published>
    <updated>2016-07-24T12:31:16.805Z</updated>
    <content type="html"><![CDATA[<hr>
<p>DOM是document object model的缩写，即：文档对象模型。DOM将HTML和XML描述为一个具有层次结构的节点树。DOM作为一个接口，可以对HTML或者XML进行添加，删除和修改。<br>根据 DOM，HTML 文档中的每个成分都是一个节点。DOM 是这样规定的： </p>
<ul>
<li>整个文档是一个文档节点 </li>
<li>每个 HTML 标签是一个元素节点 </li>
<li>包含在 HTML 元素中的文本是文本节点 </li>
<li>每一个 HTML 属性是一个属性节点 </li>
<li>注释属于注释节点<a id="more"></a>
</li>
</ul>
<h1 id="节点类型">节点类型</h1><p>JavaScript中总共有12种节点类型，这些节点类型全部继承自Node类型，因此所有节点类型都共享着相同的基本属性和方法。<br>节点类型有在Node类型中定义的12个数值常量来表示：</p>
<pre><code>Node<span class="class">.ELEMENT_NODE</span> (<span class="number">1</span>)
Node<span class="class">.ATTRIBUTE_NODE</span> (<span class="number">2</span>)
Node<span class="class">.TEXT_NODE</span> (<span class="number">3</span>)
Node<span class="class">.CDATA_SECTION_NODE</span> (<span class="number">4</span>)
Node<span class="class">.ENTITY_REFERENCE_NODE</span> (<span class="number">5</span>)
Node<span class="class">.ENTITY_NODE</span> (<span class="number">6</span>)
Node<span class="class">.PROCESSING_INSTRUCTION_NODE</span> (<span class="number">7</span>)
Node<span class="class">.COMMENT_NODE</span> (<span class="number">8</span>)
Node<span class="class">.DOCUMENT_NODE</span> (<span class="number">9</span>)
Node<span class="class">.DOCUMENT_TYPE_NODE</span> (<span class="number">10</span>)
Node<span class="class">.DOCUMENT_FRAGMENT_NODE</span> (<span class="number">11</span>)
Node<span class="class">.NOTATION_NODE</span> (<span class="number">12</span>)
</code></pre><h2 id="常用属性">常用属性</h2><h3 id="nodeType属性">nodeType属性</h3><p>每个节点都有一个nodeType属性，可以确定节点的类型。</p>
<pre><code>&lt;<span class="keyword">div</span> <span class="property">id</span>=<span class="string">"test"</span>&gt;<span class="keyword">div</span>&lt;/<span class="keyword">div</span>&gt;
var test = document.getElementById(<span class="string">"test"</span>);
<span class="keyword">if</span>(test.nodeType == <span class="number">1</span>){
    console.<span class="command">log</span>(<span class="string">"This node is an element"</span>);
}
</code></pre><h3 id="nodeName属性">nodeName属性</h3><p>nodeName属性保存的是元素的标签名</p>
<pre><code>&lt;div id=<span class="string">"test"</span>&gt;div&lt;/div&gt;
<span class="keyword">var</span> <span class="keyword">test</span> = document.getElementById(<span class="string">"test"</span>);
<span class="keyword">if</span>(<span class="keyword">test</span>.nodeType == 1){
    console.<span class="literal">log</span>(<span class="keyword">test</span>.nodeName);  <span class="comment">//DIV</span>
}
</code></pre><h2 id="节点关系">节点关系</h2><p>节点的关系类似于家谱。<br>每个节点都有一个childNodes属性来表示子节点，其中保存着一个NodeList对象。NodeList 是一种类数组对象，用于保存一组有序的节点，可以通过位置或者<code>item()</code>方法来访问这些节点。</p>
<pre><code><span class="variable"><span class="keyword">var</span> firstChild</span> = someNode.childNodes[<span class="number">0</span>];
<span class="variable"><span class="keyword">var</span> secondChild</span> = someNode.childNodes.item(<span class="number">2</span>);
<span class="variable"><span class="keyword">var</span> length</span> = someNode.childNodes.length;
</code></pre><p><em>请注意，虽然可以通过方括号语法来访问 NodeList 的值，而且这个对象也有 length 属性，但它并不是 Array 的实例。可以通过一个函数把它转换为数组</em></p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">convert2Array</span><span class="params">(nodes)</span></span>{
    <span class="keyword">try</span>{
        <span class="keyword">return</span> <span class="keyword">Array</span>.prototype.slice.call(nodes,<span class="number">0</span>);
    }<span class="keyword">catch</span>(ex){
        <span class="keyword">var</span> <span class="keyword">array</span> = [];
        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;nodes.length;i++){
            <span class="keyword">array</span>[i] = nodes[i];
        }
        <span class="keyword">return</span> <span class="keyword">array</span>;
    }
}
console.log(convert2Array({length:<span class="number">2</span>,<span class="number">0</span>:<span class="string">'first'</span>,<span class="number">1</span>:<span class="string">'second'</span>})); <span class="comment">//["first", "second"]</span>
</code></pre><p>还有一些其他关系</p>
<ul>
<li>parentNode 父节点</li>
<li>previousSibling 该节点的前一个兄弟节点</li>
<li>nextSibling 该节点的后一个兄弟节点</li>
</ul>
<h2 id="节点操作">节点操作</h2><h3 id="appendChild()">appendChild()</h3><p>该方法用于向childNodes列表末尾添加一个节点。返回值为新增的节点。比如：</p>
<pre><code>&lt;ul id=<span class="string">"list"</span>&gt;
    &lt;<span class="keyword">li</span>&gt;item1&lt;/<span class="keyword">li</span>&gt;
    &lt;<span class="keyword">li</span>&gt;item2&lt;/<span class="keyword">li</span>&gt;
&lt;/ul&gt;
<span class="keyword">var</span> <span class="keyword">list</span> = document.getElementById(<span class="string">"list"</span>);
<span class="keyword">var</span> item = document.createElement(<span class="string">"li"</span>);
item.appendChild(document.createTextNode(<span class="string">"itme3"</span>));
<span class="keyword">list</span>.appendChild(item);   <span class="comment">//向ul中添加了一个li</span>
</code></pre><p>如果传入到 appendChild() 中的节点已经是文档的一部分了，那结果就是将该节点从原来的位置转移到新位置。比如将item1与item2互换：</p>
<pre><code>&lt;ul id=<span class="string">"list"</span>&gt;
    &lt;<span class="keyword">li</span>&gt;item1&lt;/<span class="keyword">li</span>&gt;
    &lt;<span class="keyword">li</span>&gt;item2&lt;/<span class="keyword">li</span>&gt;
&lt;/ul&gt;
<span class="keyword">var</span> <span class="keyword">list</span> = document.getElementById(<span class="string">"list"</span>);
<span class="keyword">var</span> item = <span class="keyword">list</span>.childNodes[1];  <span class="comment">//0为空白文本节点</span>
<span class="keyword">list</span>.appendChild(item);
</code></pre><p>有时候，空白文本几点会影响操作，可以写一个函数把空白文本节点删除。</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">cleanWhitespace</span><span class="params">(element)</span>{</span>   
    <span class="keyword">for</span><span class="params">(var i=<span class="number">0</span>; i&lt;element.childNodes.length; i++)</span>   
    {   
        var node = element.childNodes[i];   
        <span class="keyword">if</span><span class="params">(node.nodeType == <span class="number">3</span> &amp;&amp; !/\S/.test<span class="params">(node.nodeValue)</span>)</span>   
        {   
            node.parentNode.removeChild<span class="params">(node)</span>;   
        }   
    }   
} 
</code></pre><h3 id="insertBefore()">insertBefore()</h3><p>这个方法接受两个参数：要插入的节点和作为参照的节点。插入节点后，被插入的节点会变成参照节点的前一个同胞节点(previousSibling)，同时被方法返回。如果参照节点是null则<code>insertBefore()</code>与<code>appendChild()</code>执行相同的操作。比如在item1前面插入item0：</p>
<pre><code>&lt;ul id=<span class="string">"list"</span>&gt;
    &lt;<span class="keyword">li</span>&gt;item1&lt;/<span class="keyword">li</span>&gt;
    &lt;<span class="keyword">li</span>&gt;item2&lt;/<span class="keyword">li</span>&gt;
&lt;/ul&gt;
<span class="keyword">var</span> <span class="keyword">list</span> = document.getElementById(<span class="string">"list"</span>);
<span class="keyword">var</span> item = document.createElement(<span class="string">"li"</span>);
item.appendChild(document.createTextNode(<span class="string">"item0"</span>));
<span class="keyword">list</span>.insertBefore(item,<span class="keyword">list</span>.firstChild);
</code></pre><h3 id="replaceChild()">replaceChild()</h3><p><code>replaceChild()</code>方法接收两个参数：要插入的节点和要替换的节点。要替换的节点将由这个方法返回并从文档树中被移除，同时由要插入的节点占据其位置。</p>
<h3 id="removeChild()">removeChild()</h3><p><code>removeChild()</code>方法为移除某个节点，参数为要移除的节点</p>
<h3 id="cloneNode()">cloneNode()</h3><p>该方法用于复制调用该方法的节点，接收两个参数。</p>
<ul>
<li>当参数为true时，复制该节点和该节点下的整个子节点树</li>
<li>当参数为false时，只复制当前节点本身</li>
</ul>
<p><em>详细介绍可以参考上篇文章</em></p>
<h3 id="normalize()">normalize()</h3><p>这个方法唯一的作用就是处理文档树中的文本节点。由于解析器的实现或DOM操作等原因，可能会出现文本节点不包含文本，或者接连出现两个文本节点的情况。当在某个节点上调用这个方法时，就会在该节点的后代节点中查找上述两种情况。如果找到了空文本节点，则删除它；如果找到相邻的文本节点，则将它们合并为一个文本节点。</p>
<hr>
<h1 id="Document类型">Document类型</h1><p>Document类型表示文档。而我们常用的document对象是HTMLDocument(继承自Document类型)的一个实例。document对象也是window对象的一个属性，因此可以将其作为全局的对象来访问。</p>
<h2 id="document对象的常用属性">document对象的常用属性</h2><ul>
<li>documentElement属性用来获取页面中的<code>&lt;html&gt;</code>元素 </li>
<li><p>body属性可以直接获取页面中的<code>body</code>元素 </p>
<pre><code><span class="tag">var</span> <span class="tag">body</span> = document.body
</code></pre></li>
<li><p>doctype属性可以获取对<code>&lt;!DOCTYPE&gt;</code>的引用</p>
<pre><code>console.log(document.doctype); //<span class="doctype">&lt;!DOCTYPE html&gt;</span>
</code></pre></li>
<li><p>title属性可以获取网页的<code>&lt;title&gt;</code>元素</p>
<pre><code><span class="comment">//获取title</span>
<span class="keyword">var</span> title = <span class="built_in">document</span>.title;
<span class="comment">//设置title</span>
<span class="built_in">document</span>.title = <span class="string">"new title"</span>;
</code></pre></li>
<li><p>URL属性可以获取当前页面完整的url</p>
</li>
<li>domain属性可以获取当前页面的域名</li>
</ul>
<p>比如google首页：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/dom.jpg-blogImg" alt=""></p>
<h2 id="document对象的常用方法">document对象的常用方法</h2><p>在开发过程中，经常需要取得摸个元素的引用，再执行某些操作。Document类型为此提供了两个方法。</p>
<ul>
<li><code>getElementById()</code>参数为元素的ID名<br><em>IE8 及较低版本不区分 ID 的大小写。如果页面中多个元素的 ID 值相同， getElementById() 只返回文档中第一次出现的元素</em></li>
<li><p><code>getElementsByTagName()</code>参数为元素的标签名，在HTML文档中该方法返回的是包含零个或多个元素的HTMLCollection对象。</p>
<pre><code>&lt;img src=<span class="string">"#1"</span> name=<span class="string">"user_name"</span>&gt;
&lt;img src=<span class="string">"#2"</span> name=<span class="string">"user_age"</span>&gt;
&lt;img src=<span class="string">"#3"</span> name=<span class="string">"user_sex"</span>&gt;
<span class="comment">//获取页面中所有的&lt;img&gt;元素</span>
var images = document.getElementsByTagName<span class="params">(<span class="string">"img"</span>)</span>;
<span class="comment">//获取长度</span>
console.<span class="built_in">log</span><span class="params">(images.length)</span>;
<span class="comment">//通过索引获取src</span>
console.<span class="built_in">log</span><span class="params">(images[<span class="number">0</span>].src)</span>;
<span class="comment">//通过name获取src</span>
console.<span class="built_in">log</span><span class="params">(images[<span class="string">"user_age"</span>].src)</span>;
</code></pre></li>
<li><p><code>getElementsByName()</code>这个方法会返回带有给定name特性的所有元素。</p>
</li>
</ul>
<h2 id="特殊集合">特殊集合</h2><p>除了属性和方法，document对象还有一些特殊的集合。这些集合都是 HTMLCollection 对象，为访问文档常用的部分提供了快捷方式。</p>
<table>
<thead>
<tr>
<th>集合</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>document.anchors</td>
<td>包含文档中所有带 name 特性的 <code>&lt;a&gt;</code> 元素；</td>
</tr>
<tr>
<td>document.forms</td>
<td>包含文档中所有的 <code>&lt;form&gt;</code> 元素</td>
</tr>
<tr>
<td>document.images</td>
<td>包含文档中所有的 <code>&lt;img&gt;</code> 元素</td>
</tr>
<tr>
<td>document.links</td>
<td>包含文档中所有带href特性的 <code>&lt;a&gt;</code> 元素</td>
</tr>
</tbody>
</table>
<h2 id="文档写入">文档写入</h2><p><code>write()</code>和<code>writeln()</code><br>这两个方法都会接受一个字符串参数。在页面被加载的过程中，可以使用这两个方法向页面中动态地加入内容。<code>writeln()</code>方法会在写入末尾添加一个换行符。</p>
<pre><code>current date and <span class="tag">time</span> is :
&lt;script type=<span class="string">"text/javascript"</span>&gt;
    document.<span class="function"><span class="title">write</span><span class="params">(<span class="string">"&lt;p&gt;"</span> + (new Date()</span></span>).<span class="function"><span class="title">toString</span><span class="params">()</span></span> +<span class="string">"&lt;/p&gt;"</span>)
&lt;/script&gt;
</code></pre><hr>
<h1 id="Element类型">Element类型</h1><p>Element类型提供了对元素标签名、子节点及特性的访问。常见的属性为<code>id,title,classname</code>等</p>
<h2 id="元素的创建">元素的创建</h2><p>可以通过<code>document.createElement()</code>方法创建新元素。比如创建一个<code>div</code>元素</p>
<pre><code><span class="keyword">var</span> <span class="keyword">div</span> = document.createElement(<span class="variable">"div"</span>);
</code></pre><h2 id="元素特性的相关操作">元素特性的相关操作</h2><h3 id="取得特性">取得特性</h3><p><code>getAttribute()</code>方法来取得属性值。</p>
<pre><code>&lt;div id=<span class="string">"my_test_div"</span> class=<span class="string">"div_class"</span> title=<span class="string">"div_title"</span> align=<span class="string">"left"</span>&gt;&lt;/div&gt;
var div = document.getElementById<span class="params">(<span class="string">"my_test_div"</span>)</span>;
console.<span class="built_in">log</span><span class="params">(div.getAttribute<span class="params">(<span class="string">"id"</span>)</span>)</span>;  <span class="comment">//或者div.id</span>
console.<span class="built_in">log</span><span class="params">(div.getAttribute<span class="params">(<span class="string">"class"</span>)</span>)</span>;<span class="comment">//或者div.class</span>
console.<span class="built_in">log</span><span class="params">(div.getAttribute<span class="params">(<span class="string">"title"</span>)</span>)</span>;<span class="comment">//或者div.title</span>
console.<span class="built_in">log</span><span class="params">(div.getAttribute<span class="params">(<span class="string">"align"</span>)</span>)</span>;<span class="comment">//或者div.align</span>
</code></pre><p>通过<code>getAttribute()</code>方法也可以取得自定义特性的值，以下面的元素为例：</p>
<pre><code>&lt;<span class="keyword">div</span> <span class="property">id</span>=<span class="string">"my_test_div"</span> my_special_attribute=<span class="string">"hello!"</span>&gt;&lt;/<span class="keyword">div</span>&gt;
</code></pre><p>这个元素包含一个名为 my_special_attribute 的自定义特性，它的值是 “hello!” 。可以像取得其他特性一样取得这个值:</p>
<pre><code><span class="keyword">var</span> value = <span class="keyword">div</span>.getAttribute(<span class="variable">"my_special_attribute"</span>);
</code></pre><h3 id="设置特性">设置特性</h3><p><code>setAttribute()</code>用于设置特性，这个方法接受两个参数：要设置的特性名和<br>值。如果特性已经存在，<code>setAttribute()</code>会以指定的值替换现有的值；如果特性不存在，<code>setAttribute()</code>则创建该属性并设置相应的值。</p>
<pre><code>&lt;<span class="keyword">div</span> id=<span class="variable">"my_test_div"</span> &gt;&lt;/<span class="keyword">div</span>&gt;
<span class="keyword">var</span> <span class="keyword">div</span> = document.getElementById(<span class="variable">"my_test_div"</span>);
<span class="keyword">div</span>.setAttribute(<span class="variable">"class"</span>,<span class="variable">"div_class"</span>);//或者<span class="keyword">div</span>.class=<span class="variable">"div_class"</span>
<span class="keyword">div</span>.setAttribute(<span class="variable">"title"</span>,<span class="variable">"div_title"</span>);//或者<span class="keyword">div</span>.title=<span class="variable">"div_title"</span>
<span class="keyword">div</span>.setAttribute(<span class="variable">"align"</span>,<span class="variable">"right"</span>);//或者<span class="keyword">div</span>.align=<span class="variable">"right"</span>
</code></pre><h3 id="删除特性">删除特性</h3><p><code>removeAttribute()</code>，这个方法用于彻底删除元素的特性。调用这个方法不仅会清除特性的值，而且也会从元素中完全删除特性。</p>
<h2 id="元素子节点">元素子节点</h2><blockquote>
<p>元素子节点部分见节点关系部分。</p>
</blockquote>
<hr>
<h1 id="Text类型">Text类型</h1><p>正如之前用到过的例子中，有时候需要向文档树中添加文本节点。<br>文本节点由Text类型表示，包含的是可以照字面解释的纯文本内容。纯文本中可以包含转义后的HTML字符，但不能包含HTML代码。<br>在默认情况下，每个可以包含内容的元素最多只能有一个文本节点，而且必须确实有内容存在。</p>
<pre><code>&lt;<span class="keyword">div</span>&gt;&lt;/<span class="keyword">div</span>&gt;<span class="comment">//没有内容，没有文本节点</span>
&lt;<span class="keyword">div</span>&gt; &lt;/<span class="keyword">div</span>&gt;<span class="comment">//有空格，有一个文本节点</span>
&lt;<span class="keyword">div</span>&gt;hello world!&lt;/<span class="keyword">div</span>&gt;<span class="comment">//有内容，有一个文本节点</span>
</code></pre><p>可以获取文本节点的引用并利用<code>nodeValue</code>修改它。</p>
<pre><code><span class="keyword">var</span> textNode = <span class="keyword">div</span>.firstChild;
textNode.nodeValue = <span class="variable">"this is a test"</span>;
</code></pre><p>如果没有文本节点，可以创建一个文本节点，并插入到元素中</p>
<pre><code><span class="keyword">var</span> element = <span class="built_in">document</span>.createElement(<span class="string">"div"</span>);
element.className = <span class="string">"test"</span>;
<span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(<span class="string">"hello world"</span>);
element.appendChild(text);
<span class="built_in">document</span>.body.appendChild(element);
</code></pre><p>DOM文档中存在相邻的同胞文本节点很容易导致混乱，因为分不清哪个文本节点表示哪个字符串。另外，DOM文档中出现相邻文本节点的情况也不在少数，于是就催生了一个能够将相邻文本节点合并的方法<code>normalize()</code>。<br>这个方法是由 Node类型定义的。如果在一个包含两个或多个文本节点的父元素上调用<code>normalize()</code>方法，则会将所有文本节点合并成一个节点，结果节点的<code>nodeValue</code> 等于将合并前每个文本节点的<code>nodeValue</code>值拼接起来的值。比如：</p>
<pre><code>var element = document.createElement<span class="params">(<span class="string">"div"</span>)</span>;
element.className = <span class="string">"message"</span>;
var textNode = document.createTextNode<span class="params">(<span class="string">"Hello world!"</span>)</span>;
element.appendChild<span class="params">(textNode)</span>;
var anotherTextNode = document.createTextNode<span class="params">(<span class="string">"Nico!"</span>)</span>;
element.appendChild<span class="params">(anotherTextNode)</span>;
document.body.appendChild<span class="params">(element)</span>;
console.<span class="built_in">log</span><span class="params">(element.childNodes.length)</span>; <span class="comment">//2</span>
element.normalize<span class="params">()</span>;
console.<span class="built_in">log</span><span class="params">(element.childNodes.length)</span>; <span class="comment">//1</span>
console.<span class="built_in">log</span><span class="params">(element.firstChild.nodeValue)</span>; <span class="comment">// "Hello world!Nico!"</span>
</code></pre><p>Text 类型提供了一个作用与<code>normalize()</code>相反的方法:<code>splitText()</code>。<br>这个方法会将一个文本节点分成两个文本节点，即按照指定的位置分割<code>nodeValue</code>值。原来的文本节点将包含从开始到指定位置之前的内容，新文本节点将包含剩下的文本。这个方法会返回一个新文本节点，该节点与原节点的<code>parentNode</code>相同。</p>
<pre><code>var element = document.createElement<span class="params">(<span class="string">"div"</span>)</span>;
element.className = <span class="string">"test"</span>;
var <span class="built_in">text</span> = document.createTextNode<span class="params">(<span class="string">"Nico&amp;Sora"</span>)</span>;
element.appendChild<span class="params">(text)</span>;
document.body.appendChild<span class="params">(element)</span>;
var newNode = element.childNodes[<span class="number">0</span>].splitText<span class="params">(<span class="number">4</span>)</span>;
console.<span class="built_in">log</span><span class="params">(element.childNodes[<span class="number">0</span>].nodeValue)</span>;  <span class="comment">//Nico</span>
console.<span class="built_in">log</span><span class="params">(newNode.nodeValue)</span>;  <span class="comment">//&amp;Sora</span>
console.<span class="built_in">log</span><span class="params">(element.childNodes.length)</span>; <span class="comment">//2</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<hr>
<p>DOM是document object model的缩写，即：文档对象模型。DOM将HTML和XML描述为一个具有层次结构的节点树。DOM作为一个接口，可以对HTML或者XML进行添加，删除和修改。<br>根据 DOM，HTML 文档中的每个成分都是一个节点。DOM 是这样规定的： </p>
<ul>
<li>整个文档是一个文档节点 </li>
<li>每个 HTML 标签是一个元素节点 </li>
<li>包含在 HTML 元素中的文本是文本节点 </li>
<li>每一个 HTML 属性是一个属性节点 </li>
<li>注释属于注释节点]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[客户端检测]]></title>
    <link href="http://blog.supce.com/2016/07/23/JavaScript%E4%B9%8B%E5%9F%BA%E7%A1%809/"/>
    <id>http://blog.supce.com/2016/07/23/JavaScript之基础9/</id>
    <published>2016-07-22T16:00:00.000Z</published>
    <updated>2016-07-23T13:06:33.961Z</updated>
    <content type="html"><![CDATA[<p>不同浏览器之间或者相同浏览器不同版本之间存在着不一致性问题，可以使用客户端检测来解决不一致性带来的兼容问题。</p>
<hr>
<h1 id="能力检测_(特性检测)">能力检测 (特性检测)</h1><p>能力检测不是用来识别特定的浏览器，而是识别浏览器的能力。它并不关心用户使用的是什么浏览器，该方法只要确定浏览器支持某种特定的功能，就可以根据该功能提出解决方案。</p>
<pre><code><span class="keyword">if</span>(<span class="class"><span class="keyword">object</span>.<span class="title">someProperty</span>){</span>
    <span class="comment">//do something</span>
}
</code></pre><a id="more"></a>
<pre><code><span class="comment">//确定浏览器是否具有DOM1级规定的能力</span>
<span class="keyword">var</span> hasDOM1 = !!(<span class="built_in">document</span>.getElementById &amp;&amp; <span class="built_in">document</span>.createElement &amp;&amp; <span class="built_in">document</span>.getElementsByTagName);
<span class="built_in">console</span>.log(hasDOM1);
</code></pre><p><em>能力检测作为确定下一步解决方案的依据，而不是用它来判断用户使用的是什么浏览器。</em></p>
<hr>
<h1 id="怪癖(quirk)检测">怪癖(quirk)检测</h1><p>怪癖检测主要是想知道浏览器存在哪些缺陷，通常会运行一小段代码，以确定浏览器的某个特性不能正常工作。<br>比如：IE8及更早版本与其他浏览器处理空白字符的方式不一样，IE9之前的版本不会为空白符创建节点</p>
<pre><code><span class="tag">&lt;<span class="title">ul</span> <span class="attribute">id</span>=<span class="value">"test"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span>item 1<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span>item 2<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span>item 3<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
<span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
    <span class="keyword">var</span> myList = <span class="built_in">document</span>.getElementById(<span class="string">"test"</span>);
    <span class="keyword">var</span> copyList = myList.cloneNode(<span class="literal">true</span>);
    <span class="built_in">console</span>.log(copyList.childNodes.length); 
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</code></pre><p>上面的代码中，IE&lt;9时，长度为3，而其他浏览器为7</p>
<p>IE7及以下版本有一个有意思的怪癖：name特性与给定ID匹配的表单元素（<code>&lt;input&gt;,&lt;textarea&gt;,&lt;button&gt;及&lt;select&gt;</code>）也会被该方法返回</p>
<pre><code><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"myElement"</span> <span class="attribute">value</span>=<span class="value">"Text"</span> /&gt;</span>
<span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"myElement"</span>&gt;</span>div<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
    alert(<span class="built_in">document</span>.getElementById(<span class="string">"myElement"</span>));
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</code></pre><p>IE&lt;8返回的是<code>input</code>,其他浏览器返回的为<code>div</code></p>
<p>还有书上的一个例子：IE8及更早版本中存在一个bug，即如果某个实例属性与[[Enumerable]]标记为false的某个原型属性同名，那么该实例属性将不会出现在for—in循环当中<br>。</p>
<hr>
<h1 id="用户代理检测">用户代理检测</h1><p>用户代理检测主要是用来检测用户具体是什么浏览器、什么呈现引擎(内核)、什么版本、什么平台。<br>常见的浏览器内核分别为：</p>
<ul>
<li>Gecko (Firefox)</li>
<li>WebKit (Safari)</li>
<li>Blink (Opera Chrome)</li>
<li>Trident (IE)<br><em>括号内为对应的浏览器</em></li>
</ul>
<blockquote>
<p>完整的用户代理检测脚本在高级程序第九章中，这里就不贴了</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>不同浏览器之间或者相同浏览器不同版本之间存在着不一致性问题，可以使用客户端检测来解决不一致性带来的兼容问题。</p>
<hr>
<h1 id="能力检测_(特性检测)">能力检测 (特性检测)</h1><p>能力检测不是用来识别特定的浏览器，而是识别浏览器的能力。它并不关心用户使用的是什么浏览器，该方法只要确定浏览器支持某种特定的功能，就可以根据该功能提出解决方案。</p>
<pre><code><span class="keyword">if</span>(<span class="class"><span class="keyword">object</span>.<span class="title">someProperty</span>){</span>
    <span class="comment">//do something</span>
}
</code></pre>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaScript BOM 知识整理 (二)]]></title>
    <link href="http://blog.supce.com/2016/07/22/JavaScript%E4%B9%8B%E5%9F%BA%E7%A1%808/"/>
    <id>http://blog.supce.com/2016/07/22/JavaScript之基础8/</id>
    <published>2016-07-21T16:00:00.000Z</published>
    <updated>2016-07-22T03:23:32.930Z</updated>
    <content type="html"><![CDATA[<hr>
<h1 id="navigator">navigator</h1><p>navigator对象通常用于检测浏览器和识别操作系统的版本。<br>navigator中最重要的是userAgent属性，返回包含浏览器版本等信息的字符串，其次cookieEnabled也是很重要滴，使用它可以判断用户浏览器是否开启cookie。<br>下面的表格为常用的navigator属性，详细属性可以参考代码</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述 </th>
</tr>
</thead>
<tbody>
<tr>
<td>appCodeName</td>
<td>浏览器代码名的字符串表示</td>
</tr>
<tr>
<td>appName</td>
<td>官方浏览器名的字符串表示</td>
</tr>
<tr>
<td>appVersion</td>
<td>浏览器版本信息的字符串表示</td>
</tr>
<tr>
<td>cookieEnabled</td>
<td>如果启用cookie返回true，否则返回false</td>
</tr>
<tr>
<td>javaEnabled</td>
<td>如果启用java返回true，否则返回false</td>
</tr>
<tr>
<td>platform</td>
<td>浏览器所在计算机平台的字符串表示</td>
</tr>
<tr>
<td>plugins</td>
<td>安装在浏览器中的插件数组</td>
</tr>
<tr>
<td>taintEnabled</td>
<td>如果启用了数据污点返回true，否则返回false</td>
</tr>
<tr>
<td>userAgent</td>
<td>用户代理头的字符串表示</td>
</tr>
</tbody>
</table>
<a id="more"></a>
<p>以下为详细代码：</p>
<pre><code>&lt;script type=<span class="string">"text/javascript"</span>&gt;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"浏览器名称："</span> + navigator.appCodeName)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"次版本信息："</span> + navigator.appMinorVersion)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"完整浏览器名称："</span> + navigator.appName)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"浏览器的版本："</span> + navigator.appVersion)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"浏览器编译版本："</span> + navigator.buildID)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"是否启用cookie："</span> + navigator.cookieEnabled)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"CPU类型："</span> + navigator.cpuClass)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"是否启用Java："</span> + navigator.javaEnabled<span class="params">()</span>)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"浏览器主语言："</span> + navigator.language)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"浏览器中注册的MIME类型数组："</span> + navigator.mimeTypes)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"是否连接到网络："</span> + navigator.onLine)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"客户端计算机操作系统或者CPU："</span> + navigator.oscpu)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"浏览器所在系统平台："</span> + navigator.platform)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"浏览器中安装的插件信息数组："</span> + navigator.plugins)</span>;
    <span class="comment">//console.log("用户的首选项：" + navigator.preference());</span>
    console.<span class="built_in">log</span><span class="params">(<span class="string">"产品名称："</span> + navigator.product)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"产品的次要信息："</span> + navigator.productSub)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"操作系统的语言："</span> + navigator.systemLanguage)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"用户代理字符串："</span> + navigator.userAgent)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"操作系统的默认语言："</span> + navigator.userLanguage)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"借以访问用户个人信息的对象："</span> + navigator.userProfile)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"浏览器的品牌："</span> + navigator.vendor)</span>;
    console.<span class="built_in">log</span><span class="params">(<span class="string">"有关供应商的次要信息："</span> + navigator.vendorSub)</span>;
&lt;/script&gt;
</code></pre><p>Chrome浏览器<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/navigator.jpg-blogImg" alt=""><br>IE浏览器<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/navigator1.jpg-blogImg" alt=""></p>
<hr>
<h2 id="检测插件">检测插件</h2><p>有时候需要检测浏览器是否安装了某些插件，可以利用<code>navigator</code>的<code>plugins</code>属性来实现</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">hasPlugin</span>(<span class="params">name</span>)</span>{
    <span class="keyword">var</span> np = navigator.plugins;
    <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject){
        <span class="keyword">var</span> activeObejctName = name + <span class="string">"."</span> + name;
        <span class="keyword">try</span>{
            <span class="keyword">var</span> axobj = <span class="built_in">eval</span>(<span class="string">"new ActiveXObject(activeObejctName);"</span>);
            <span class="keyword">return</span> axobj ? <span class="literal">true</span> : <span class="literal">false</span>;
        }<span class="keyword">catch</span>(e){
            <span class="keyword">return</span> <span class="literal">false</span>;
        }
    }<span class="keyword">else</span> <span class="keyword">if</span>(np &amp;&amp; np.length){
        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;np.length;i++){
            <span class="keyword">if</span>(np[i].name.toLowerCase().indexOf(name.toLowerCase()) &gt; -<span class="number">1</span>){
                <span class="keyword">return</span> <span class="literal">true</span>;
            }
        }
        <span class="keyword">return</span> <span class="literal">false</span>;
    }<span class="keyword">else</span>{
        <span class="keyword">return</span> <span class="literal">false</span>;
    }
}
<span class="built_in">console</span>.log(hasPlugin(<span class="string">"Flash"</span>));
</code></pre><hr>
<h1 id="screen对象">screen对象</h1><p>screen对象主要用于获取用户的屏幕信息。其主要的属性如下表：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述 </th>
</tr>
</thead>
<tbody>
<tr>
<td>availHeight</td>
<td>窗口可以使用的屏幕高度，单位像素</td>
</tr>
<tr>
<td>availWidth</td>
<td>窗口可以使用的屏幕宽度，单位像素</td>
</tr>
<tr>
<td>colorDepth</td>
<td>用户浏览器表示的颜色位数，通常为32位(每像素的位数)</td>
</tr>
<tr>
<td>pixelDepth</td>
<td>用户浏览器表示的颜色位数，通常为32位(每像素的位数)（IE不支持此属性）</td>
</tr>
<tr>
<td>height</td>
<td>屏幕的高度，单位像素</td>
</tr>
<tr>
<td>width</td>
<td>屏幕的宽度，单位像素</td>
</tr>
</tbody>
</table>
<p>screen对象不是很常用，但有时候可以利用到availWidth和availHeight属性。<br>例如：可以使用下面的代码填充用户的屏幕</p>
<pre><code><span class="keyword">var</span> <span class="keyword">win</span> = <span class="keyword">window</span>.<span class="keyword">open</span>(<span class="string">""</span>,<span class="string">""</span>,<span class="string">"width=100,height=100"</span>);
<span class="keyword">win</span>.<span class="keyword">window</span>.moveTo(0,0);
<span class="keyword">win</span>.<span class="keyword">window</span>.resizeTo(screen.availWidth,screen.availHeight);
</code></pre><hr>
<h1 id="history对象">history对象</h1><p>history对象保存着用户上网的历史记录。</p>
<ol>
<li><code>go()</code>方法<ul>
<li>参数为正时向前 <code>history.go(2) //前进两页</code></li>
<li>参数为负时向后</li>
<li>参数为字符串时，会跳转到历史记录中包含该字符串的第一个位置（可能后退，也可能前进，具体要看哪个位置最近）如果历史记录中不包含该字符串，那么这个方法什么也不做</li>
</ul>
</li>
<li><code>back()</code>方法，后退一页</li>
<li><code>forward</code>方法，前进一页</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<hr>
<h1 id="navigator">navigator</h1><p>navigator对象通常用于检测浏览器和识别操作系统的版本。<br>navigator中最重要的是userAgent属性，返回包含浏览器版本等信息的字符串，其次cookieEnabled也是很重要滴，使用它可以判断用户浏览器是否开启cookie。<br>下面的表格为常用的navigator属性，详细属性可以参考代码</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述 </th>
</tr>
</thead>
<tbody>
<tr>
<td>appCodeName</td>
<td>浏览器代码名的字符串表示</td>
</tr>
<tr>
<td>appName</td>
<td>官方浏览器名的字符串表示</td>
</tr>
<tr>
<td>appVersion</td>
<td>浏览器版本信息的字符串表示</td>
</tr>
<tr>
<td>cookieEnabled</td>
<td>如果启用cookie返回true，否则返回false</td>
</tr>
<tr>
<td>javaEnabled</td>
<td>如果启用java返回true，否则返回false</td>
</tr>
<tr>
<td>platform</td>
<td>浏览器所在计算机平台的字符串表示</td>
</tr>
<tr>
<td>plugins</td>
<td>安装在浏览器中的插件数组</td>
</tr>
<tr>
<td>taintEnabled</td>
<td>如果启用了数据污点返回true，否则返回false</td>
</tr>
<tr>
<td>userAgent</td>
<td>用户代理头的字符串表示</td>
</tr>
</tbody>
</table>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JavaScript BOM 知识整理 (一)]]></title>
    <link href="http://blog.supce.com/2016/07/21/JavaScript%E4%B9%8B%E5%9F%BA%E7%A1%807/"/>
    <id>http://blog.supce.com/2016/07/21/JavaScript之基础7/</id>
    <published>2016-07-20T16:00:00.000Z</published>
    <updated>2016-07-22T01:29:41.058Z</updated>
    <content type="html"><![CDATA[<h1 id="BOM">BOM</h1><p>BOM是browser object model的缩写，即：浏览器对象模型。BOM主要用于访问浏览器的功能，这些功能与网页的内容无关。</p>
<h2 id="window对象">window对象</h2><p>BOM的核心对象是window，它表示浏览器的一个实例。在浏览器中，window对象既是通过JavaScript访问浏览器窗口的一个接口，也是ECMAScript规定的Global对象。<br>因此，在全局作用域中声明的变量和函数都会成为window对象的属性和方法。但是，声明的全局变量不能通过delete操作符删除，而直接在window对象上定义的属性可以通过delete删除。</p>
<pre><code><span class="keyword">var</span> age = <span class="number">22</span>;
<span class="built_in">window</span>.name = <span class="string">"Nico"</span>;
<span class="keyword">delete</span> <span class="built_in">window</span>.age;
<span class="keyword">delete</span> <span class="built_in">window</span>.name;
<span class="built_in">console</span>.log(<span class="built_in">window</span>.age);   <span class="comment">//22</span>
<span class="built_in">console</span>.log(<span class="built_in">window</span>.name);  <span class="comment">//undefined</span>
</code></pre><a id="more"></a>
<h3 id="窗口关系与框架">窗口关系与框架</h3><ul>
<li>当页面中包含框架时，浏览器会为每一个框架创建window对象，并且保存在frames集合中</li>
<li>在frames集合中，可以通过数值索引（从0开始，从左至由，从上至下）或者框架名称来访问相应的window对象</li>
<li>top对象始终指向最高（最外）层的框架，也就是浏览器窗口</li>
<li>parent对象始终指向当前框架的直接上层框架</li>
<li>self对象始终指向window</li>
</ul>
<h3 id="窗口位置">窗口位置</h3><ul>
<li>screenLeft与screenX属性表示窗口相对于屏幕左边的位置</li>
<li><p>screenRight与screenY属性表示窗口相对于屏幕上边的位置<br>为了跨浏览器使用，可以利用二元操作符:</p>
<pre><code><span class="keyword">var</span> left = (<span class="keyword">typeof</span> <span class="built_in">window</span>.screenLeft == <span class="string">"number"</span>) ? <span class="built_in">window</span>.screenLeft : <span class="built_in">window</span>.screenX;

<span class="keyword">var</span> top = (<span class="keyword">typeof</span> <span class="built_in">window</span>.screenTop == <span class="string">"number"</span>) ? <span class="built_in">window</span>.screenTop : <span class="built_in">window</span>.screenY;
</code></pre></li>
<li><p>moveTo(x,y)将窗口移动到坐标值为(x,y)的位置</p>
</li>
<li>moveBy(x,y)将窗口在水平方向移动x个像素，在垂直方向移动y个像素</li>
</ul>
<h3 id="窗口大小">窗口大小</h3><ul>
<li>outerWidth和outerHeight表示浏览器窗口本身的尺寸</li>
<li><p>innerWidth和innerHeight表示页面视图区的大小<br>这样说可能不如代码直观，比如下面这段代码：</p>
<pre><code>console.<span class="built_in">log</span><span class="params">(<span class="string">"-----窗口大小-----"</span>)</span>;
console.<span class="built_in">log</span><span class="params">(<span class="string">"window.outerHeight = "</span> + window.outerHeight)</span>;
console.<span class="built_in">log</span><span class="params">(<span class="string">"window.innerHeight = "</span> + window.innerHeight)</span>;
</code></pre></li>
</ul>
<p>效果如下：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/size.jpg-blogImg" alt="窗口大小"></p>
<p>也可以通过<code>document.documentElememt.clientWidth</code>和<code>document.documentElement.clientHeight</code>来获取页面视图区的大小</p>
<p>使用 <code>resizeTo()</code> 和 <code>resizeBy()</code>方法可以调整浏览器窗口的大小。这两个方法都接收两个<br>参数，其中 <code>resizeTo()</code> 接收浏览器窗口的新宽度和新高度， <code>resizeBy()</code>接收新窗口与原窗口的宽度和高度之差。</p>
<blockquote>
<p>这两种方法可能被浏览器禁用，对于resizeTo,chrome只支持resize新建的空白窗口，可以这样使用：</p>
</blockquote>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">openWin</span><span class="params">()</span>{</span>
    myWindow=window.<span class="keyword">open</span>(<span class="string">''</span>,<span class="string">''</span>,<span class="string">'width=200,height=200'</span>);
}
<span class="function"><span class="keyword">function</span> <span class="title">moveWin</span><span class="params">()</span>{</span>
    myWindow.moveTo(<span class="number">0</span>,<span class="number">0</span>);
    myWindow.resizeTo(<span class="number">500</span>,<span class="number">500</span>)
    myWindow.focus();
}
&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"button"</span> value=<span class="string">"Open 'myWindow'"</span> onclick=<span class="string">"openWin()"</span> /&gt;
&lt;<span class="keyword">br</span> /&gt;&lt;<span class="keyword">br</span> /&gt;
&lt;<span class="built_in">input</span> <span class="built_in">type</span>=<span class="string">"button"</span> value=<span class="string">"Move 'myWindow'"</span> onclick=<span class="string">"moveWin()"</span> /&gt;
</code></pre><h3 id="打开窗口">打开窗口</h3><p>使用<code>window.open</code>可以打开新的浏览器窗口。这个方法可以接收 4 个参数：要加载的 URL、窗口目标、一个特性字符串以及一个表示新页面是否取代浏览器历史记录中当前加载页面的布尔值。通常只须传递第一个参数，最后一个参数只在不打开新窗口的情况下使用。</p>
<p>如果给<code>window.open()</code>传递了第二个参数，而且该参数是已有窗口或框架的名称，那么就会在具有该名称的窗口或框架中加载第一个参数指定的 URL。<br>比如：</p>
<pre><code><span class="built_in">window</span>.open(<span class="string">'http://www.supce.com'</span>,<span class="string">'_blank'</span>,<span class="string">'height=200,widht=200,top=5,left=5,resizable=yes'</span>);
</code></pre><p>打开一个新的可以调整大小的窗口，窗口初始大小为200×200像素，并且距屏幕顶部和左边各5像素。</p>
<p>也可以使用<code>window.close()</code>来关闭页面窗口。</p>
<h3 id="超时调用和间歇调用">超时调用和间歇调用</h3><ul>
<li>超时调用：<code>setTimeout()</code><br>它接受两个参数：要执行的代码和以毫秒表示的时间。其中，第一个参数可以是一个包含 JavaScript 代码的字符串，也可以是一个函数。<br>该方法会返回一个数值ID，表示该超时调用。</li>
<li><p>取消超时调用：<code>clearTimeout()</code><br>比如:</p>
<pre><code><span class="comment">//设置取消调用</span>
<span class="keyword">var</span> timeout = setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>{
    alert(<span class="string">"Nico"</span>);
},<span class="number">2000</span>);
<span class="comment">//取消超时调用</span>
clearTimeout(timeout);
</code></pre></li>
<li><p>间歇调用：<code>setInterval()</code><br>它的参数与<code>setTimeout</code>相同，也会返回一个数值ID，表示该间歇调用。</p>
<pre><code>var num = <span class="number">0</span>;
var <span class="built_in">max</span> = <span class="number">5</span>;
var intervalId = null;
<span class="function"><span class="keyword">function</span> <span class="title">interval</span><span class="params">()</span>{</span>
    console.<span class="built_in">log</span><span class="params">(<span class="string">"Nico"</span>)</span>;
    num ++;
    <span class="keyword">if</span><span class="params">(num == max)</span>{
        clearInterval<span class="params">(intervalId)</span>;
    }
}
intervalId = setInterval<span class="params">(interval,<span class="number">1000</span>)</span>;
</code></pre><p>以上代码，每一秒输出一次nico，输出5次后结束</p>
</li>
</ul>
<blockquote>
<p>间歇调用也可以使用超时调用来实现，比如：</p>
</blockquote>
<pre><code>var num = <span class="number">0</span>;
var <span class="built_in">max</span> = <span class="number">5</span>;
<span class="function"><span class="keyword">function</span> <span class="title">timeout</span><span class="params">()</span>{</span>
    console.<span class="built_in">log</span><span class="params">(<span class="string">"Nico"</span> + num)</span>;
    num ++;
    <span class="keyword">if</span><span class="params">(num &lt; max)</span>{
        setTimeout<span class="params">(timeout,<span class="number">1000</span>)</span>;
    }<span class="keyword">else</span>{
        console.<span class="built_in">log</span><span class="params">(<span class="string">"complete"</span>)</span>;
    }
}
setTimeout<span class="params">(timeout,<span class="number">1000</span>)</span>;
</code></pre><h3 id="系统对话框">系统对话框</h3><ul>
<li>警告对话框：<code>alert()</code></li>
<li>确认对话框：<code>confirm()</code><br>该方法返回一个布尔值，true表示点击了OK，false表示点击了Cancel，或者关闭了对话框</li>
<li>文本输入框：<code>prompt()</code><br>如果用户单击了OK，则<code>prompt()</code>返回文本输入域的值。如果用户单击了Cancel或没有单击OK而是通过其他方式关闭了对话框，则该方法返回null。</li>
</ul>
<h2 id="Location对象">Location对象</h2><p><code>window.location</code>和<code>document.location</code>引用的是同一个对象。Location 对象包含有关当前URL的信息以及与当前窗口中加载的文档有关的信息。</p>
<h3 id="Location对象的属性">Location对象的属性</h3><table>
<thead>
<tr>
<th>属性</th>
<th>描述 </th>
</tr>
</thead>
<tbody>
<tr>
<td>hash</td>
<td>设置或返回从井号 (#) 开始的 URL（锚）。</td>
</tr>
<tr>
<td>host</td>
<td>设置或返回主机名和当前 URL 的端口号。</td>
</tr>
<tr>
<td>hostname</td>
<td>设置或返回当前 URL 的主机名。</td>
</tr>
<tr>
<td>href</td>
<td>设置或返回完整的 URL。</td>
</tr>
<tr>
<td>pathname</td>
<td>设置或返回当前 URL 的路径部分。</td>
</tr>
<tr>
<td>port</td>
<td>设置或返回当前 URL 的端口号。</td>
</tr>
<tr>
<td>protocol</td>
<td>设置或返回当前 URL 的协议。</td>
</tr>
<tr>
<td>search</td>
<td>设置或返回从问号 (?) 开始的 URL（查询部分）</td>
</tr>
</tbody>
</table>
<p>如果URL查询字符串为多个，可以使用下面的函数</p>
<pre><code>function getQueryStringArgs(){
    //<span class="keyword">var</span> qs = location.search.length&gt;<span class="number">0</span> ? location.search.substring(<span class="number">1</span>) : <span class="string">""</span>;
    <span class="keyword">var</span> qs = <span class="string">"a=1&amp;b=2&amp;c=3"</span>;
    <span class="keyword">var</span> args = {},
    items = qs.length ? qs.split(<span class="string">"&amp;"</span>) : [],
    name = null,
    value = null;
    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;items.length;i++){
        <span class="keyword">var</span> item = items[i].split(<span class="string">"="</span>);
        name = decodeURIComponent(item[<span class="number">0</span>]);
        value = decodeURIComponent(item[<span class="number">1</span>]);
        <span class="keyword">if</span>(name.length){
            args[name] = value;
        }
    }
    <span class="keyword">return</span> args;
}
<span class="keyword">var</span> <span class="literal">result</span> = getQueryStringArgs();
console.log(<span class="literal">result</span>[<span class="string">"a"</span>]+<span class="literal">result</span>[<span class="string">"b"</span>]+<span class="literal">result</span>[<span class="string">"c"</span>]);
</code></pre><h3 id="页面跳转">页面跳转</h3><ol>
<li>有历史记录<ul>
<li><code>location.assign(&quot;http:/www.supce.com&quot;)</code></li>
<li><code>window.location = &quot;http:/www.supce.com&quot;</code></li>
<li><code>location.href = &quot;http:/www.supce.com&quot;</code></li>
</ul>
</li>
<li>不产生历史记录<ul>
<li><code>location.replace(&quot;http:/www.supce.com&quot;)</code></li>
</ul>
</li>
<li>重新加载<ul>
<li><code>location.reload()       //有可能从缓存中加载</code></li>
<li><code>location.reload(true)   //从服务器端重新加载</code>  </li>
</ul>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="BOM">BOM</h1><p>BOM是browser object model的缩写，即：浏览器对象模型。BOM主要用于访问浏览器的功能，这些功能与网页的内容无关。</p>
<h2 id="window对象">window对象</h2><p>BOM的核心对象是window，它表示浏览器的一个实例。在浏览器中，window对象既是通过JavaScript访问浏览器窗口的一个接口，也是ECMAScript规定的Global对象。<br>因此，在全局作用域中声明的变量和函数都会成为window对象的属性和方法。但是，声明的全局变量不能通过delete操作符删除，而直接在window对象上定义的属性可以通过delete删除。</p>
<pre><code><span class="keyword">var</span> age = <span class="number">22</span>;
<span class="built_in">window</span>.name = <span class="string">"Nico"</span>;
<span class="keyword">delete</span> <span class="built_in">window</span>.age;
<span class="keyword">delete</span> <span class="built_in">window</span>.name;
<span class="built_in">console</span>.log(<span class="built_in">window</span>.age);   <span class="comment">//22</span>
<span class="built_in">console</span>.log(<span class="built_in">window</span>.name);  <span class="comment">//undefined</span>
</code></pre>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[函数表达式]]></title>
    <link href="http://blog.supce.com/2016/07/14/JavaScript%E4%B9%8B%E5%9F%BA%E7%A1%806/"/>
    <id>http://blog.supce.com/2016/07/14/JavaScript之基础6/</id>
    <published>2016-07-13T16:00:00.000Z</published>
    <updated>2016-07-14T11:46:08.233Z</updated>
    <content type="html"><![CDATA[<h1 id="闭包">闭包</h1><hr>
<p>闭包，在JavaScript中很有意思。JavaScript是链式作用域，所以可以将函数内部与函数外部连接起来。由于在Javascript中，只有函数内部的子函数才能读取函数内部的变量，因此可以把内部的函数返回，通过返回的函数就能够读取到函数内部的变量。<br>于是，可以把闭包简单理解成定义在一个函数内部的函数，并且该内部函数访问了外部的变量。</p>
<pre><code>console.log(<span class="string">"-----闭包-----"</span>);
function <span class="function"><span class="title">fun</span><span class="params">()</span>{</span>
    <span class="variable"><span class="keyword">var</span> a</span> = <span class="number">1</span>;
    <span class="keyword">return</span> function f(){
        console.log(a);
    };
}
<span class="variable"><span class="keyword">var</span> result</span> = <span class="function"><span class="title">fun</span><span class="params">()</span><span class="params">()</span>;</span>
</code></pre><a id="more"></a>
<h2 id="闭包与变量">闭包与变量</h2><p>链式作用域会带来一个问题，在闭包中，取得的包含函数的变量，是其最终值。举个例子</p>
<pre><code>console.log(<span class="string">"-----闭包与变量-----"</span>);
function createFunctions(){
    <span class="keyword">var</span> <span class="type">array</span> = new <span class="type">Array</span>();
    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++){
        <span class="type">array</span>[i] = function(){
            <span class="keyword">return</span> i;
        }
    }
    <span class="keyword">return</span> <span class="type">array</span>;
}
<span class="keyword">var</span> <span class="literal">result</span> = createFunctions();
console.log(<span class="literal">result</span>[<span class="number">0</span>]());  //<span class="number">10</span>
</code></pre><p>上面的例子中，得到的是10并不是0<br>可以通过建立一个匿名函数。并且立即执行该匿名函数来解决</p>
<pre><code>function createFunctions(){
    <span class="keyword">var</span> <span class="type">array</span> = new <span class="type">Array</span>();
    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++){
        <span class="type">array</span>[i] = function(num){
            <span class="keyword">return</span> function(){
                <span class="keyword">return</span> num;
            }
        }(i);
    }
    <span class="keyword">return</span> <span class="type">array</span>;
}
<span class="keyword">var</span> <span class="literal">result</span> = createFunctions();
console.log(<span class="literal">result</span>[<span class="number">0</span>]());  //<span class="number">0</span>
</code></pre><h2 id="关于this对象">关于this对象</h2><pre><code><span class="built_in">console</span>.log(<span class="string">"-----关于this对象-----"</span>);
<span class="keyword">var</span> name = <span class="string">"The Windows"</span>;
<span class="keyword">var</span> o = {
    name : <span class="string">"The O"</span>,
    getNameFun : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
            <span class="keyword">return</span> <span class="keyword">this</span>.name;
        };
    }
}
<span class="built_in">console</span>.log(o.getNameFun()());  <span class="comment">//The Windows</span>
<span class="keyword">var</span> object = {
    name : <span class="string">"The Object"</span>,
    getNameFun : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
        <span class="keyword">var</span> that = <span class="keyword">this</span>;
        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
            <span class="keyword">return</span> that.name;
        };
    }
}
<span class="built_in">console</span>.log(object.getNameFun()());  <span class="comment">//The Object</span>
<span class="keyword">var</span> myObject = {
    name :  <span class="string">"myObject"</span>,
    getName : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
        <span class="keyword">return</span> <span class="keyword">this</span>.name;
    }
}
<span class="built_in">console</span>.log(myObject.getName());
<span class="built_in">console</span>.log((fun=myObject.getName)());  <span class="comment">//The Windows</span>
</code></pre><h1 id="模仿块级作用域">模仿块级作用域</h1><p>JavaScript 没有块级作用域的概念。这意味着在块语句中定义的变量，实际上是在包含在函数中而非语句中创建的</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">fun</span><span class="params">(num)</span>{</span>
    <span class="keyword">for</span><span class="params">(var i=<span class="number">0</span>;i&lt;num;i++)</span>{
        <span class="comment">//do something</span>
    }
    console.<span class="built_in">log</span><span class="params">(i)</span>;
}
fun<span class="params">(<span class="number">5</span>)</span>;  <span class="comment">//5</span>
</code></pre><p>可以看出变量i并不会如同在C++和Java等语言中，随着循环的结束而销毁，即便是重新声明，不初始化，也不会改变它的值。<br>可以利用匿名函数来膜（模？）仿块级作用域来解决这个问题</p>
<pre><code><span class="list">(<span class="keyword">function</span><span class="list">()</span><span class="collection">{
    //块级作用域
}</span>)</span><span class="list">()</span><span class="comment">;</span>
</code></pre><p>使用这种方式，可以限制向全局作用域中添加过多的变量和函数，同时减少闭包占用内存的问题。</p>
<h1 id="私有变量">私有变量</h1><p>JavaScript中任何在函数中定义的变量，都可以认为是私有变量，因为不能在函数的外部访问这些变量，但是可以通过闭包来访问这些变量。私有变量包括函数的参数、局部变量和在函数内部定义的其他函数。</p>
<pre><code>console.log(<span class="string">"---私有变量---"</span>);
function <span class="keyword">Person</span>(name){
    this.age = 22;
    this.getName = function(){
        return name;
    };
    this.setName = function(value){
        name = value;
    }
}
var <span class="keyword">person</span> = new <span class="keyword">Person</span>(<span class="string">"Nico"</span>);
console.log(<span class="keyword">person</span>.age);         //22
console.log(<span class="keyword">person</span>.name);        //undefined
console.log(<span class="keyword">person</span>.getName());   //Nico
</code></pre><p>上面的例子中有个问题，就是每个实例都会创建一组相同的方法。为了解决这个问题，可以使用静态私有变量。</p>
<h2 id="静态私有变量">静态私有变量</h2><pre><code>console.log(<span class="string">"-----静态私有变量-----"</span>);
(function(){
    var name = <span class="string">""</span>;
    <span class="keyword">Person</span> = function(value){
        name = value;
    }
    <span class="keyword">Person</span>.prototype.getName = function(){
        return name;
    };
    <span class="keyword">Person</span>.prototype.setName = function(value){
        name = value;
    }
})();
var staticPerson1 = new <span class="keyword">Person</span>(<span class="string">"Nico"</span>);
var staticPerson2 = new <span class="keyword">Person</span>(<span class="string">"Sora"</span>);
console.log(staticPerson1.getName());   //Sora
</code></pre><p>这个例子中的 Person 构造函数与 getName() 和 setName()方法一样，都有权访问私有变量 name 。在这种模式下，变量 name就变成了一个静态的、由所有实例共享的属性。也就是说，在一个实例上调用 setName() 会影响所有实例。而调用 setName() 或新建一个 Person 实例都会赋予 name属性一个新值。结果就是所有实例都会返回相同的值。<br>以这种方式创建静态私有变量会因为使用原型而增进代码复用，但每个实例都没有自己的私有变量。</p>
<h2 id="模块模式">模块模式</h2><p>模块模式主要是为单列创建私有变量和特权方法的。其语法如下：</p>
<pre><code><span class="built_in">console</span>.log(<span class="string">"-----模块模式-----"</span>);
<span class="keyword">var</span> single = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">var</span> privateProperty = <span class="string">"private"</span>;
    <span class="function"><span class="keyword">function</span> <span class="title">privateFun</span>(<span class="params"></span>)</span>{
        <span class="keyword">return</span> <span class="string">"privateFun"</span>
    };
    <span class="keyword">return</span> {
        publicProperty : <span class="string">"public"</span>,
        publicFun : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
            <span class="keyword">return</span> <span class="string">"publicFun"</span>;
        },
        getPrivate : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
            <span class="keyword">return</span> privateProperty;
        }
    };
}();
<span class="built_in">console</span>.log(single.publicFun());   <span class="comment">//publicFun</span>
<span class="built_in">console</span>.log(single.getPrivate());  <span class="comment">//private</span>
</code></pre><p>模块模式使用了一个返回对象的匿名函数。在这个匿名函数内部，首先定义了私有变量和函数。然后，将一个对象字面量作为函数的值返回。返回的对象字面量中只包含可以公开的属性和方法。<br>由于这个对象是在匿名函数内部定义的，因此它的公有方法有权访问私有变量和函数。从本质上来讲，这个对象字面量定义的是单例的公共接口。这种模式在需要对单例进行某些初始化，同时又需要维护其私有变量时是非常有用的。例如：</p>
<pre><code><span class="keyword">var</span> application = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">var</span> components = <span class="keyword">new</span> <span class="built_in">Array</span>();   <span class="comment">//私有变量</span>
    components.push(<span class="keyword">new</span> BaseComponent());  <span class="comment">//私有变量初始化</span>
    <span class="comment">//公共方法</span>
    <span class="keyword">return</span> {
        getComponentCount : <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
            <span class="keyword">return</span> components.length;
        },
        registerComponent : <span class="function"><span class="keyword">function</span>(<span class="params">component</span>)</span>{
            <span class="keyword">if</span>(<span class="keyword">typeof</span> component == <span class="string">"object"</span>){
                components.push(component);
            }
        }
    };
}();
</code></pre><p>对于必须创建一个对象并以某些数据对其进行初始化，同时还要公开一些能够访问这些私有数据的方法，适合模块模式。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="闭包">闭包</h1><hr>
<p>闭包，在JavaScript中很有意思。JavaScript是链式作用域，所以可以将函数内部与函数外部连接起来。由于在Javascript中，只有函数内部的子函数才能读取函数内部的变量，因此可以把内部的函数返回，通过返回的函数就能够读取到函数内部的变量。<br>于是，可以把闭包简单理解成定义在一个函数内部的函数，并且该内部函数访问了外部的变量。</p>
<pre><code>console.log(<span class="string">"-----闭包-----"</span>);
function <span class="function"><span class="title">fun</span><span class="params">()</span>{</span>
    <span class="variable"><span class="keyword">var</span> a</span> = <span class="number">1</span>;
    <span class="keyword">return</span> function f(){
        console.log(a);
    };
}
<span class="variable"><span class="keyword">var</span> result</span> = <span class="function"><span class="title">fun</span><span class="params">()</span><span class="params">()</span>;</span>
</code></pre>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[对象的创建与继承]]></title>
    <link href="http://blog.supce.com/2016/07/13/JavaScript%E4%B9%8B%E5%9F%BA%E7%A1%805/"/>
    <id>http://blog.supce.com/2016/07/13/JavaScript之基础5/</id>
    <published>2016-07-12T16:00:00.000Z</published>
    <updated>2016-07-13T11:15:28.855Z</updated>
    <content type="html"><![CDATA[<p><em>再把JavaScript中对象的创建与继承复习下</em></p>
<h1 id="对象的创建">对象的创建</h1><hr>
<h2 id="工厂模式">工厂模式</h2><pre><code>console.log(<span class="string">"-----工厂模式-----"</span>);
    function CreatePerson(name,age){
        var o = new Object();
        o.name = name;
        o.age = age;
        o.sayName = function(){
            return name;
        };
        return o;
    }
var <span class="keyword">person</span> = CreatePerson(<span class="string">"Nico"</span>,28);
console.log(<span class="keyword">person</span>.sayName());
</code></pre><p>工厂模式虽然解决了对象的创建问题，但是并没有解决对象的识别问题。<br><code>alert(person.constructor);</code> 得到的并不是想要的结果。<br><a id="more"></a></p>
<h2 id="构造函数模式">构造函数模式</h2><pre><code>console.log(<span class="string">"-----构造函数模式-----"</span>);
    function <span class="keyword">Person</span>(name,age){
        this.name = name;
        this.age = age;
        this.sayName = function(){
            return this.name;
        };
    }
var person1 = new <span class="keyword">Person</span>(<span class="string">"Sora"</span>,28);
var person2 = new <span class="keyword">Person</span>(<span class="string">"Mimo"</span>,29);
console.log(person1.sayName());
console.log(person1.constructor==<span class="keyword">Person</span>);  //true
console.log(person1.sayName == person2.sayName); //false 
</code></pre><p>构造函数模式虽然解决了类的识别问题，但是带来了另一个问题：<em>构造函数中的每个方法都要在每个实例上重新创建一遍</em>。虽然可以把函数的创建放在构造函数外部，通过设置属性等于外部函数来解决，但这样跟对象封装的初衷不相符，而且造成过多的全局函数。</p>
<h2 id="原型模式">原型模式</h2><pre><code>console.log(<span class="string">"-----原型模式-----"</span>);
    function <span class="keyword">Person</span>(){
    }
    <span class="keyword">Person</span>.prototype = {
        constructor : <span class="keyword">Person</span>, 
        name : <span class="string">"Nico"</span>,
        age : <span class="string">"28"</span>,
        friends : <span class="comment">["Mimo"]</span>,
        sayName : function(){
            return this.name;
        }
    };
var person1 = new <span class="keyword">Person</span>();
var person2 = new <span class="keyword">Person</span>();
person2.friends.push(<span class="string">"Pile"</span>);
console.log(person1.sayName==person2.sayName); //true
console.log(person1.friends);  //<span class="comment">["Mimo", "Pile"]</span>
</code></pre><p>使用原型模式会出现引用类型的数据共享问题，于是引入了组合使用构造函数与原型模式</p>
<h2 id="组合模式">组合模式</h2><pre><code>console.log(<span class="string">"-----组合使用-----"</span>)
    function <span class="keyword">Person</span>(name,age){
        this.name = name;
        this.age = age;
        this.friends = <span class="comment">[]</span>;
    };
    <span class="keyword">Person</span>.prototype={
        constructor : <span class="keyword">Person</span>,
        sayName : function(){
            return this.name;
        }
    }
var person1 = new <span class="keyword">Person</span>();
var person2 = new <span class="keyword">Person</span>();
person1.friends.push(<span class="string">"Mimo"</span>);
person2.friends.push(<span class="string">"Pile"</span>);
console.log(person1.sayName==person2.sayName); //true
console.log(person1.friends);  //<span class="comment">["Mimo"]</span>
</code></pre><p>利用组合模式解决了之前的几个问题。这种解决问题的方式特别像学习《操作系统》课程中问题的解决方式。</p>
<h2 id="动态原型模式">动态原型模式</h2><p>动态原型模式主要是把对象的创建信息都封装于对象的构造函数中</p>
<pre><code>console.log(<span class="string">"-----动态原型-----"</span>);
    function <span class="keyword">Person</span>(name,age){
        this.name = name;
        this.age = age;
        if(typeof sayName != 'function'){
            <span class="keyword">Person</span>.prototype.sayName = function(){
                return this.name;
            }
        }
    }
</code></pre><p><em>使用动态原型模式时，不能使用对象字面量重写原型。如果在已经创建了实例的情况下重写原型，那么就会切断现有实例与新原型之间的联系。</em></p>
<h2 id="寄生构造函数">寄生构造函数</h2><pre><code><span class="function"><span class="keyword">function</span> <span class="title">Person</span>(<span class="params">name,age</span>)</span>{
    <span class="keyword">var</span> o = <span class="keyword">new</span> <span class="built_in">Object</span>();
    o.name = name;
    o.age = age;
    o.sayName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
        <span class="keyword">return</span> <span class="keyword">this</span>.name;
    }
    <span class="keyword">return</span> o;
}
</code></pre><p>当我们想基于原有数组创建一个更多方法的数组，但是又不想对原有数据类型进行修改，就可以使用这种模式</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">MyArray</span><span class="params">()</span></span>{
    <span class="keyword">var</span> <span class="keyword">array</span> = <span class="keyword">new</span> <span class="keyword">Array</span>();
    <span class="keyword">array</span>.push.apply(<span class="keyword">array</span>,arguments);
    <span class="keyword">array</span>.toMyString = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>{
        <span class="keyword">return</span> this.join(<span class="string">"|"</span>);
    }
    <span class="keyword">return</span> <span class="keyword">array</span>;
}
<span class="keyword">var</span> myarray = <span class="keyword">new</span> MyArray(<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>);
console.log(myarray.toMyString());  <span class="comment">//1|2|3</span>
</code></pre><h1 id="对象的继承">对象的继承</h1><hr>
<blockquote>
<p>在JavaScript中，主要还是利用原型链来实现继承的。</p>
<h2 id="原型链">原型链</h2><pre><code><span class="built_in">console</span>.log(<span class="string">"-----原型链-----"</span>);
<span class="function"><span class="keyword">function</span> <span class="title">SuperClass</span>(<span class="params"></span>)</span>{
    <span class="keyword">this</span>.superProperty = <span class="string">"super"</span>;
    <span class="keyword">this</span>.friends = [<span class="string">"nico"</span>];
}
SuperClass.prototype.getSuperProperty = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">return</span> <span class="keyword">this</span>.superProperty;
}
<span class="function"><span class="keyword">function</span> <span class="title">SubClass</span>(<span class="params"></span>)</span>{
    <span class="keyword">this</span>.subProperty = <span class="string">"sub"</span>;
}
SubClass.prototype = <span class="keyword">new</span> SuperClass();
SubClass.prototype.getSubProperty = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">return</span> <span class="keyword">this</span>.subProperty;
}
<span class="keyword">var</span> instance1 = <span class="keyword">new</span> SubClass();
<span class="keyword">var</span> instance2 = <span class="keyword">new</span> SubClass();
<span class="built_in">console</span>.log(instance1.getSuperProperty());  <span class="comment">//super</span>
<span class="built_in">console</span>.log(instance2.constructor);  <span class="comment">//superclass</span>
instance1.friends.push(<span class="string">"mimo"</span>);  
<span class="built_in">console</span>.log(instance2.friends);  <span class="comment">//["nico", "mimo"]</span>
</code></pre></blockquote>
<p>使用原型会带来两个问题</p>
<ul>
<li>父类中的属性如果是引用类型，会在子类中出现共享问题</li>
<li>在创建子类实例时，不能通过父类的构造函数来传递参数<h2 id="借用构造函数">借用构造函数</h2><pre><code><span class="built_in">console</span>.log(<span class="string">"-----借用构造函数-----"</span>);
<span class="function"><span class="keyword">function</span> <span class="title">SuperClass</span>(<span class="params">name</span>)</span>{
    <span class="keyword">this</span>.name = name;
    <span class="keyword">this</span>.friends = [<span class="string">"nico"</span>];
}
SuperClass.prototype.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">return</span> <span class="keyword">this</span>.name;
}
<span class="function"><span class="keyword">function</span> <span class="title">SubClass</span>(<span class="params">age</span>)</span>{
    SuperClass.call(<span class="keyword">this</span>,<span class="string">"sora"</span>);
    <span class="keyword">this</span>.age = age;
}
<span class="keyword">var</span> instance1 = <span class="keyword">new</span> SubClass(<span class="number">21</span>);
<span class="keyword">var</span> instance2 = <span class="keyword">new</span> SubClass(<span class="number">22</span>);
instance1.friends.push(<span class="string">"mimo"</span>);
<span class="built_in">console</span>.log(instance2.friends);  <span class="comment">//["nico"]</span>
<span class="built_in">console</span>.log(instance1.getName);  <span class="comment">//undefined</span>
</code></pre></li>
</ul>
<p>借用构造函数解决了引用类型的问题，但是带来了其他的问题，在超类型中原型定义的方法对于子类来说是不可见的，因此，也就不能函数复用了。</p>
<h2 id="组合继承">组合继承</h2><pre><code><span class="built_in">console</span>.log(<span class="string">"-----组合继承-----"</span>);
<span class="function"><span class="keyword">function</span> <span class="title">SuperClass</span>(<span class="params">name,friends</span>)</span>{
    <span class="keyword">this</span>.name = name;
    <span class="keyword">this</span>.friends = friends;
}
SuperClass.prototype.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">return</span> <span class="keyword">this</span>.name;
}
<span class="function"><span class="keyword">function</span> <span class="title">SubClass</span>(<span class="params">name,friends,age</span>)</span>{
    SuperClass.call(<span class="keyword">this</span>,name,friends);
    <span class="keyword">this</span>.age = age;
}
SubClass.prototype = <span class="keyword">new</span> SuperClass();
SubClass.prototype.getAge = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">return</span> <span class="keyword">this</span>.age;
}
<span class="keyword">var</span> instance1 = <span class="keyword">new</span> SubClass(<span class="string">"sora"</span>,[<span class="string">"mimo"</span>],<span class="number">28</span>);
<span class="keyword">var</span> instance2 = <span class="keyword">new</span> SubClass(<span class="string">"pile"</span>,[<span class="string">"kussn"</span>],<span class="number">27</span>);
instance1.friends.push(<span class="string">"emi"</span>);
<span class="built_in">console</span>.log(instance1.friends);  <span class="comment">//["mimo", "emi"]</span>
<span class="built_in">console</span>.log(instance2.friends);  <span class="comment">//kussn</span>
<span class="built_in">console</span>.log(instance1.getName() + instance1.getAge()); <span class="comment">//sora28</span>
</code></pre><p>组合继承是将原型链与借用构造函数二者的长处结合起来，使用原型链实现对原型属性和方法的继承，通过借用构造函数实现对实例属性的继承。</p>
<h2 id="原型式继承">原型式继承</h2><pre><code>console.log(<span class="string">"-----原型式继承-----"</span>);
function object(o){
    function F(){}
    F.prototype = o;
    return new F();
}
var <span class="keyword">person</span> = {
    name:<span class="string">"sora"</span>,
    friends:<span class="comment">["mimo"]</span>
}
var person1 = object(<span class="keyword">person</span>);
person1.name = <span class="string">"pile"</span>;
person1.friends.push(<span class="string">"emi"</span>);
var person2 = object(<span class="keyword">person</span>);
person2.name = <span class="string">"kussn"</span>;
person2.friends.push(<span class="string">"rippi"</span>);
console.log(<span class="keyword">person</span>.friends);   //<span class="comment">["mimo", "emi", "rippi"]</span>
console.log(person2.friends);  //<span class="comment">["mimo", "emi", "rippi"]</span>
</code></pre><p>object其实是对传入的对象进行了一次浅复制 对于引用类型来说，跟原型链一样是共享的</p>
<h2 id="寄生式继承">寄生式继承</h2><pre><code>console.log(<span class="string">"-------寄生式继承--------"</span>);
var <span class="keyword">person</span> = {
    name:<span class="string">"sora"</span>,
    friends:<span class="comment">["mimo"]</span>
}
function createAnother(original){
    var clone = Object.create(original);
    clone.sayName = function(){
        return this.name;
    };
    return clone;
}
var instance = createAnother(<span class="keyword">person</span>);
console.log(instance.sayName());
</code></pre><p>寄生式继承其实与寄生构造函数和工厂模式类似，创建一个封装继承的函数，然后在函数中对传入的对象进行某种增强，最后返回被增强的对象</p>
<h2 id="寄生组合式继承">寄生组合式继承</h2><p>组合继承会有一个问题，就是无论什么情况下，都会调用两次超类型构造函数。为了解决这个问题，引入了寄生组合式继承</p>
<pre><code><span class="function"><span class="keyword">function</span> <span class="title">inheritPrototype</span>(<span class="params">subType,superType</span>)</span>{
    <span class="keyword">var</span> prototype = <span class="built_in">Object</span>.create(superType.prototype);
    prototype.constructor = subType;
    subType.prototype = prototype;
}
<span class="function"><span class="keyword">function</span> <span class="title">SuperType</span>(<span class="params">name,friends</span>)</span>{
    <span class="keyword">this</span>.name = name;
    <span class="keyword">this</span>.friends = friends;
}
SuperType.prototype.getName = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">return</span> <span class="keyword">this</span>.name;
}
<span class="function"><span class="keyword">function</span> <span class="title">SubType</span>(<span class="params">name,friends,age</span>)</span>{
    SuperType.call(<span class="keyword">this</span>,name,friends);
    <span class="keyword">this</span>.age = age;
}
inheritPrototype(SubType,SuperType);
SubType.prototype.getAge = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
    <span class="keyword">return</span> <span class="keyword">this</span>.age;
}
<span class="keyword">var</span> person1 = <span class="keyword">new</span> SubType(<span class="string">"Nico"</span>,[<span class="string">"emi"</span>],<span class="number">22</span>)
<span class="keyword">var</span> person2 = <span class="keyword">new</span> SubType(<span class="string">"Sora"</span>,[<span class="string">"kussn"</span>],<span class="number">33</span>);
person1.friends.push(<span class="string">"Mimo"</span>);
<span class="built_in">console</span>.log(person1.getName() + person1.getAge() + person1.friends);
<span class="built_in">console</span>.log(person2.getName() + person2.getAge() + person2.friends);
</code></pre><p>其实在继承过程中，不必为了指定子类型的原型而调用超类型的构造函数。子类型可以利用寄生式继承来继承超类型的原型。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>再把JavaScript中对象的创建与继承复习下</em></p>
<h1 id="对象的创建">对象的创建</h1><hr>
<h2 id="工厂模式">工厂模式</h2><pre><code>console.log(<span class="string">"-----工厂模式-----"</span>);
    function CreatePerson(name,age){
        var o = new Object();
        o.name = name;
        o.age = age;
        o.sayName = function(){
            return name;
        };
        return o;
    }
var <span class="keyword">person</span> = CreatePerson(<span class="string">"Nico"</span>,28);
console.log(<span class="keyword">person</span>.sayName());
</code></pre><p>工厂模式虽然解决了对象的创建问题，但是并没有解决对象的识别问题。<br><code>alert(person.constructor);</code> 得到的并不是想要的结果。<br>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我胡汉三又回来了]]></title>
    <link href="http://blog.supce.com/2016/07/13/Comeback/"/>
    <id>http://blog.supce.com/2016/07/13/Comeback/</id>
    <published>2016-07-12T16:00:00.000Z</published>
    <updated>2016-07-13T01:44:49.151Z</updated>
    <content type="html"><![CDATA[<p>今天开始有时间写一些自己的东西了 O(∩_∩)O哈！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天开始有时间写一些自己的东西了 O(∩_∩)O哈！</p>
]]>
    </summary>
    
      <category term="心情杂记" scheme="http://blog.supce.com/tags/%E5%BF%83%E6%83%85%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RegExp类型]]></title>
    <link href="http://blog.supce.com/2016/05/25/JavaScript%E4%B9%8BRegExp%E7%B1%BB%E5%9E%8B/"/>
    <id>http://blog.supce.com/2016/05/25/JavaScript之RegExp类型/</id>
    <published>2016-05-24T16:00:00.000Z</published>
    <updated>2016-05-25T03:51:07.516Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>今天用到了JavaScript的RegExp，顺便把这部分内容复习了下，敲了敲demo<br>课题组要结题，断更了一段时间，以后会慢慢恢复正常</p>
</blockquote>
<h1 id="RegExp类型">RegExp类型</h1><hr>
<p>RegExp 对象表示正则表达式，它是对字符串执行模式匹配的强大工具。有两种创建方式</p>
<ul>
<li>字面量<br><code>var p = /pattern/attributes;</code><br>比如：匹配第一个“bat”或“cat”，不区分大小写<br><code>var pattern = /[bc]at/i;</code></li>
<li>RegExp构造函数<br><code>var p = new RegExp(pattern,attributes);</code><br>比如：匹配第一个“bat”或“cat”，不区分大小写<br><code>var pattern = new RegExp(&quot;[bc]at&quot;,&quot;i&quot;);</code><a id="more"></a>
</li>
</ul>
<blockquote>
<p>注意双重转义</p>
</blockquote>
<pre><code><span class="keyword">var</span> pattern1 = <span class="regexp">/\[bc\]at/i</span>;
<span class="keyword">var</span> pattern2 = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"\\[bc\\]at"</span>,<span class="string">"i"</span>);  <span class="comment">//由于是字符串所以要进行双重转义</span>
</code></pre><h1 id="RegExp实例方法">RegExp实例方法</h1><p>RegExp对象的主要方法是exec和test</p>
<pre><code>$(<span class="string">"test"</span>).innerHTML += <span class="string">"&lt;/br&gt;-------无全局标识--------&lt;/br&gt;"</span>;
<span class="keyword">var</span> text = <span class="string">"cat, bat, sat, fat"</span>;
<span class="keyword">var</span> patter3 = <span class="regexp">/.at/</span>;
<span class="keyword">var</span> matches = patter3.exec(text);
$(<span class="string">"test"</span>).innerHTML += <span class="string">"mathches.index："</span>+matches.index + <span class="string">" matches[0]："</span> + matches[<span class="number">0</span>] + <span class="string">" lastIndex："</span> +patter3.lastIndex + <span class="string">"&lt;/br&gt;"</span>;
<span class="keyword">var</span> text = <span class="string">"cat, bat, sat, fat"</span>;
<span class="keyword">var</span> patter3 = <span class="regexp">/.at/</span>;
<span class="keyword">var</span> matches = patter3.exec(text);
$(<span class="string">"test"</span>).innerHTML += <span class="string">"mathches.index："</span>+matches.index + <span class="string">" matches[0]："</span> + matches[<span class="number">0</span>] + <span class="string">" lastIndex："</span> +patter3.lastIndex;
$(<span class="string">"test"</span>).innerHTML += <span class="string">"&lt;/br&gt;------带全局标识---------&lt;/br&gt;"</span>;
<span class="keyword">var</span> patter4 = <span class="regexp">/.at/g</span>;
<span class="keyword">var</span> matches = patter4.exec(text);
$(<span class="string">"test"</span>).innerHTML += <span class="string">"mathches.index："</span>+matches.index + <span class="string">" matches[0]："</span> + matches[<span class="number">0</span>] + <span class="string">" lastIndex："</span> +patter3.lastIndex + <span class="string">"&lt;/br&gt;"</span>;
<span class="keyword">var</span> text = <span class="string">"cat, bat, sat, fat"</span>;
<span class="keyword">var</span> patter3 = <span class="regexp">/.at/</span>;
<span class="keyword">var</span> matches = patter4.exec(text);
$(<span class="string">"test"</span>).innerHTML += <span class="string">"mathches.index："</span>+matches.index + <span class="string">" matches[0]："</span> + matches[<span class="number">0</span>] + <span class="string">" lastIndex："</span> +patter4.lastIndex;
$(<span class="string">"test"</span>).innerHTML += <span class="string">"&lt;/br&gt;------test方法---------&lt;/br&gt;"</span>;
<span class="keyword">var</span> text = <span class="string">"000-00-0000"</span>;
<span class="keyword">var</span> patter4 = <span class="regexp">/\d{3}-\d{2}-\d{4}/</span>;
<span class="keyword">if</span>(patter4.test(text)){
    $(<span class="string">"test"</span>).innerHTML +=  <span class="string">"The pattern was matched"</span>;
}<span class="keyword">else</span>{
    $(<span class="string">"test"</span>).innerHTML +=  <span class="string">"The pattern was not matched"</span>;
}
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/js1.jpg" alt=""></p>
<h1 id="RegExp构造函数属性">RegExp构造函数属性</h1><p>RegExp构造函数包含一些属性，这些适用于作用域中的所有正则表达式，并且基于所执行的最近一次正则表达式操作而变化。</p>
<pre><code>$(<span class="string">"test"</span>).innerHTML += <span class="string">"&lt;/br&gt;------RegExp构造函数属性---------&lt;/br&gt;"</span>;
<span class="keyword">var</span> text = <span class="string">"this has been a short summer"</span>;
<span class="keyword">var</span> patter5 = <span class="regexp">/(.)hort/g</span>;
<span class="keyword">if</span>(patter5.test(text)){
    $(<span class="string">"test"</span>).innerHTML += <span class="string">"input:"</span> + <span class="built_in">RegExp</span>.input +  <span class="string">"&lt;/br&gt;leftContext:"</span> + <span class="built_in">RegExp</span>.leftContext + 
    <span class="string">"&lt;/br&gt;rightContext:"</span> + <span class="built_in">RegExp</span>.rightContext + <span class="string">"&lt;/br&gt;lastMatch:"</span> + <span class="built_in">RegExp</span>.lastMatch +
     <span class="string">"&lt;/br&gt;lastParen:"</span> + <span class="built_in">RegExp</span>.lastParen + <span class="string">"&lt;/br&gt;multiline:"</span> + <span class="built_in">RegExp</span>.multiline;  <span class="comment">//不支持multiline</span>
}   
$(<span class="string">"test"</span>).innerHTML += <span class="string">"&lt;/br&gt;------存储捕获组的构造函数属性---------&lt;/br&gt;"</span>;
<span class="keyword">var</span> patter6 = <span class="regexp">/(..)or(.)/g</span>;
<span class="keyword">if</span>(patter6.test(text)){
    $(<span class="string">"test"</span>).innerHTML += <span class="string">"$1："</span> + <span class="built_in">RegExp</span>.$<span class="number">1</span> + <span class="string">"&lt;/br&gt;$2："</span> + <span class="built_in">RegExp</span>.$<span class="number">2</span>;
}
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/js2.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>今天用到了JavaScript的RegExp，顺便把这部分内容复习了下，敲了敲demo<br>课题组要结题，断更了一段时间，以后会慢慢恢复正常</p>
</blockquote>
<h1 id="RegExp类型">RegExp类型</h1><hr>
<p>RegExp 对象表示正则表达式，它是对字符串执行模式匹配的强大工具。有两种创建方式</p>
<ul>
<li>字面量<br><code>var p = /pattern/attributes;</code><br>比如：匹配第一个“bat”或“cat”，不区分大小写<br><code>var pattern = /[bc]at/i;</code></li>
<li>RegExp构造函数<br><code>var p = new RegExp(pattern,attributes);</code><br>比如：匹配第一个“bat”或“cat”，不区分大小写<br><code>var pattern = new RegExp(&quot;[bc]at&quot;,&quot;i&quot;);</code>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IFE Task 03]]></title>
    <link href="http://blog.supce.com/2016/05/17/JavaScript%E4%B9%8B%E5%9F%BA%E7%A1%803/"/>
    <id>http://blog.supce.com/2016/05/17/JavaScript之基础3/</id>
    <published>2016-05-16T16:00:00.000Z</published>
    <updated>2016-05-18T02:36:55.056Z</updated>
    <content type="html"><![CDATA[<h1 id="任务目的">任务目的</h1><hr>
<ul>
<li>在上一任务基础上继续JavaScript的体验</li>
<li>深入学习JavaScript的事件机制及DOM操作</li>
<li>学习事件代理机制</li>
<li>学习简单的表单验证功能</li>
<li>学习外部加载JavaScript文件<a id="more"></a>
</li>
</ul>
<h1 id="任务描述">任务描述</h1><ul>
<li>参考以下示例代码，用户输入城市名称和空气质量指数后，点击“确认添加”按钮后，就会将用户的输入在进行验证后，添加到下面的表格中，新增一行进行显示</li>
<li>用户输入的城市名必须为中英文字符，空气质量指数必须为整数</li>
<li>用户输入的城市名字和空气质量指数需要进行前后去空格及空字符处理（trim）</li>
<li>用户输入不合规格时，需要给出提示（允许用alert，也可以自行定义提示方式）</li>
<li>用户可以点击表格列中的“删除”按钮，删掉那一行的数据</li>
</ul>
<h1 id="最终代码">最终代码</h1><h2 id="html">html</h2><pre><code><span class="doctype">&lt;!DOCTYPE&gt;</span>
<span class="tag">&lt;<span class="title">html</span>&gt;</span>
  <span class="tag">&lt;<span class="title">head</span>&gt;</span>
    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">title</span>&gt;</span>IFE JavaScript Task 01<span class="tag">&lt;/<span class="title">title</span>&gt;</span>
    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"js/task16.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">head</span>&gt;</span>
<span class="tag">&lt;<span class="title">body</span>&gt;</span>
  <span class="tag">&lt;<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">label</span>&gt;</span>城市名称：<span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"aqi-city-input"</span> <span class="attribute">type</span>=<span class="value">"text"</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span><span class="tag">&lt;<span class="title">br</span>&gt;</span>
    <span class="tag">&lt;<span class="title">label</span>&gt;</span>空气质量指数：<span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"aqi-value-input"</span> <span class="attribute">type</span>=<span class="value">"text"</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span><span class="tag">&lt;<span class="title">br</span>&gt;</span>
    <span class="tag">&lt;<span class="title">button</span> <span class="attribute">id</span>=<span class="value">"add-btn"</span>&gt;</span>确认添加<span class="tag">&lt;/<span class="title">button</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
  <span class="tag">&lt;<span class="title">table</span> <span class="attribute">id</span>=<span class="value">"aqi-table"</span>&gt;</span>
  <span class="comment">&lt;!-- 
    &lt;tr&gt;
      &lt;td&gt;城市&lt;/td&gt;&lt;td&gt;空气质量&lt;/td&gt;&lt;td&gt;操作&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;北京&lt;/td&gt;&lt;td&gt;90&lt;/td&gt;&lt;td&gt;&lt;button&gt;删除&lt;/button&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;北京&lt;/td&gt;&lt;td&gt;90&lt;/td&gt;&lt;td&gt;&lt;button&gt;删除&lt;/button&gt;&lt;/td&gt;
    &lt;/tr&gt;
   --&gt;</span>
  <span class="tag">&lt;/<span class="title">table</span>&gt;</span>
<span class="tag">&lt;/<span class="title">body</span>&gt;</span>
<span class="tag">&lt;/<span class="title">html</span>&gt;</span>
</code></pre><h2 id="js">js</h2><pre><code><span class="comment">/**
 + aqiData，存储用户输入的空气指数数据
 + 示例格式：
 + aqiData = {
 +    "北京": 90,
 +    "上海": 40
 + };
 */</span>
 var $ = <span class="function"><span class="keyword">function</span><span class="params">(id)</span>{</span>
  return document.getElementById<span class="params">(id)</span>;
 }
var aqiData = {};
<span class="comment">/**
 + 从用户输入中获取数据，向aqiData中增加一条数据
 + 然后渲染aqi-list列表，增加新增的数据
 */</span>
<span class="function"><span class="keyword">function</span> <span class="title">addAqiData</span><span class="params">()</span> {</span>
  var city = $<span class="params">(<span class="string">"aqi-city-input"</span>)</span>.value.trim<span class="params">()</span>;
  var num = $<span class="params">(<span class="string">"aqi-value-input"</span>)</span>.value.trim<span class="params">()</span>;
  <span class="keyword">if</span><span class="params">(!city.match<span class="params">(/^[A-Za-z\u4E00-\u9FA5]+$/)</span>)</span>{
    alert<span class="params">(<span class="string">"城市名必须为中英文字符"</span>)</span>;
    return;
  }
  <span class="keyword">if</span><span class="params">(!num.match<span class="params">(/^[<span class="number">0</span>-<span class="number">9</span>]*$/)</span>)</span>{
    alert<span class="params">(<span class="string">"空气质量指数必须为整数"</span>)</span>;
    return;
  }
  aqiData[city] = num;
}
<span class="comment">/**
 + 渲染aqi-table表格
 */</span>
<span class="function"><span class="keyword">function</span> <span class="title">renderAqiList</span><span class="params">()</span> {</span>
  var items = <span class="string">"&lt;tr&gt;&lt;td&gt;城市&lt;/td&gt;&lt;td&gt;空气质量&lt;/td&gt;&lt;td&gt;操作&lt;/td&gt;&lt;/tr&gt;"</span>;
  <span class="keyword">for</span><span class="params">(value in aqiData)</span>{
    items += <span class="string">"&lt;tr&gt;&lt;td&gt;"</span> + value + <span class="string">"&lt;/td&gt;&lt;td&gt;"</span> + aqiData[value] 
    - <span class="string">"&lt;/td&gt;&lt;td&gt;"</span> + <span class="string">"&lt;button onclick='delBtnHandle(\""</span> +value+<span class="string">"\")'&gt;删除&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;"</span>;
  }
  $<span class="params">(<span class="string">"aqi-table"</span>)</span>.innerHTML = items;
}
<span class="comment">/**
 + 点击add-btn时的处理逻辑
 + 获取用户输入，更新数据，并进行页面呈现的更新
 */</span>
<span class="function"><span class="keyword">function</span> <span class="title">addBtnHandle</span><span class="params">()</span> {</span>
  addAqiData<span class="params">()</span>;
  renderAqiList<span class="params">()</span>;
}
<span class="comment">/**
 + 点击各个删除按钮的时候的处理逻辑
 + 获取哪个城市数据被删，删除数据，更新表格显示
 */</span>
<span class="function"><span class="keyword">function</span> <span class="title">delBtnHandle</span><span class="params">(city)</span> {</span>
  <span class="comment">// do sth.</span>
  delete aqiData[city];
  renderAqiList<span class="params">()</span>;
}
<span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span> {</span>
  <span class="comment">// 在这下面给add-btn绑定一个点击事件，点击时触发addBtnHandle函数</span>
  $<span class="params">(<span class="string">"add-btn"</span>)</span>.addEventListener<span class="params">(<span class="string">"click"</span>,addBtnHandle,<span class="literal">false</span>)</span>;
  <span class="comment">// 想办法给aqi-table中的所有删除按钮绑定事件，触发delBtnHandle函数</span>
}
init<span class="params">()</span>;
</code></pre><blockquote>
<p>搞定~</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="任务目的">任务目的</h1><hr>
<ul>
<li>在上一任务基础上继续JavaScript的体验</li>
<li>深入学习JavaScript的事件机制及DOM操作</li>
<li>学习事件代理机制</li>
<li>学习简单的表单验证功能</li>
<li>学习外部加载JavaScript文件]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IFE Task 02]]></title>
    <link href="http://blog.supce.com/2016/05/17/JavaScript%E4%B9%8B%E5%9F%BA%E7%A1%802/"/>
    <id>http://blog.supce.com/2016/05/17/JavaScript之基础2/</id>
    <published>2016-05-16T16:00:00.000Z</published>
    <updated>2016-05-17T13:44:34.091Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>最近课题要结项，自由支配的时间越发宝贵了</p>
</blockquote>
<h1 id="任务目的">任务目的</h1><hr>
<ul>
<li>在上一任务基础上继续JavaScript的体验</li>
<li>接触一下JavaScript中的高级选择器</li>
<li>学习JavaScript中的数组对象遍历、读写、排序等操作</li>
<li>学习简单的字符串处理操作<a id="more"></a>
</li>
</ul>
<h1 id="任务描述">任务描述</h1><ul>
<li>参考以下示例代码，读取页面上已有的source列表，从中提取出城市以及对应的空气质量</li>
<li>将数据按照某种顺序排序后，在resort列表中按照顺序显示出来</li>
</ul>
<h1 id="任务最终代码">任务最终代码</h1><pre><code><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
    <span class="keyword">var</span> $ = <span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>{
      <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);
    }
    <span class="comment">/**
     + getData方法
     + 读取id为source的列表，获取其中城市名字及城市对应的空气质量
     + 返回一个数组，格式见函数中示例
     */</span>
    <span class="function"><span class="keyword">function</span> <span class="title">getData</span>(<span class="params"></span>) </span>{
      <span class="comment">/*
      coding here
      */</span>
      <span class="comment">/*
      data = [
        ["北京", 90],
        ["北京", 90]
        ……
      ]
      */</span>
      <span class="keyword">var</span> data = [];
      <span class="keyword">var</span> li = $(<span class="string">'source'</span>).getElementsByTagName(<span class="string">'li'</span>);
      <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;li.length; i++){
        <span class="keyword">var</span> city = li[i].innerHTML.split(<span class="string">"空气质量："</span>)[<span class="number">0</span>];

        <span class="keyword">var</span> num = li[i].getElementsByTagName(<span class="string">'b'</span>)[<span class="number">0</span>].innerHTML;
        <span class="comment">//var num = Number(li.children[0].innerHTML);</span>

        data[data.length] = [city,num];
        <span class="comment">//data.push([city,num]);</span>
      }
      <span class="built_in">console</span>.log(data.length);
      <span class="keyword">return</span> data;
    }
    <span class="comment">/**
     + sortAqiData
     + 按空气质量对data进行从小到大的排序
     + 返回一个排序后的数组
     */</span>
    <span class="function"><span class="keyword">function</span> <span class="title">sortAqiData</span>(<span class="params">data</span>) </span>{
      data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>{
        <span class="keyword">return</span> a[<span class="number">1</span>] - b[<span class="number">1</span>];
      });
      <span class="keyword">return</span> data;
    }
    <span class="comment">/**
     + render
     + 将排好序的城市及空气质量指数，输出显示到id位resort的列表中
     + 格式见ul中的注释的部分
     */</span>
    <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params">data</span>) </span>{
      <span class="keyword">var</span> chineseNum = [<span class="string">"零"</span>, <span class="string">"一"</span>, <span class="string">"二"</span>, <span class="string">"三"</span>, <span class="string">"四"</span>, <span class="string">"五"</span>, <span class="string">"六"</span>, <span class="string">"七"</span>, <span class="string">"八"</span>, <span class="string">"九"</span>];
      <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;data.length; i++){
        $(<span class="string">"resort"</span>).innerHTML += <span class="string">"&lt;li&gt;第"</span> + chineseNum[i+<span class="number">1</span>] +　<span class="string">"名："</span> + data[i][<span class="number">0</span>] + <span class="string">"空气质量：&lt;b&gt;"</span> + data[i][<span class="number">1</span>] + <span class="string">"&lt;/b&gt;&lt;/li&gt;"</span>;
      }
    }
    <span class="function"><span class="keyword">function</span> <span class="title">btnHandle</span>(<span class="params"></span>) </span>{
      <span class="keyword">var</span> aqiData = getData();
      aqiData = sortAqiData(aqiData);
      render(aqiData);
    }
    <span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>) </span>{
      <span class="comment">// 在这下面给sort-btn绑定一个点击事件，点击时触发btnHandle函数</span>
      $(<span class="string">"sort-btn"</span>).addEventListener(<span class="string">"click"</span>,btnHandle,<span class="literal">false</span>);
    }
    init();
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>最近课题要结项，自由支配的时间越发宝贵了</p>
</blockquote>
<h1 id="任务目的">任务目的</h1><hr>
<ul>
<li>在上一任务基础上继续JavaScript的体验</li>
<li>接触一下JavaScript中的高级选择器</li>
<li>学习JavaScript中的数组对象遍历、读写、排序等操作</li>
<li>学习简单的字符串处理操作]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[IFE Task 01]]></title>
    <link href="http://blog.supce.com/2016/05/10/JavaScript%E4%B9%8B%E5%9F%BA%E7%A1%80/"/>
    <id>http://blog.supce.com/2016/05/10/JavaScript之基础/</id>
    <published>2016-05-09T16:00:00.000Z</published>
    <updated>2016-05-13T07:48:58.335Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>前一段时间一直在写 CSS，以后这段时间会把百度前端学院有关 JavaScript 的任务写一写</p>
</blockquote>
<h1 id="任务一">任务一</h1><hr>
<h2 id="任务目的">任务目的</h2><ul>
<li>JavaScript初体验</li>
<li>初步明白JavaScript的简单基本语法，如变量、函数</li>
<li>初步了解JavaScript的事件是什么</li>
<li>初步了解JavaScript中的DOM是什么<a id="more"></a>
</li>
</ul>
<h2 id="任务描述">任务描述</h2><ul>
<li>参考以下示例代码，补充其中的JavaScript功能，完成一个JavaScript代码的编写</li>
<li>本任务完成的功能为：用户可以在输入框中输入任何内容，点击“确认填写”按钮后，用户输入的内容会显示在“您输入的值是”文字的右边</li>
</ul>
<h2 id="最终代码">最终代码</h2><pre><code><span class="tag">&lt;<span class="title">label</span>&gt;</span>请输入北京今天空气质量：<span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"aqi-input"</span> <span class="attribute">type</span>=<span class="value">"text"</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span>
<span class="tag">&lt;<span class="title">button</span> <span class="attribute">id</span>=<span class="value">"button"</span>&gt;</span>确认填写<span class="tag">&lt;/<span class="title">button</span>&gt;</span>
<span class="tag">&lt;<span class="title">div</span>&gt;</span>您输入的值是：<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"aqi-display"</span>&gt;</span>尚无录入<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
  (<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{
      <span class="comment">/*    
      在注释下方写下代码
      给按钮button绑定一个点击事件
      在事件处理函数中
      获取aqi-input输入的值，并显示在aqi-display中
      */</span>
      <span class="keyword">var</span> $ = <span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>{
        <span class="keyword">return</span> <span class="built_in">document</span>.getElementById(id);
      }
      <span class="keyword">var</span> handler = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{
        <span class="keyword">var</span> num = <span class="built_in">parseInt</span>($(<span class="string">"aqi-input"</span>).value)
        <span class="keyword">if</span> (!<span class="built_in">isNaN</span>(num) &amp;&amp; num &gt;= <span class="number">0</span> &amp;&amp; num &lt;= <span class="number">500</span>) {
          $(<span class="string">"aqi-display"</span>).innerHTML = $(<span class="string">"aqi-input"</span>).value;
        }<span class="keyword">else</span>{
          $(<span class="string">"aqi-display"</span>).innerHTML = <span class="string">"请输入范围为0-500的效数字"</span>;
        }
      }
      $(<span class="string">"button"</span>).addEventListener(<span class="string">"click"</span>,handler,<span class="literal">false</span>);

  })();
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</code></pre><blockquote>
<p>第一个任务还是很哪里不会点哪里的。</p>
</blockquote>
<h1 id="任务二">任务二</h1><hr>
<h2 id="任务目的-1">任务目的</h2><ul>
<li>在上一任务基础上继续JavaScript的体验</li>
<li>学习JavaScript中的if判断语法，for循环语法</li>
<li>学习JavaScript中的数组对象</li>
<li>学习如何读取、处理数据，并动态创建、修改DOM中的内容</li>
</ul>
<h2 id="任务描述-1">任务描述</h2><ul>
<li>参考以下示例代码，页面加载后，将提供的空气质量数据数组，按照某种逻辑（比如空气质量大于60）进行过滤筛选，最后将符合条件的数据按照一定的格式要求显示在网页上</li>
</ul>
<h2 id="最终代码-1">最终代码</h2><pre><code>&lt;h3&gt;污染城市列表&lt;/h3&gt;
&lt;ul id=<span class="string">"aqi-list"</span>&gt;
&lt;!--   
  &lt;li&gt;第一名：福州（样例），<span class="number">10</span>&lt;/li&gt;
  &lt;li&gt;第二名：福州（样例），<span class="number">10</span>&lt;/li&gt; --&gt;
&lt;/ul&gt;
&lt;script <span class="keyword">type</span>=<span class="string">"text/javascript"</span>&gt;
  <span class="keyword">var</span> aqiData = [
    [<span class="string">"北京"</span>, <span class="number">90</span>],
    [<span class="string">"上海"</span>, <span class="number">50</span>],
    [<span class="string">"福州"</span>, <span class="number">10</span>],
    [<span class="string">"石家庄"</span>, <span class="number">320</span>],
    [<span class="string">"邯郸"</span>, <span class="number">301</span>],
    [<span class="string">"广州"</span>, <span class="number">50</span>],
    [<span class="string">"成都"</span>, <span class="number">90</span>],
    [<span class="string">"西安"</span>, <span class="number">100</span>]

  ];

  (function () {
      /*
      在注释下方编写代码
      遍历读取aqiData中各个城市的数据
      将空气质量指数大于<span class="number">60</span>的城市显示到aqi-list的列表中
      */
      <span class="keyword">var</span> $ = function(id){
        <span class="keyword">return</span> document.getElementById(id);
      }
      <span class="keyword">var</span> <span class="literal">result</span> = aqiData.filter(function(value){
        <span class="keyword">return</span> (value[<span class="number">1</span>] &gt; <span class="number">60</span>);
      });
      <span class="literal">result</span>.sort(function(a,b){
        <span class="keyword">return</span> b[<span class="number">1</span>] - a[<span class="number">1</span>];
      });
      <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="literal">result</span>.length; i++){
        $(<span class="string">"aqi-list"</span>).innerHTML += <span class="string">"&lt;li&gt;第"</span> + (i+<span class="number">1</span>) + <span class="string">"名："</span> + <span class="literal">result</span>[i][<span class="number">0</span>] + <span class="string">"(样例)，"</span> + <span class="literal">result</span>[i][<span class="number">1</span>] + <span class="string">"&lt;/li&gt;"</span>;
      }
   })();
&lt;/script&gt;
</code></pre><blockquote>
<p>这里对数组操作比较多，下面简单复习下数组。</p>
</blockquote>
<h1 id="Array">Array</h1><hr>
<h2 id="Array的创建">Array的创建</h2><p>数组的创建方式 分为以下两种</p>
<h3 id="使用Array构造函数">使用Array构造函数</h3><p><code>var persons = new Array();</code><br>可以指定数组长度，比如长度为5的数组<br><code>var persons = new Array(5);</code><br>可以直接在构造函数中传递数组中包含的项<br><code>var persons = new Array(&quot;张三&quot;,&quot;李四&quot;,&quot;王五&quot;);</code></p>
<blockquote>
<p>使用构造函数时可以省略new关键字<br><code>var persons = Array(4);</code></p>
</blockquote>
<h3 id="使用数组字面量">使用数组字面量</h3><p><code>var persons = [];  //空数组</code><br><code>var persons = [&quot;张三&quot;,&quot;李四&quot;,&quot;王五&quot;];</code></p>
<h2 id="数组的长度">数组的长度</h2><pre><code><span class="variable"><span class="keyword">var</span> persons</span> = [<span class="string">"张三"</span>,<span class="string">"李四"</span>,<span class="string">"王五"</span>];
alert(persons.length);  <span class="comment">//3</span>
</code></pre><p>可以利用lenght来给数组添加新的项</p>
<pre><code>persons[persons.<span class="built_in">length</span>] = <span class="string">"赵六"</span>; <span class="comment"> //在数组末尾添加新的项</span>
</code></pre><h2 id="数组的判断">数组的判断</h2><p>想要判断某个对象是否是数组，可以利用<code>Array.isArray()</code>方法</p>
<pre><code><span class="keyword">if</span><span class="params">(Array.isArray<span class="params">(someObject)</span>)</span>{
  <span class="comment">//对数组进行操作</span>
}
</code></pre><h2 id="转换方法">转换方法</h2><h3 id="toString()方法">toString()方法</h3><p>数组的toString()方法会返回由数组中每个值的字符串形式拼接而成的一个以逗号分隔的字符串</p>
<pre><code><span class="variable"><span class="keyword">var</span> persons</span> = [<span class="string">"张三"</span>,<span class="string">"李四"</span>,<span class="string">"王五"</span>];
alert(persons.toString());  <span class="comment">//返回一个字符串"张三,李四,王五"</span>
</code></pre><blockquote>
<p>关于toString和valueOf这两个方法的区别请点<a href="">这里</a></p>
</blockquote>
<h3 id="join()方法">join()方法</h3><p>如果想要用不同的分隔符来构建字符串 可以使用join方法，该方法只接收一个参数，用来作为字符串的分隔符。</p>
<pre><code><span class="keyword">var</span> persons = [<span class="string">"张三"</span>,<span class="string">"李四"</span>,<span class="string">"王五"</span>];
alert(persons.<span class="keyword">join</span>(<span class="string">"&amp;"</span>)); 
</code></pre><h2 id="栈方法">栈方法</h2><p>栈是一种先进后出的数据结构 在JavaScript数组中可以利用push和pop进行入栈和出栈。<br>push方法可以接收任意数量的参数，把它们添加到数组末尾，并返回修改后的数组长度。pop方法从数组末尾移除最后一项，减少数组的长度值，然后返回移除的项。</p>
<pre><code><span class="variable"><span class="keyword">var</span> persons</span> = [<span class="string">"张三"</span>,<span class="string">"李四"</span>,<span class="string">"王五"</span>];
<span class="variable"><span class="keyword">var</span> length</span> = persons.push(<span class="string">"赵六"</span>,<span class="string">"麻七"</span>);
alert(persons.pop());  <span class="comment">//麻七</span>
</code></pre><h2 id="队列方法">队列方法</h2><p>队列即先进先出 利用<code>shift()</code>移除数组第一项并返回该项，数组长度减1，<code>push()</code>向数组末端添加新的项，并返回数组长度<br><code>unshift()</code>方法能在数组前端添加任意个项并返回新数组的长度</p>
<h2 id="重排序">重排序</h2><h3 id="数组的反转">数组的反转</h3><p>可以利用<code>reverse()</code>对数组进行反转</p>
<pre><code><span class="keyword">var</span> <span class="keyword">test</span> = [1,2,3];
alert(<span class="keyword">test</span>.<span class="literal">reverse</span>()); <span class="comment">//3,2,1</span>
</code></pre><h3 id="数组的排序">数组的排序</h3><p>可以使用<code>sort()</code>方法按照升序对数组进行排序。sort方法会调用每个数组项的toString方法，对得到的字符串进行比较，即使数组项是数值，也是比较的字符串。<br>sort方法可以接收一个比较函数，该函数接收两个参数，如果第一个参数应该位于第二个之前则返回一个负数，如果两个参数相等则返回0，如果第一个参数应该位于第二个之后则返回一个正数<br>在第二个任务中的sort就进行了降序排列</p>
<pre><code><span class="literal">result</span>.sort(function(a,b){
    <span class="keyword">return</span> b[<span class="number">1</span>] - a[<span class="number">1</span>];
});
</code></pre><h2 id="操作方法">操作方法</h2><h3 id="数组的合并">数组的合并</h3><h4 id="concat方法">concat方法</h4><p>这个方法会先创建当前数组一个副本，然后将接收到的参数添加到这个副本的末尾，最后返回新构建的数组。在没有给concat()方法法传递参数的情况下，它只是复制当前数组并返回副本。如果传递给concat()方法的是一或多个数组，则该方法会将这些数组中的每一项都添加到结果数组中。如果传递的值不是数组，这些值就会被简单地添加到结果数组的末尾。</p>
<pre><code><span class="variable"><span class="keyword">var</span> persons</span> = [<span class="string">"张三"</span>,<span class="string">"李四"</span>];
<span class="variable"><span class="keyword">var</span> people</span> = persons.concat(<span class="string">"Tom"</span>,[<span class="string">"王五"</span>,<span class="string">"赵六"</span>]);
</code></pre><h4 id="reduce或者reduceright方法">reduce或者reduceright方法</h4><blockquote>
<p>JS中的归并下面说，这里直接贴小例子了</p>
</blockquote>
<pre><code><span class="keyword">var</span> num = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];
<span class="keyword">var</span> num2 = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]
<span class="keyword">var</span> <span class="literal">result</span> = num2.reduce(function(pre,cur,index,<span class="type">array</span>){
    pre.push(cur);
    <span class="keyword">return</span> pre;
},num);
alert(<span class="literal">result</span>);  //<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>
</code></pre><h3 id="数组的复制">数组的复制</h3><p>利用<code>slice()</code>方法可以对数组进行复制，该方法可以接受一或两个参数，即要返回项的起始和结束位置。在只有一个参数的情况下， slice() 方法返回从该参数指定位置开始到当前数组末尾的所有项。如果有两个参数，该方法返回起始和结束位置之间的项（不包括结束位置的项）</p>
<pre><code>var persons = [<span class="string">"张三"</span>,<span class="string">"李四"</span>,<span class="string">"Tom"</span>,<span class="string">"王五"</span>,<span class="string">"赵六"</span>];
alert(persons.slice(<span class="number">1</span>,<span class="number">3</span>))  <span class="comment">//李四,Tom</span>
</code></pre><h3 id="数组的插入">数组的插入</h3><p>在数组中一般使用splice来进行插入。详细用法如下</p>
<ul>
<li><p>删除：可以删除任意数量的项，只需指定2个参数：要删除的第一项的位置和要删除的项数。</p>
<p>  var persons = [“张三”,”李四”,”Tom”,”王五”,”赵六”];<br>  persons.splice(0,2); //删除前两项</p>
</li>
<li><p>插入：可以向指定位置插入任意数量的项，只需提供3个参数：起始位置、0（要删除的项数）和要插入的项。如果要插入多个项，可以再传入第四、第五，以至任意多个项。</p>
<p>  <code>var persons = [&quot;张三&quot;,&quot;李四&quot;,&quot;Tom&quot;,&quot;王五&quot;,&quot;赵六&quot;];</code><br>  <code>person.splice(1,0,&quot;John&quot;,&quot;Snow&quot;); //张三,John,Snow,李四...</code></p>
</li>
<li><p>替换：可以向指定位置插入任意数量的项，且同时删除任意数量的项，只需指定 3 个参数：起始位置、要删除的项数和要插入的任意数量的项。插入的项数不必与删除的项数相等</p>
<p>  <code>var persons = [&quot;张三&quot;,&quot;李四&quot;,&quot;Tom&quot;,&quot;王五&quot;,&quot;赵六&quot;];</code><br>  <code>person.splice(1,2,&quot;John&quot;,&quot;Snow&quot;); //张三,John,Snow,王五...</code></p>
</li>
</ul>
<blockquote>
<p>splice()方法始终都会返回一个数组，该数组中包含从原始数组中删除的项(如果没有删除任何项，则返回一个空数组)</p>
</blockquote>
<h3 id="位置方法">位置方法</h3><p>利用indexOf和lastIndexOf，两个方法都接收两个参数：要查找的项和（可选的）表示查找起点位置的索引。最终返回查找项在数组中的索引，如果没有查到则返回-1<br>indexOf默认从索引为0出向后查找，lastIndexOf反之。</p>
<h3 id="迭代方法">迭代方法</h3><blockquote>
<p>以下方法中的函数会接收三个参数：数组项的值、该项在数组中的位置和数组对象本身。</p>
</blockquote>
<ul>
<li>some() ：对数组中的每一项运行给定函数，如果该函数对任一项返回 true ，则返回 true </li>
<li>every() ：对数组中的每一项运行给定函数，如果该函数对每一项都返回 true ，则返回 true </li>
<li>forEach() ：对数组中的每一项运行给定函数。这个方法没有返回值。</li>
<li>map() ：对数组中的每一项运行给定函数，返回每次函数调用的结果组成的数组</li>
<li>filter() ：对数组中的每一项运行给定函数，返回该函数会返回 true 的项组成的数组。</li>
</ul>
<blockquote>
<p>下面列几个小例子</p>
</blockquote>
<pre><code><span class="keyword">var</span> num = [<span class="number">90</span>,<span class="number">50</span>,<span class="number">10</span>,<span class="number">200</span>,<span class="number">320</span>];
num.some(<span class="function"><span class="keyword">function</span><span class="params">(item)</span></span>{
  <span class="keyword">return</span> item&gt;<span class="number">20</span>;
});  <span class="comment">//true</span>
num.every(<span class="function"><span class="keyword">function</span><span class="params">(item)</span></span>{
  <span class="keyword">return</span> item&gt;<span class="number">20</span>;
});  <span class="comment">//false</span>
num.<span class="keyword">forEach</span>(<span class="function"><span class="keyword">function</span><span class="params">(item)</span></span>{
  <span class="comment">//对每一项进行某些操作</span>
});
num.map(<span class="function"><span class="keyword">function</span><span class="params">(item)</span></span>{
  <span class="keyword">return</span> item-<span class="number">10</span>;
});  <span class="comment">//[80,40,0,190,310]</span>
num.filter(<span class="function"><span class="keyword">function</span><span class="params">(item)</span></span>{
  <span class="keyword">return</span> item&gt;<span class="number">60</span>;
}); [<span class="number">90</span>,<span class="number">200</span>,<span class="number">320</span>]
</code></pre><h3 id="归并方法">归并方法</h3><p>也就是刚才在数组合并那里用到的reduce和reduceRight，这两个函数会接收四个参数：<br>前一个值、当前值、项的索引和数组对象。这个函数返回的任何值都会作为第一个参数自动传给下一项。第一次迭代发生在数组的第二项上，因此第一个参数是数组的第一项，第二个参数就是数组的第二项。<br>比如求数组中所有数值的和</p>
<pre><code>ar values = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];
var sum = values.reduce(function(pre,cur,index,<span class="built_in">array</span>){
    <span class="keyword">return</span> pre + cur;
});
alert(sum)  <span class="comment">//15;</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>前一段时间一直在写 CSS，以后这段时间会把百度前端学院有关 JavaScript 的任务写一写</p>
</blockquote>
<h1 id="任务一">任务一</h1><hr>
<h2 id="任务目的">任务目的</h2><ul>
<li>JavaScript初体验</li>
<li>初步明白JavaScript的简单基本语法，如变量、函数</li>
<li>初步了解JavaScript的事件是什么</li>
<li>初步了解JavaScript中的DOM是什么]]>
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.supce.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS学习笔记之清除浮动]]></title>
    <link href="http://blog.supce.com/2016/05/07/CSS%E4%B9%8B%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8/"/>
    <id>http://blog.supce.com/2016/05/07/CSS之清除浮动/</id>
    <published>2016-05-06T16:00:00.000Z</published>
    <updated>2016-05-07T08:43:01.458Z</updated>
    <content type="html"><![CDATA[<p><em>这次把之前的坑填上 主要探究下浮动的清除</em></p>
<h1 id="为什么要清除浮动">为什么要清除浮动</h1><hr>
<p>浮动是一个CSS样式中的常用属性，<code>float</code>属性有三个属性值，分别为 none left和right。顾名思义，none即设置对象不浮动  left设置元素向左浮动，若多个元素同时设置了该属性则呈现一个从左到右的页面布局 right设置元素向右浮动，若多个元素同时设置了该属性则呈现一个从右到左的页面布局<br><a id="more"></a><br>比如下面这个例子：<br>HTML：</p>
<pre><code>&lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"float_left"</span>&gt;
    &lt;<span class="keyword">div</span>&gt;向左浮动元素<span class="number">1</span>&lt;/<span class="keyword">div</span>&gt;
    &lt;<span class="keyword">div</span>&gt;向左浮动元素<span class="number">2</span>&lt;/<span class="keyword">div</span>&gt;
    &lt;<span class="keyword">div</span>&gt;向左浮动元素<span class="number">3</span>&lt;/<span class="keyword">div</span>&gt;
&lt;/<span class="keyword">div</span>&gt;
&lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"float_right"</span>&gt;
    &lt;<span class="keyword">div</span>&gt;向右浮动元素<span class="number">1</span>&lt;/<span class="keyword">div</span>&gt;
    &lt;<span class="keyword">div</span>&gt;向右浮动元素<span class="number">2</span>&lt;/<span class="keyword">div</span>&gt;
    &lt;<span class="keyword">div</span>&gt;向右浮动元素<span class="number">3</span>&lt;/<span class="keyword">div</span>&gt;
&lt;/<span class="keyword">div</span>&gt;
</code></pre><p>CSS样式：</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="class">.float_left</span>,<span class="class">.float_right</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100%</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">150px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> dashed <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">margin-bottom</span>:<span class="value"> <span class="number">10px</span></span></span>;
    }</span>
    <span class="class">.float_left</span> <span class="tag">div</span>,<span class="class">.float_right</span> <span class="tag">div</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">150px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">90px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#999</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span></span></span>;
    }</span>
    <span class="class">.float_left</span> <span class="tag">div</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#cc3299</span></span></span>;
    }</span>
    <span class="class">.float_right</span> <span class="tag">div</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#007FFF</span></span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>效果如下:<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/fd.jpg-blogImg" alt=""><br>当我们设置某个元素为浮动时，该元素脱离普通流，导致包含该元素的父元素高度塌陷。比如下面这个例子：</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="id">#test</span> <span class="tag">div</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">200px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100px</span></span></span>;
    }</span>
    <span class="class">.float_left</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#cc3299</span></span></span>;
    }</span>
    <span class="class">.float_right</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#007FFF</span></span></span>;
    }</span>
    <span class="class">.third</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100px</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#666</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
<span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"test"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"third"</span>&gt;</span>我是第三者<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"float_left"</span>&gt;</span>left<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"float_right"</span>&gt;</span>right<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/fd1.jpg-blogImg" alt=""><br>id为test的div高度只有100px，高度塌陷了100px，这并不是我们想要的。为了减少浮动元素带来的负面影响，还原父元素应有的高度，这时候就需要闭合浮动</p>
<h1 id="清除浮动的方式">清除浮动的方式</h1><h2 id="使用br标签中的clear清除浮动">使用br标签中的clear清除浮动</h2><p>文本换行时会用到br标签，该标签的clear属性有三个属性值：left,right,all<br>修改代码如下：</p>
<pre><code>&lt;<span class="keyword">div</span> <span class="property">id</span>=<span class="string">"test"</span>&gt;
    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"third"</span>&gt;我是第三者&lt;/<span class="keyword">div</span>&gt;
    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"float_left"</span>&gt;left&lt;/<span class="keyword">div</span>&gt;
    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"float_right"</span>&gt;right&lt;/<span class="keyword">div</span>&gt;
    &lt;br clear=<span class="string">"all"</span> /&gt;
&lt;/<span class="keyword">div</span>&gt;
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/fd2.jpg-blogImg" alt=""></p>
<p>这种方法虽然代码量较少但是有违结构与表现的分离 不推荐使用</p>
<blockquote>
<p>在IE6中还需要触发 hasLayout 在父元素中利用 zoom：1修正</p>
</blockquote>
<h2 id="添加额外标签">添加额外标签</h2><p>通过在浮动元素末尾添加一个空的标签例如 <code>&lt;div style=&quot;clear: both&quot;&gt;&lt;/div&gt;</code>，其他标签br等也可以</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"test"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"third"</span>&gt;</span>我是第三者<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"float_left"</span>&gt;</span>left<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"float_right"</span>&gt;</span>right<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">style</span>=<span class="value">"clear: both"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>

<span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="class">.float_left</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">200px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100px</span></span></span>;
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#cc3299</span></span></span>;
    }</span>
    <span class="class">.float_right</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">200px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100px</span></span></span>;
        <span class="rule"><span class="attribute">float</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#007FFF</span></span></span>;
    }</span>
    <span class="class">.third</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100px</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#666</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/fd3.jpg-blogImg" alt=""></p>
<p>添加无意义的空标签 不符合我们结构与表现的分离的要求，不便于后期维护</p>
<h2 id="设置父元素_overflow:hidden">设置父元素 <code>overflow:hidden</code></h2><pre><code><span class="id">#test</span><span class="rules">{
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
        <span class="rule"><span class="attribute">zoom</span>:<span class="value"> <span class="number">1</span></span></span>; <span class="comment">/*修正ie6中的haslayout问题*/</span>
    }</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/fd4.jpg-blogImg" alt=""></p>
<p>这种方式有个缺点：可能将我们溢出的东西隐藏。</p>
<h2 id="设置父元素_display:table">设置父元素 <code>display:table</code></h2><pre><code><span class="id">#test</span><span class="rules">{
        <span class="rule"><span class="attribute">display</span>:<span class="value"> table</span></span>;
    }</span>
</code></pre><p>刷新下页面 由于盒模型的属性发生了改变发现带来了新的问题 还是不用的好<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/fd5.jpg-blogImg" alt=""></p>
<h2 id="利用伪元素_:after">利用伪元素 <code>:after</code></h2><p>HTML稍作修改：</p>
<pre><code>&lt;<span class="keyword">div</span> <span class="property">id</span>=<span class="string">"test"</span> <span class="type">class</span>=<span class="string">"clearFix"</span>&gt;
    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"third"</span>&gt;我是第三者&lt;/<span class="keyword">div</span>&gt;
    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"float_left"</span>&gt;left&lt;/<span class="keyword">div</span>&gt;
    &lt;<span class="keyword">div</span> <span class="type">class</span>=<span class="string">"float_right"</span>&gt;right&lt;/<span class="keyword">div</span>&gt;
&lt;/<span class="keyword">div</span>&gt;
</code></pre><p>增加CSS样式</p>
<pre><code><span class="rule"><span class="attribute">.clearFix</span>:<span class="value">after{
    clear: both</span></span>;
    <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
    <span class="rule"><span class="attribute">visibility</span>:<span class="value"> hidden</span></span>;
    <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">""</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">0</span></span></span>;
    <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">0</span></span></span>;
}
<span class="class">.clearFix</span><span class="rules">{
     <span class="rule"><span class="attribute">zoom</span>:<span class="value"> <span class="number">1</span></span></span>; <span class="comment">/*修正ie6中的haslayout问题*/</span>
}</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/fd6.jpg-blogImg" alt=""></p>
<blockquote>
<p>以上几种方式，其实可以分为两种，</p>
<ul>
<li>1、通过在浮动元素的末尾添加一个空元素，设置 clear：both属性，after伪元素其实也是通过 content 在元素的后面生成了内容为一个点的块级元素</li>
<li>2、通过设置父元素 overflow 或者display：table 属性来闭合浮动</li>
</ul>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p><em>这次把之前的坑填上 主要探究下浮动的清除</em></p>
<h1 id="为什么要清除浮动">为什么要清除浮动</h1><hr>
<p>浮动是一个CSS样式中的常用属性，<code>float</code>属性有三个属性值，分别为 none left和right。顾名思义，none即设置对象不浮动  left设置元素向左浮动，若多个元素同时设置了该属性则呈现一个从左到右的页面布局 right设置元素向右浮动，若多个元素同时设置了该属性则呈现一个从右到左的页面布局<br>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.supce.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS学习笔记之导航栏]]></title>
    <link href="http://blog.supce.com/2016/05/06/CSS%E4%B9%8B%E5%AF%BC%E8%88%AA%E6%A0%8F/"/>
    <id>http://blog.supce.com/2016/05/06/CSS之导航栏/</id>
    <published>2016-05-05T16:00:00.000Z</published>
    <updated>2016-05-06T13:53:58.135Z</updated>
    <content type="html"><![CDATA[<h1 id="导航栏结构分析">导航栏结构分析</h1><hr>
<p>有的网页导航栏直接将a标签放在div中，比如：百度和网易等。</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"nav"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>About<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Contact<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><a id="more"></a>
<p>有的网页导航栏将a标签放在li中，比如搜狐和B站等</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"nav"</span>&gt;</span>
   <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>About<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Contact<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
  <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>导航经常会有好几级的情况，li可以很好的展现项目级别关系，直接用a无法突出元素之间的关联，同时使用ul+li方式可以增加对搜索引擎的友好度。但在单级导航栏直接用a标签也不是不可以。下面几个简单例子直接使用a标签的方式，利用纯CSS，不引入JavaScript和jQuery。</p>
<h2 id="引入CSS精灵的导航栏">引入CSS精灵的导航栏</h2><p>首先用上之前的CSS Sprite。<em>这里引用下别人的图</em><br>简单的HTML框架：</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"nav"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span> <span class="attribute">class</span>=<span class="value">"index"</span>&gt;</span>首页<span class="tag">&lt;/<span class="title">a</span>&gt;</span> 
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span> <span class="attribute">class</span>=<span class="value">"intro"</span>&gt;</span>公司简介<span class="tag">&lt;/<span class="title">a</span>&gt;</span> 
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span> <span class="attribute">class</span>=<span class="value">"honor"</span>&gt;</span>企业荣誉<span class="tag">&lt;/<span class="title">a</span>&gt;</span> 
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span> <span class="attribute">class</span>=<span class="value">"flow"</span>&gt;</span>工艺流程<span class="tag">&lt;/<span class="title">a</span>&gt;</span> 
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span> <span class="attribute">class</span>=<span class="value">"product"</span>&gt;</span>产品展示<span class="tag">&lt;/<span class="title">a</span>&gt;</span> 
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span> <span class="attribute">class</span>=<span class="value">"sale"</span>&gt;</span>销售网络<span class="tag">&lt;/<span class="title">a</span>&gt;</span> 
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span> <span class="attribute">class</span>=<span class="value">"buy"</span>&gt;</span>网上订购<span class="tag">&lt;/<span class="title">a</span>&gt;</span> 
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span> <span class="attribute">class</span>=<span class="value">"contact"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>然后是CSS</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;
    }</span>
    <span class="id">#nav</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">800px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">31px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span> auto</span></span>;
        <span class="rule"><span class="attribute">padding-left</span>:<span class="value"> <span class="number">21px</span></span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(images/nav/bg_nav1.png) no-repeat <span class="number">0</span> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
    }</span>
    <span class="id">#nav</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">92px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">31px</span></span></span>;
        <span class="rule"><span class="attribute">text-indent</span>:<span class="value"> -<span class="number">9999px</span></span></span>; <span class="comment">/*将文本缩进进行隐藏*/</span>
        <span class="rule"><span class="attribute">text-decoration</span>:<span class="value"> none</span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(images/nav/bg_nav1.png) no-repeat <span class="number">1000px</span> <span class="number">1000px</span></span></span>;
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a</span>:<span class="value">hover {
        position:relative</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">120px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.index</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">11px</span> -<span class="number">31px</span></span></span>;
    }
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.intro</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">103px</span> -<span class="number">62px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.honor</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">195px</span> -<span class="number">93px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.flow</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">287px</span> -<span class="number">124px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.product</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">379px</span> -<span class="number">155px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.sale</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">471px</span> -<span class="number">186px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.buy</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">563px</span> -<span class="number">217px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.contact</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">655px</span> -<span class="number">248px</span></span></span>;
    } </span>
</code></pre><p>刷新下页面，效果还是不错的：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/dhl.jpg-blogImg" alt=""></p>
<h2 id="引入绝对定位的导航栏">引入绝对定位的导航栏</h2><p>在上一个例子中，锚点a设置为浮动的，在a的边缘处可能会指向相邻的a锚点，这时候可以尝试使用绝对定位的方式，使每个a锚点准确“空降”到指定位置，从而避免这个问题。保持HTML结构不变，对CSS稍加修改即可。</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;
    }</span>
    <span class="id">#nav</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">800px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">31px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span> auto</span></span>;
        <span class="rule"><span class="attribute">padding-left</span>:<span class="value"> <span class="number">21px</span></span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(images/nav/bg_nav1.png) no-repeat <span class="number">0</span> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
    }</span>
    <span class="id">#nav</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
        <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">92px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">31px</span></span></span>;
        <span class="rule"><span class="attribute">text-indent</span>:<span class="value"> -<span class="number">9999px</span></span></span>; <span class="comment">/*将文本缩进进行隐藏*/</span>
        <span class="rule"><span class="attribute">text-decoration</span>:<span class="value"> none</span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(images/nav/bg_nav1.png) no-repeat <span class="number">1000px</span> <span class="number">1000px</span></span></span>;
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a</span>:<span class="value">hover {
        width:<span class="number">120px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="tag">div</span> <span class="tag">a</span><span class="class">.index</span> <span class="rules">{
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">21px</span></span></span>;    
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.index</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">11px</span> -<span class="number">31px</span></span></span>;
    }
    <span class="id">#nav</span> <span class="tag">a</span><span class="class">.intro</span> <span class="rules">{
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">113px</span></span></span>;    <span class="comment">/*21+92*/</span>
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.intro</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">103px</span> -<span class="number">62px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="tag">a</span><span class="class">.honor</span> <span class="rules">{
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">205px</span></span></span>; 
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.honor</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">195px</span> -<span class="number">93px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="tag">a</span><span class="class">.flow</span> <span class="rules">{
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">297px</span></span></span>; 
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.flow</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">287px</span> -<span class="number">124px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="tag">a</span><span class="class">.product</span> <span class="rules">{
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">389px</span></span></span>; 
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.product</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">379px</span> -<span class="number">155px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="tag">a</span><span class="class">.sale</span> <span class="rules">{
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">481px</span></span></span>; 
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.sale</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">471px</span> -<span class="number">186px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="tag">a</span><span class="class">.buy</span> <span class="rules">{
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">573px</span></span></span>; 
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.buy</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">563px</span> -<span class="number">217px</span></span></span>;
    } 
    <span class="id">#nav</span> <span class="tag">a</span><span class="class">.contact</span> <span class="rules">{
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">665px</span></span></span>; 
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a.contact</span>:<span class="value">hover {
        margin-left:-<span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-position</span>:<span class="value">-<span class="number">655px</span> -<span class="number">248px</span></span></span>;
    } 
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>效果跟刚才是一个的，好麻烦的说，感觉还是用JS与JQuery比较好。这种纯CSS就当练手了</p>
<h2 id="涉及层叠的导航栏">涉及层叠的导航栏</h2><p>有一些导航栏具有层叠的效果，因为这里用了层叠，所以把a标签放在li中比直接使用a更好控制。上次B站登录页在关于图片和文字的部分使用了层叠属性。<br><em>关于CSS的层叠级别介绍以后会专门写一篇来介绍</em><br>先是HTML</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"nav"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>导航1<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>导航2<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>导航3<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>导航4<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>导航5<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>导航6<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>导航7<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>导航8<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>为我们的HTML框架添加样式</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;
    }</span>
    <span class="id">#nav</span> <span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">700px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span> auto</span></span>;
    }</span>
    <span class="tag">ul</span><span class="rules">{
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">25px</span></span></span>;
        <span class="rule"><span class="attribute">list-style</span>:<span class="value"> none</span></span>;
    }</span>
    <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">text-decoration</span>:<span class="value"> none</span></span>;
    }</span>
    <span class="id">#nav</span> <span class="tag">li</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;

        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">25px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> -<span class="number">7px</span></span></span>; <span class="comment">/*利用负边距产生层叠属性*/</span>
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
    }</span>
    <span class="id">#nav</span> <span class="tag">a</span> <span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>; 
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">86px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">25px</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">25px</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFFFFF</span></span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(images/nav/btn2.gif) center center no-repeat</span></span>;
    }</span>
    <span class="id">#nav</span> <span class="rule"><span class="attribute">a</span>:<span class="value">hover {
        position: relative</span></span>; <span class="comment">/*设置容器为相对定位，是元素获得层叠属性*/</span>
        <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">99</span></span></span>; <span class="comment">/* 提升锚点a标签的层叠级别 */</span>
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#000000</span></span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(images/nav/btn1.gif) <span class="number">0</span> <span class="number">0</span> no-repeat</span></span>; 
    }</span>
</code></pre><p>对于包含有<code>position:relative/position:absolute</code>的定位元素，当其z-index值不是auto的时候，会创建层叠上下文。</p>
<p>刷新下页面效果如下：</p>
<p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/dhl1.jpg-blogImg" alt=""></p>
<blockquote>
<p>零零碎碎的时间凑出来真是不容易 时间真是越来越不够用了 咕~~(╯﹏╰)b</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="导航栏结构分析">导航栏结构分析</h1><hr>
<p>有的网页导航栏直接将a标签放在div中，比如：百度和网易等。</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"nav"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Home<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>About<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>Contact<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.supce.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS学习笔记之相册]]></title>
    <link href="http://blog.supce.com/2016/05/05/CSS%E4%B9%8B%E7%9B%B8%E5%86%8C/"/>
    <id>http://blog.supce.com/2016/05/05/CSS之相册/</id>
    <published>2016-05-04T16:00:00.000Z</published>
    <updated>2016-05-05T03:18:11.733Z</updated>
    <content type="html"><![CDATA[<h1 id="一个简易的相册">一个简易的相册</h1><hr>
<p>在上一次模仿新闻页的时候，学习了一种对图片进行处理的方式，这次换个思路，写一个简易的相册。</p>
<h2 id="第一种思路">第一种思路</h2><p>惯例 HTML框架<br><a id="more"></a></p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"photo"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h4</span>&gt;</span>简易相册<span class="tag">&lt;/<span class="title">h4</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/photo/1.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/photo/2.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/photo/3.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/photo/4.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/photo/5.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/photo/6.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/photo/7.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/photo/8.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/photo/9.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>然后可以先给整个div添加样式</p>
<pre><code><span class="id">#photo</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">800px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">590px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span> auto</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">39</span>,<span class="number">40</span>,<span class="number">34</span>)</span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">15px</span></span></span>;
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
    }</span>
</code></pre><p>设置整个div为relative，以方便我们对img和h4进行定位</p>
<p>然后为div内部元素添加样式</p>
<pre><code><span class="tag">h4</span><span class="rules">{
    <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">15px</span> <span class="string">"楷体"</span></span></span>;
    <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
    <span class="rule"><span class="attribute">right</span>:<span class="value"> <span class="number">15px</span></span></span>;
    <span class="rule"><span class="attribute">bottom</span>:<span class="value"> <span class="number">15px</span></span></span>;
}</span>
<span class="tag">ul</span><span class="rules">{
    <span class="rule"><span class="attribute">float</span>:<span class="value"> right</span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">168px</span></span></span>;
    <span class="rule"><span class="attribute">list-style</span>:<span class="value"> none
}
li{
    float: left</span></span>;
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">60px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">60px</span></span></span>;
    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span></span></span>;
    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">2px</span> solid <span class="hexcolor">#CDCDCD</span></span></span>;
    <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
}</span>
<span class="tag">a</span><span class="rules">{
    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">60px</span></span></span>;
    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">60px</span></span></span>;
    <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
    <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
}</span>
<span class="tag">img</span><span class="rules">{
    <span class="rule"><span class="attribute">margin</span>:<span class="value"> -<span class="number">160px</span> <span class="number">0</span> <span class="number">0</span> -<span class="number">80px</span></span></span>;
}</span>
<span class="rule"><span class="attribute">a</span>:<span class="value">hover img{
    position: absolute</span></span>;
    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">10px</span></span></span>;
    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">10px</span></span></span>;
    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;
    <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">2px</span> solid <span class="hexcolor">#CDCDCD</span></span></span>;
}
</code></pre><p>刷新一下页面：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/xc.jpg-blogImg" alt=""></p>
<h2 id="第二种思路">第二种思路</h2><p>当然，刚才只是一种思路，我们也可以设置页面默认展示第一个图片，但是这种思路有一个缺点，当图片的大小不一样时，其他图片不能覆盖第一张图片。所以，另一种方式可以仿照tab标签那一部分的思路，结合我们的JavaScript，就能写出更加美观的相册<br>首选对HTML结构进行修改：</p>
<pre><code>&lt;<span class="tag">div</span> id=<span class="string">"photo"</span>&gt;
    &lt;h4&gt;简易相册&lt;/h4&gt;
    &lt;ul&gt;
        &lt;<span class="tag">li</span> onmouseover=<span class="string">"go(1)"</span>&gt;&lt;<span class="tag">img</span> src=<span class="string">"images/photo/1.jpg"</span>&gt;&lt;/li&gt;
        &lt;<span class="tag">li</span> onmouseover=<span class="string">"go(2)"</span>&gt;&lt;<span class="tag">img</span> src=<span class="string">"images/photo/2.jpg"</span>&gt;&lt;/li&gt;
        &lt;<span class="tag">li</span> onmouseover=<span class="string">"go(3)"</span>&gt;&lt;<span class="tag">img</span> src=<span class="string">"images/photo/3.jpg"</span>&gt;&lt;/li&gt;
        &lt;<span class="tag">li</span> onmouseover=<span class="string">"go(4)"</span>&gt;&lt;<span class="tag">img</span> src=<span class="string">"images/photo/4.jpg"</span>&gt;&lt;/li&gt;
        &lt;<span class="tag">li</span> onmouseover=<span class="string">"go(5)"</span>&gt;&lt;<span class="tag">img</span> src=<span class="string">"images/photo/5.jpg"</span>&gt;&lt;/li&gt;
        &lt;<span class="tag">li</span> onmouseover=<span class="string">"go(6)"</span>&gt;&lt;<span class="tag">img</span> src=<span class="string">"images/photo/6.jpg"</span>&gt;&lt;/li&gt;
        &lt;<span class="tag">li</span> onmouseover=<span class="string">"go(7)"</span>&gt;&lt;<span class="tag">img</span> src=<span class="string">"images/photo/7.jpg"</span>&gt;&lt;/li&gt;
        &lt;<span class="tag">li</span> onmouseover=<span class="string">"go(8)"</span>&gt;&lt;<span class="tag">img</span> src=<span class="string">"images/photo/8.jpg"</span>&gt;&lt;/li&gt;
        &lt;<span class="tag">li</span> onmouseover=<span class="string">"go(9)"</span>&gt;&lt;<span class="tag">img</span> src=<span class="string">"images/photo/9.jpg"</span>&gt;&lt;/li&gt;

    &lt;/ul&gt;
    &lt;<span class="tag">img</span> class=<span class="string">"img_detail block"</span> src=<span class="string">"images/photo/1.jpg"</span>&gt;
    &lt;<span class="tag">img</span> class=<span class="string">"img_detail"</span> src=<span class="string">"images/photo/2.jpg"</span>&gt;
    &lt;<span class="tag">img</span> class=<span class="string">"img_detail"</span> src=<span class="string">"images/photo/3.jpg"</span>&gt;
    &lt;<span class="tag">img</span> class=<span class="string">"img_detail"</span> src=<span class="string">"images/photo/4.jpg"</span>&gt;
    &lt;<span class="tag">img</span> class=<span class="string">"img_detail"</span> src=<span class="string">"images/photo/5.jpg"</span>&gt;
    &lt;<span class="tag">img</span> class=<span class="string">"img_detail"</span> src=<span class="string">"images/photo/6.jpg"</span>&gt;
    &lt;<span class="tag">img</span> class=<span class="string">"img_detail"</span> src=<span class="string">"images/photo/7.jpg"</span>&gt;
    &lt;<span class="tag">img</span> class=<span class="string">"img_detail"</span> src=<span class="string">"images/photo/8.jpg"</span>&gt;
    &lt;<span class="tag">img</span> class=<span class="string">"img_detail"</span> src=<span class="string">"images/photo/9.jpg"</span>&gt;
&lt;/div&gt;
</code></pre><p>然后修改CSS</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;
    }</span>
    <span class="id">#photo</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">800px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">590px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span> auto</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">39</span>,<span class="number">40</span>,<span class="number">34</span>)</span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">15px</span></span></span>;
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">5px</span> <span class="hexcolor">#8f8fbd</span>)</span></span>;
    }</span>
    <span class="tag">h4</span><span class="rules">{
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">15px</span> <span class="string">"楷体"</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
        <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
        <span class="rule"><span class="attribute">right</span>:<span class="value"> <span class="number">15px</span></span></span>;
        <span class="rule"><span class="attribute">bottom</span>:<span class="value"> <span class="number">15px</span></span></span>;
    }</span>
    <span class="tag">ul</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">168px</span></span></span>;
        <span class="rule"><span class="attribute">list-style</span>:<span class="value"> none
    }
    li{
        float: left</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">60px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">60px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">2px</span> solid <span class="hexcolor">#CDCDCD</span></span></span>;
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
    }</span>

    <span class="tag">img</span><span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> -<span class="number">160px</span> <span class="number">0</span> <span class="number">0</span> -<span class="number">80px</span></span></span>;
    }</span>
    <span class="class">.img_detail</span><span class="rules">{
        <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span></span>;
    }</span>
    <span class="class">.block</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
        <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">2px</span> solid <span class="hexcolor">#CDCDCD</span></span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>最后添加JavaScript</p>
<pre><code><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
    <span class="keyword">var</span> li = <span class="built_in">document</span>.getElementById(<span class="string">"photo"</span>).getElementsByTagName(<span class="string">"li"</span>);
    <span class="keyword">var</span> img_detail = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"img_detail"</span>);
    <span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params">num</span>)</span>{
        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;li.length;i++){
            <span class="keyword">if</span>(num-<span class="number">1</span>==i){
                img_detail[i].className=<span class="string">"img_detail block"</span>;
            }<span class="keyword">else</span>{
                img_detail[i].className=<span class="string">"img_detail"</span>;
            }
        }
    }
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</code></pre><p>刷新一下页面，效果就好多了</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="一个简易的相册">一个简易的相册</h1><hr>
<p>在上一次模仿新闻页的时候，学习了一种对图片进行处理的方式，这次换个思路，写一个简易的相册。</p>
<h2 id="第一种思路">第一种思路</h2><p>惯例 HTML框架<br>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.supce.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS学习笔记之滤镜]]></title>
    <link href="http://blog.supce.com/2016/05/03/CSS%E4%B9%8B%E6%BB%A4%E9%95%9C/"/>
    <id>http://blog.supce.com/2016/05/03/CSS之滤镜/</id>
    <published>2016-05-02T16:00:00.000Z</published>
    <updated>2016-05-03T11:03:43.434Z</updated>
    <content type="html"><![CDATA[<h1 id="几个常见的CSS滤镜效果">几个常见的CSS滤镜效果</h1><hr>
<p>今天学习几个CSS的滤镜效果，这里暂时只用CSS3的filter来实现，至于利用SVG和Canvas的坑以后再填</p>
<h2 id="灰度图">灰度图</h2><p>在一些哀悼日，网页可能要设为全灰色。CSS3中用greyscale来实现 取值范围为0-1或0-100%；0表示无效果，1或100%表示最大效果</p>
<p>先是HTML代码：</p>
<pre><code>&lt;<span class="tag">img</span> src=<span class="string">"images/xi.jpg"</span>&gt;
&lt;<span class="tag">img</span> class=<span class="string">"filter"</span> src=<span class="string">"images/xi.jpg"</span>&gt;
</code></pre><a id="more"></a>
<p>然后是CSS的测试代码：</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="tag">img</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">300px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">400</span>x</span></span>;
    }</span>
    <span class="class">.filter</span><span class="rules">{
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value">  <span class="function">grayscale</span>(<span class="number">100%</span>)</span></span>; 
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">grayscale</span>(<span class="number">100%</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">grayscale</span>(<span class="number">100%</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">grayscale</span>(<span class="number">100%</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">grayscale</span>(<span class="number">100%</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> gray</span></span>;  <span class="comment">/*IE*/</span>
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/lj.jpg-blogImg" alt=""></p>
<h2 id="高斯模糊">高斯模糊</h2><p>高斯模糊也就是我没带眼镜时的效果，用blur实现 取值范围为0-N px，其中0为无效果</p>
<p>测试代码：</p>
<pre><code><span class="class">.filter</span><span class="rules">{
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value">  <span class="function">blur</span>(<span class="number">2px</span>)</span></span>; 
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">blur</span>(<span class="number">2px</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">blur</span>(<span class="number">2px</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">blur</span>(<span class="number">2px</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">blur</span>(<span class="number">2px</span>)</span></span>;
    }</span> 
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/lj1.jpg-blogImg" alt=""></p>
<h2 id="Speia滤镜">Speia滤镜</h2><p>Speia滤镜是对图片或元素整体进行棕褐色处理，就是老照片那种效果 取值范围为0-1或0-100%；0表示无效果，1或100%表示最大效果</p>
<p>测试代码：</p>
<pre><code><span class="class">.filter</span><span class="rules">{
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">sepia</span>(<span class="number">1</span>)</span></span>; 
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">sepia</span>(<span class="number">1</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">sepia</span>(<span class="number">1</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">sepia</span>(<span class="number">1</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">sepia</span>(<span class="number">1</span>)</span></span>;
    }</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/lj2.jpg-blogImg" alt=""></p>
<h2 id="饱和度滤镜">饱和度滤镜</h2><p>看到饱和度让我想起了冷屏和暖屏之间的战争以及到底用不用三星A屏 可以利用saturate实现 取值范围&gt;=0的数字或百分数，1为无效果，0为灰度图</p>
<p>测试代码:</p>
<pre><code><span class="class">.filter</span><span class="rules">{
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">saturate</span>(<span class="number">2</span>)</span></span>; 
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">saturate</span>(<span class="number">2</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">saturate</span>(<span class="number">2</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">saturate</span>(<span class="number">2</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">saturate</span>(<span class="number">2</span>)</span></span>;
    }</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/lj3.jpg-blogImg" alt=""></p>
<h2 id="反色滤镜">反色滤镜</h2><p>反色滤镜使用invert来实现 就是婴儿照那种胶片的感觉(好像把年龄暴漏了) 取值范围0~1或0~100%，0为无效果，1或100%表示最大效果</p>
<p>测试代码：</p>
<pre><code><span class="class">.filter</span><span class="rules">{
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">invert</span>(<span class="number">1</span>)</span></span>; 
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">invert</span>(<span class="number">1</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">invert</span>(<span class="number">1</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">invert</span>(<span class="number">1</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">invert</span>(<span class="number">1</span>)</span></span>;
    }</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/lj4.jpg-blogImg" alt=""></p>
<h2 id="对比度滤镜">对比度滤镜</h2><p>对比度和亮度一般在显示器都可以调试，CSS3中对比度使用contrast 取值范围&gt;=0的数字或百分数，1为无效果</p>
<p>测试代码：</p>
<pre><code><span class="class">.filter</span><span class="rules">{
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">contrast</span>(<span class="number">2</span>)</span></span>; 
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">contrast</span>(<span class="number">2</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">contrast</span>(<span class="number">2</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">contrast</span>(<span class="number">2</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">contrast</span>(<span class="number">2</span>)</span></span>;
    }</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/lj5.jpg-blogImg" alt=""></p>
<h2 id="亮度滤镜">亮度滤镜</h2><p>亮度滤镜使用brightness 取值范围&gt;=0的数字或百分数，1为无效果</p>
<p>测试代码：</p>
<pre><code><span class="class">.filter</span><span class="rules">{
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">brightness</span>(<span class="number">2</span>)</span></span>; 
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">brightness</span>(<span class="number">2</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">brightness</span>(<span class="number">2</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">brightness</span>(<span class="number">2</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">brightness</span>(<span class="number">2</span>)</span></span>;
    }</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/lj6.jpg-blogImg" alt=""></p>
<h2 id="阴影滤镜">阴影滤镜</h2><p>阴影滤镜其实在表单写button的时候用过，可以增加元素的立体感 使用drop-shadow来实现<br>格式：</p>
<blockquote>
<p>filer: drop-shadow(x-offset y-offset 阴影模糊半径 阴影颜色)<br>x-offset和y-offset为阴影的相对于元素左上角的位移距离；</p>
</blockquote>
<p>测试代码:</p>
<pre><code><span class="class">.filter</span><span class="rules">{
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>; 
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>;
    }</span>
</code></pre><p>效果美美的：</p>
<p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/lj7.jpg-blogImg" alt=""></p>
<blockquote>
<p>注意：阴影的外观受border-radius样式的影响</p>
</blockquote>
<p>比如：</p>
<pre><code><span class="class">.filter</span><span class="rules">{
        <span class="rule"><span class="attribute">-webkit-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>; 
        <span class="rule"><span class="attribute">-ms-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>;
        <span class="rule"><span class="attribute">-moz-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>;
        <span class="rule"><span class="attribute">-o-filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"> <span class="function">drop-shadow</span>(<span class="number">5px</span> <span class="number">5px</span> <span class="number">3px</span> <span class="hexcolor">#4D4DFF</span>)</span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">20px</span></span></span>;
    }</span>
</code></pre><p>是不是更美了</p>
<p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/lj8.jpg-blogImg" alt=""></p>
<p>当然也可以结合border来进行更好的美化效果。这里就不贴代码和效果了</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="几个常见的CSS滤镜效果">几个常见的CSS滤镜效果</h1><hr>
<p>今天学习几个CSS的滤镜效果，这里暂时只用CSS3的filter来实现，至于利用SVG和Canvas的坑以后再填</p>
<h2 id="灰度图">灰度图</h2><p>在一些哀悼日，网页可能要设为全灰色。CSS3中用greyscale来实现 取值范围为0-1或0-100%；0表示无效果，1或100%表示最大效果</p>
<p>先是HTML代码：</p>
<pre><code>&lt;<span class="tag">img</span> src=<span class="string">"images/xi.jpg"</span>&gt;
&lt;<span class="tag">img</span> class=<span class="string">"filter"</span> src=<span class="string">"images/xi.jpg"</span>&gt;
</code></pre>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.supce.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS学习笔记之选项卡]]></title>
    <link href="http://blog.supce.com/2016/05/03/CSS%E4%B9%8B%E9%80%89%E9%A1%B9%E5%8D%A1/"/>
    <id>http://blog.supce.com/2016/05/03/CSS之选项卡/</id>
    <published>2016-05-02T16:00:00.000Z</published>
    <updated>2016-05-03T13:07:24.593Z</updated>
    <content type="html"><![CDATA[<h1 id="网页中的选项卡">网页中的选项卡</h1><hr>
<p>在一些门户网站中，为了在有限的网页空间中尽可能的展示更多的信息，会采用tab选项卡的方式。比如<a href="http://www.163.com/" target="_blank" rel="external">网易</a>首页就使用了大量的选项卡。<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tab.jpg-blogImg" alt=""><br>下面学习几种实现tab选项卡的方式</p>
<a id="more"></a>
<h2 id="Iframe框架">Iframe框架</h2><p>记得以前在很多XX后台管理系统中会使用iframe框架来实现在同一个页面中相同的位置显示不同的内容<br>先是HTML框架子：</p>
<pre><code><span class="tag">&lt;<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://163.com"</span> <span class="attribute">target</span>=<span class="value">"web_wrapper"</span>&gt;</span>网易<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://baidu.com"</span> <span class="attribute">target</span>=<span class="value">"web_wrapper"</span>&gt;</span>百度<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://sohu.com"</span> <span class="attribute">target</span>=<span class="value">"web_wrapper"</span>&gt;</span>搜狐<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://sina.com.cn"</span> <span class="attribute">target</span>=<span class="value">"web_wrapper"</span>&gt;</span>新浪<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
<span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;<span class="title">iframe</span> <span class="attribute">scrolling</span>=<span class="value">"no"</span> <span class="attribute">src</span>=<span class="value">"http://163.com"</span> <span class="attribute">name</span>=<span class="value">"web_wrapper"</span>&gt;</span><span class="tag">&lt;/<span class="title">iframe</span>&gt;</span>
</code></pre><p>简单修改下样式</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="tag">ul</span><span class="rules">{
        <span class="rule"><span class="attribute">list-style</span>:<span class="value"> none</span></span>;
    }</span>
    <span class="tag">li</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;
        <span class="rule"><span class="attribute">margin-right</span>:<span class="value"> <span class="number">10px</span></span></span>;
    }</span>
    <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">text-decoration</span>:<span class="value"> none</span></span>;
    }</span>
    <span class="tag">iframe</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">960px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">400px</span></span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>简单粗暴：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tab1.jpg-blogImg" alt=""></p>
<h2 id="利用JS实现tab选项卡">利用JS实现tab选项卡</h2><p>iframe感觉并不是很好用，可以利用JS实现一个更加灵活的tab选项卡。选项卡主要由多个选项卡标题和选项卡内容区域组成，通过浮动或者定位将选项卡标题和内容分别控制在某个区域，然后通过JS来给我们的选项卡标题添加事件以实现控制选项卡内容<br>大概就是下图这个意思：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tab2.jpg-blogImg" alt=""><br>首先还是我们的HTML框架子</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tab"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h3</span> <span class="attribute">class</span>=<span class="value">"selected"</span> <span class="attribute">onmouseover</span>=<span class="value">"go(1)"</span>&gt;</span>选项卡一<span class="tag">&lt;/<span class="title">h3</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"block"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>习近平:构建不敢腐不能腐不想腐的机制<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>这些年习近平的劳动节 国平 网信专题 这三年<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>李克强在北大讲了啥 校长教授们连鼓四次掌<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>中央军委与卫计委等部门调查北京市武警二院<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>外交部:"西藏流亡政府"不合法"选举"是场闹剧<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h3</span> <span class="attribute">onmouseover</span>=<span class="value">"go(2)"</span>&gt;</span>选项卡二<span class="tag">&lt;/<span class="title">h3</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>莆田人承包了中国90%寺庙？网帖系旧文拼凑<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>江西"头号老赖"引爆官场地震 苏荣等官员涉案<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>中国最高过山车半空停车 28人悬50米高空(图)<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>准新娘宴客时被邻桌砸满身血 工作人员未阻拦<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>母女大闹机场被拘10天 女儿自称"市政协委员"<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h3</span> <span class="attribute">onmouseover</span>=<span class="value">"go(3)"</span>&gt;</span>选项卡三<span class="tag">&lt;/<span class="title">h3</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>学者：中国实际控制黄岩岛已4年 填了更好<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>巴斯钢铁造船厂将建造首艘伯克III型驱逐舰<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>澳媒:澳买潜艇对付中国?中方觉得没啥要紧的<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>澳新潜艇将装哪些美式装备 已采购战斧导弹<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>周琦优劣势明显难坏NBA 莱斯特的"平凡"之路<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>  
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tab3.jpg-blogImg" alt=""><br>然后添加样式</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span></span></span>;
    }</span>
    <span class="id">#tab</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">333px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> auto</span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">15px</span></span></span>;
    }</span>
    <span class="tag">h3</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">border-left</span>:<span class="value"> none</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#c0c0c0</span></span></span>;
        <span class="rule"><span class="attribute">cursor</span>:<span class="value"> pointer</span></span>;
    }</span>
    <span class="tag">h3</span><span class="pseudo">:first-child</span><span class="rules">{
        <span class="rule"><span class="attribute">border-left</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
    }</span>
    <span class="class">.selected</span><span class="rules">{
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
    }</span>
    <span class="tag">ul</span><span class="rules">{
        <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5px</span></span></span>;
        <span class="rule"><span class="attribute">list-style</span>:<span class="value"> none</span></span>;
    }</span>
    <span class="tag">ul</span> <span class="tag">li</span><span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">20px</span> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">border-bottom</span>:<span class="value"><span class="number">1px</span> dashed <span class="hexcolor">#a8a8a8</span></span></span>;
    }</span>
    <span class="id">#tab</span> <span class="tag">div</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
        <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span></span>;
    }</span>
    <span class="id">#tab</span> <span class="class">.block</span><span class="rules">{
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
    }</span></span>
</code></pre><p>利用JS添加mouseover事件</p>
<pre><code><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript">
    <span class="keyword">var</span> h = <span class="built_in">document</span>.getElementById(<span class="string">"tab"</span>).getElementsByTagName(<span class="string">"h3"</span>);
    <span class="keyword">var</span> d = <span class="built_in">document</span>.getElementById(<span class="string">"tab"</span>).getElementsByTagName(<span class="string">"div"</span>);
    <span class="function"><span class="keyword">function</span> <span class="title">go</span>(<span class="params">num</span>)</span>{
        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;h.length;i++){
            <span class="keyword">if</span> (num-<span class="number">1</span> == i) {
                h[i].className+=<span class="string">" selected"</span>;
                d[i].className+=<span class="string">" block"</span>;
            }<span class="keyword">else</span>{
                h[i].className=<span class="string">" "</span>;
                d[i].className=<span class="string">" "</span>;
            }
        }
    }
</span><span class="tag">&lt;/<span class="title">script</span>&gt;</span>
</code></pre><p>刷新下页面：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tab4.jpg-blogImg" alt=""></p>
<h2 id="对选项卡进行优化">对选项卡进行优化</h2><p>这时候会发现刚才的例子由于利用了float和absolute定位的方式，我们即使清除浮动也无法使父元素的高度自适应，想办法只使用float不使用absolute，这时就需要修改HTML代码的结构了<br>修改后的HTML结构如下：</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tab"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h3</span> <span class="attribute">class</span>=<span class="value">"selected"</span> <span class="attribute">onmouseover</span>=<span class="value">"go(1)"</span>&gt;</span>选项卡一<span class="tag">&lt;/<span class="title">h3</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h3</span> <span class="attribute">onmouseover</span>=<span class="value">"go(2)"</span>&gt;</span>选项卡二<span class="tag">&lt;/<span class="title">h3</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h3</span> <span class="attribute">onmouseover</span>=<span class="value">"go(3)"</span>&gt;</span>选项卡三<span class="tag">&lt;/<span class="title">h3</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"block"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>习近平:构建不敢腐不能腐不想腐的机制<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>这些年习近平的劳动节 国平 网信专题 这三年<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>李克强在北大讲了啥 校长教授们连鼓四次掌<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>中央军委与卫计委等部门调查北京市武警二院<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>外交部:"西藏流亡政府"不合法"选举"是场闹剧<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>莆田人承包了中国90%寺庙？网帖系旧文拼凑<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>江西"头号老赖"引爆官场地震 苏荣等官员涉案<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>中国最高过山车半空停车 28人悬50米高空(图)<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>准新娘宴客时被邻桌砸满身血 工作人员未阻拦<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>母女大闹机场被拘10天 女儿自称"市政协委员"<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>学者：中国实际控制黄岩岛已4年 填了更好<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>巴斯钢铁造船厂将建造首艘伯克III型驱逐舰<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>澳媒:澳买潜艇对付中国?中方觉得没啥要紧的<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>澳新潜艇将装哪些美式装备 已采购战斧导弹<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;<span class="title">li</span>&gt;</span>周琦优劣势明显难坏NBA 莱斯特的"平凡"之路<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>  
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>样式稍作修改</p>
<pre><code><span class="id">#tab</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">333px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> auto</span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">15px</span></span></span>;
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
    }</span>
<span class="id">#tab</span> <span class="tag">div</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> none</span></span>;
    }</span>
</code></pre><p>其他保持不变，刷新页面会发现父元素可以自适应高度了<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tab5.jpg-blogImg" alt=""><br>但是这样又带来另一个问题，那就是渐进增强与平稳退化。比如当某些原因导致我们的CSS不能加载时，没有样式的HTML页面变成了这样：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tab6.jpg-blogImg" alt=""></p>
<blockquote>
<p>这样的结构其实并不如上一个HTML结构优秀。但为了向父元素高度自适应妥协，也暂时只好这样了。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="网页中的选项卡">网页中的选项卡</h1><hr>
<p>在一些门户网站中，为了在有限的网页空间中尽可能的展示更多的信息，会采用tab选项卡的方式。比如<a href="http://www.163.com/">网易</a>首页就使用了大量的选项卡。<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tab.jpg-blogImg" alt=""><br>下面学习几种实现tab选项卡的方式</p>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.supce.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS学习笔记之表格（二）]]></title>
    <link href="http://blog.supce.com/2016/04/29/CSS%E4%B9%8B%E8%A1%A8%E6%A0%BC(2)/"/>
    <id>http://blog.supce.com/2016/04/29/CSS之表格(2)/</id>
    <published>2016-04-28T16:00:00.000Z</published>
    <updated>2016-05-03T11:06:22.554Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>虽然题目是表格，其实是想把之前的文本，列表，图片，表单结合一起写个简单的小例子。这次就写一个全国最大的同性交友网<a href="https://passport.bilibili.com/login" target="_blank" rel="external">B站</a>的登录页面吧,毕竟之前的页面写起来不过瘾</p>
</blockquote>
<p><em>权侵删</em></p>
<h1 id="结构分析">结构分析</h1><hr>
<p>首先把原网页结构搞明白<br>最上面是header，header里左侧是一个由li组成的导航栏，右侧是搜索、登录、注册和投稿按钮。<br>header下面是一个宽度为100%的图片。暂时把它称为img_wraper吧。<br><a id="more"></a><br>再往下是网页的content部分，而content内部又分为上左右三部分。上侧为横线和登录图片，左侧为APP下载二维码，右侧为一个登录表单。<br>content下面就是footer部分 footer内部也分为上左右三部分，上侧为分别为B站的相关链接传送门，左侧为合作机构和备案等法律信息，右侧为B站客户端下载和其他公共账号信息</p>
<h1 id="HTML框架">HTML框架</h1><p>结构分析明白，HTML框架子还是很好写的</p>
<pre><code><span class="tag">&lt;<span class="title">body</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"header"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"header_left"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">ul</span> <span class="attribute">class</span>=<span class="value">"header_meau"</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"home"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>主站<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>画友<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>游戏中心<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>直播<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>周边<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"header_right"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>登录<span class="tag">&lt;/<span class="title">a</span>&gt;</span> |<span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>注册<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"up"</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>投稿<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"search"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">form</span>&gt;</span>
                <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">value</span>=<span class="value">"搜索"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
                <span class="tag">&lt;<span class="title">button</span> <span class="attribute">type</span>=<span class="value">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="title">button</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">form</span>&gt;</span> 
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"img_wrap"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"header_banner"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"content"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"line"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"img_login"</span>&gt;</span>
                <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/t2.png"</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content_left"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"QR_Code"</span>&gt;</span>
                <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/qr-tips.png"</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
            <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"qr_title"</span>&gt;</span>扫描二维码登录<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
            <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"qr_text"</span>&gt;</span>请使用<span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>哔哩哔哩客户端<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
            <span class="tag">&lt;<span class="title">img</span> <span class="attribute">class</span>=<span class="value">"content_bg"</span> <span class="attribute">src</span>=<span class="value">"images/2233login.png"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"vertical_line"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"content_right"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">form</span>&gt;</span>
                <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">class</span>=<span class="value">"email"</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">value</span>=<span class="value">"你的手机号/邮箱"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
                <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">class</span>=<span class="value">"pwd"</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">value</span>=<span class="value">"密码"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
                <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"find_pwd"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>忘记密码?&gt;<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
                <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"check"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">value</span>=<span class="value">"验证码"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/captcha.jpg"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>换一张<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">p</span>&gt;</span> 
                <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"remember"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>记住我<span class="tag">&lt;<span class="title">span</span>&gt;</span>不是自己的电脑上不要勾选此项<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
                <span class="tag">&lt;<span class="title">p</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">class</span>=<span class="value">"login_btn"</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"登录"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">class</span>=<span class="value">"regist_btn"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"注册"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">p</span>&gt;</span> 

                    <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
                        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"weibo"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>微博账号登录<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"qq"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>QQ账号登录<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>

            <span class="tag">&lt;/<span class="title">form</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"clear"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"footer"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"footer_top"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tips"</span>&gt;</span>Bilibili<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>友情链接<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">class</span>=<span class="value">"taobao"</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/b-taobao.png"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>加入我们<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>

                <span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tips"</span>&gt;</span>帮助<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>帮助中心<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card card_wide"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>补档认领处<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>资源免责声明<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>侵权申诉<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card longer"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>建议/BUG汇报<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">li</span>&gt;</span>
                <span class="tag">&lt;<span class="title">li</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"tips"</span>&gt;</span>传送门<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>高级弹幕<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>名人堂<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>活动专题页<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>资讯<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>壁纸站<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>分院帽计划<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"card"</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>活动中心<span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">li</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"footer_content"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"footer_left"</span>&gt;</span>
                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"partner_banner"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"legal_info"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>广播电视节目制作经营许可证：（沪）字第1248号<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>网络文化经营许可证：沪网文[2013]0480-056号<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>信息网络传播视听节目许可证：0910417<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"legal_info"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>互联网ICP备案：沪ICP备13002172号-3<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">p</span>&gt;</span>沪ICP证：沪B2-20100043<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"footer_right"</span>&gt;</span>
                <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"phone_pic"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">span</span>&gt;</span>手机端下载<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">a</span>&gt;</span>
                <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"weibo_pic"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">span</span>&gt;</span>新浪微博<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">a</span>&gt;</span>
                <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"weixin_pic"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
                    <span class="tag">&lt;<span class="title">span</span>&gt;</span>官方微信<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
                <span class="tag">&lt;/<span class="title">a</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
            <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"clear"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
<span class="tag">&lt;/<span class="title">body</span>&gt;</span>
</code></pre><p>首先是没有CSS修饰的页面<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/B1.jpg-blogImg" alt=""></p>
<h1 id="header部分CSS">header部分CSS</h1><p>为header部分添加CSS</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">font-family</span>:<span class="value"> <span class="string">'Microsoft YaHei'</span></span></span>;
    }</span>
    <span class="tag">ul</span><span class="rules">{
        <span class="rule"><span class="attribute">list-style</span>:<span class="value">none</span></span>;
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
        <span class="rule"><span class="attribute">zoom</span>:<span class="value"><span class="number">1</span></span></span>;
    }</span>
    <span class="tag">ul</span> <span class="tag">li</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value">left</span></span>;
    }</span>
    <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">text-decoration</span>:<span class="value"> none</span></span>;
    }</span>
    <span class="rule"><span class="attribute">a</span>:<span class="value">hover{
        color: <span class="function">rgb</span>(<span class="number">0</span>,<span class="number">160</span>,<span class="number">216</span>)</span></span>;
    }
    <span class="class">.clear</span><span class="rules">{
        <span class="rule"><span class="attribute">clear</span>:<span class="value"> both</span></span>;
    }</span>
    <span class="id">#header</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">980px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">42px</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">42px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span> auto</span></span>;
    }</span>
    <span class="id">#header</span><span class="pseudo">:after</span><span class="rules">{
        <span class="rule"><span class="attribute">clear</span>:<span class="value"> both</span></span>;
        <span class="rule"><span class="attribute">visibility</span>:<span class="value"> none</span></span>;
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
        <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">""</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">0</span></span></span>;
    }</span>
    <span class="class">.header_left</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value">left</span></span>;
    }</span>
    <span class="class">.header_meau</span><span class="rules">{
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
        <span class="rule"><span class="attribute">zoom</span>:<span class="value"><span class="number">1</span></span></span>;
    }</span>
    <span class="class">.header_meau</span> <span class="tag">li</span><span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span> <span class="number">15px</span></span></span>;
    }</span>
    <span class="class">.header_meau</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"><span class="number">14px</span></span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
    }</span>
    <span class="class">.home</span><span class="rules">{
        <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="function">url</span>(images/icons.png) -<span class="number">910px</span> -<span class="number">74px</span></span></span>;
    }</span>
    <span class="class">.home</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">50px</span></span></span>;
        <span class="rule"><span class="attribute">padding-left</span>:<span class="value"><span class="number">20px</span></span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
    }</span>
    <span class="class">.header_right</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value">right</span></span>;
    }</span>
    <span class="class">.header_right</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">14px</span></span></span>;
    }</span>
    <span class="class">.header_right</span> <span class="tag">li</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-right</span>:<span class="value"> <span class="number">10px</span></span></span>;
    }</span>
    <span class="class">.up</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">58px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">48px</span></span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"><span class="function">url</span>(images/b-post.png)</span></span>;
    }</span>
    <span class="class">.search</span> <span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">120px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">32px</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">32px</span></span></span>;
        <span class="rule"><span class="attribute">float</span>:<span class="value">right</span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">5px</span> <span class="number">20px</span> <span class="number">5px</span> <span class="number">0</span></span></span>;
    }</span>
    <span class="class">.search</span> <span class="tag">form</span><span class="rules">{
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#ccd0d7</span></span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">16px</span></span></span>;
    }</span>
    <span class="class">.search</span> <span class="tag">input</span><span class="rules">{
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">12px</span> Arial</span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value">none</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">78px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value">auto <span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">16px</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#99a2aa</span></span></span>;
    }</span>
    <span class="class">.search</span> <span class="tag">button</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
        <span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">2px</span></span></span>;
        <span class="rule"><span class="attribute">right</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"> none</span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"><span class="function">url</span>(images/icons.png) -<span class="number">786px</span> -<span class="number">721px</span></span></span>;
    }</span>
    <span class="id">#img_wrap</span><span class="rules">{
        <span class="rule"><span class="attribute">background</span>:<span class="value"><span class="function">url</span>(images/rl_topbg.png) repeat-x <span class="number">0</span> <span class="number">0</span></span></span>;
    }</span>
    <span class="class">.header_banner</span> <span class="rules">{
        <span class="rule"><span class="attribute">background</span>:<span class="value"><span class="function">url</span>(images/rl_top.png)</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">980px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">106px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span> auto</span></span>;
    }</span></span>
</code></pre><h1 id="content部分CSS">content部分CSS</h1><p>为content部分添加CSS</p>
<pre><code><span class="id">#content</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">980px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span> auto</span></span>;
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
    }</span>
    <span class="class">.line</span><span class="rules">{
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">25px</span></span></span>;
        <span class="rule"><span class="attribute">border-bottom</span>:<span class="value"> <span class="number">2px</span> solid <span class="hexcolor">#ddd</span></span></span>;
    }</span>
    <span class="class">.img_login</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">120px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">47px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span> auto</span></span>;
    }</span>
    <span class="class">.content_left</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">480px</span></span></span>;
        <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
        <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">50px</span></span></span>;
    }</span>
    <span class="class">.qr_title</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-bottom</span>:<span class="value"> <span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
    }</span>
    <span class="class">.qr_text</span><span class="rules">{
        <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">9</span></span></span>;
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">13px</span></span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#717171</span></span></span>;
    }</span>
    <span class="class">.qr_text</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="function">rgb</span>(<span class="number">0</span>,<span class="number">160</span>,<span class="number">216</span>)</span></span>;
    }</span>
    <span class="class">.qr_text</span> <span class="rule"><span class="attribute">a</span>:<span class="value">hover{
        color: <span class="function">rgb</span>(<span class="number">250</span>,<span class="number">130</span>,<span class="number">170</span>)</span></span>;
    }
    <span class="class">.QR_Code</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">175px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">180px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">10px</span> auto</span></span>;
    }</span>
    <span class="class">.content_right</span><span class="rules">{
        <span class="rule"><span class="attribute">float</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">50px</span></span></span>;
    }</span>
    <span class="class">.content_bg</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value">absolute</span></span>;
        <span class="rule"><span class="attribute">bottom</span>:<span class="value"> -<span class="number">70px</span></span></span>;
    }</span>
    <span class="class">.vertical_line</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">2px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">240px</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#ddd</span></span></span>;
        <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
        <span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">right</span>:<span class="value">-<span class="number">15px</span></span></span>;
    }</span>
    <span class="class">.content_right</span> <span class="tag">p</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-bottom</span>:<span class="value"><span class="number">20px</span></span></span>;
    }</span>
    <span class="class">.email</span>,<span class="class">.pwd</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">400px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">40px</span></span></span>; 
        <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#ddd</span></span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">2px</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#aaa</span></span></span>;
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">14px</span></span></span>;
        <span class="rule"><span class="attribute">padding-left</span>:<span class="value"> <span class="number">10px</span></span></span>;
    }</span>
    <span class="class">.find_pwd</span><span class="rules">{
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">12px</span></span></span>;
    }</span>
    <span class="class">.find_pwd</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">0</span>,<span class="number">160</span>,<span class="number">215</span>)</span></span>;
    }</span>
    <span class="class">.find_pwd</span> <span class="rule"><span class="attribute">a</span>:<span class="value">hover{
        color: <span class="function">rgb</span>(<span class="number">250</span>,<span class="number">130</span>,<span class="number">170</span>)</span></span>;
    }
    <span class="class">.check</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> -<span class="number">30px</span></span></span>;
    }</span>
    <span class="class">.check</span> <span class="tag">input</span><span class="rules">{
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">40px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#ddd</span></span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">2px</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#aaa</span></span></span>;
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">14px</span></span></span>;
        <span class="rule"><span class="attribute">padding-left</span>:<span class="value"> <span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">249</span>,<span class="number">250</span>,<span class="number">252</span>)</span></span>;
    }</span>
    <span class="class">.check</span> <span class="tag">img</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">5px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#ddd</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">35px</span></span></span>;
        <span class="rule"><span class="attribute">vertical-align</span>:<span class="value">bottom</span></span>;
    }</span>
    <span class="class">.check</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">5px</span></span></span>;
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">12px</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">0</span>,<span class="number">160</span>,<span class="number">215</span>)</span></span>;
    }</span>
    <span class="class">.remember</span> <span class="tag">input</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-right</span>:<span class="value"> <span class="number">10px</span></span></span>;
    }</span>
    <span class="class">.remember</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">12px</span></span></span>;
    }</span>
    <span class="class">.remember</span> <span class="tag">span</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">20px</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#ddd</span></span></span>;
    }</span>
    <span class="class">.login_btn</span>,<span class="class">.regist_btn</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">184px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">36px</span></span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">2px</span></span></span>;
        <span class="rule"><span class="attribute">cursor</span>:<span class="value"> pointer</span></span>;
    }</span>
    <span class="class">.login_btn</span><span class="rules">{
        <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#0381AA</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#00A7DE</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
    }</span>
    <span class="rule"><span class="attribute">.login_btn</span>:<span class="value">hover{
        background-color: <span class="function">rgb</span>(<span class="number">0</span>,<span class="number">190</span>,<span class="number">230</span>)</span></span>;
    }
    <span class="class">.regist_btn</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">27px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">1px</span> solid <span class="hexcolor">#ccc</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
    }</span>
    <span class="rule"><span class="attribute">.regist_btn</span>:<span class="value">hover{
        background-color: <span class="function">rgb</span>(<span class="number">247</span>,<span class="number">247</span>,<span class="number">247</span>)</span></span>;
    }
    <span class="class">.weibo</span><span class="rules">{
        <span class="rule"><span class="attribute">background</span>:<span class="value"><span class="function">url</span>(images/snsicon.png) no-repeat <span class="number">0</span> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">margin-right</span>:<span class="value"> <span class="number">40px</span></span></span>;
    }</span>
    <span class="class">.weibo</span> <span class="tag">a</span>,<span class="class">.qq</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">12px</span></span></span>;
        <span class="rule"><span class="attribute">padding-left</span>:<span class="value"> <span class="number">25px</span></span></span>;
    }</span>
    <span class="class">.qq</span><span class="rules">{
        <span class="rule"><span class="attribute">background</span>:<span class="value"><span class="function">url</span>(images/snsicon.png) no-repeat <span class="number">0</span> -<span class="number">41px</span></span></span>;
    }</span>
</code></pre><h1 id="footer部分CSS">footer部分CSS</h1><p>为footer添加CSS</p>
<pre><code>#footer{
        margin-top: 20px<span class="comment">;</span>
        padding: 20px 0<span class="comment">;</span>
        background-color: #f6f9fa<span class="comment">;</span>
    }
    .footer_top{
        width: 980px<span class="comment">;</span>
        margin:10px auto<span class="comment">;</span>
        overflow: hidden<span class="comment">;</span>
    }
    .footer_top li{
        float: left<span class="comment">;</span>
        position: relative<span class="comment">;</span>
        width: 296px<span class="comment">;</span>
        height: 100px<span class="comment">;</span>
        padding-left: 30px<span class="comment">;</span>
        padding-right: 10px<span class="comment">;</span>
        border-left: solid 1px #e5e9ef<span class="comment">;</span>
    }
    .footer_top li:first-child{
        border: none<span class="comment">;</span>
        padding-left: 0 !important<span class="comment">;</span>
    }
    .card{
        float: left<span class="comment">;</span>
        text-align: left<span class="comment">;</span>
        width: 86px<span class="comment">;</span>
        margin:4px 0px 3px 0<span class="comment">;</span>
    }
    .longer{
        width: 100px<span class="comment">;</span>
    }
    .tips{
        font-size: 14px<span class="comment">;</span>
        line-height: 22px<span class="comment">;</span>
        color: #717171<span class="comment">;</span>
    }
    .card a{
        font-size: 14px<span class="comment">;</span>
        display: block<span class="comment">;</span>
    }
    .taobao{
        float:right<span class="comment">;</span>
        margin: 10px 24px 0 0<span class="comment">;</span>
    }
    .card_wide{
        margin-right: 25px<span class="comment">;</span>
    }
    .footer_content{
        width: 980px<span class="comment">;</span>
        margin:0 auto<span class="comment">;</span>
    }
    .footer_left{
        float: left<span class="comment">;</span>
    }
    .footer_right{
        float: right<span class="comment">;</span>
    }
    .partner_banner{
        float: left<span class="comment">;</span>
        width: 96px<span class="comment">;</span>
        height: 70px<span class="comment">;</span>
        background: url(images/footpic.gif) no-repeat<span class="comment">;</span>
        margin-right: 10px<span class="comment">;</span>
    }
    .legal_info{
        float: left<span class="comment">;</span>
        line-height: 22px<span class="comment">;</span>
        margin: 0 5px<span class="comment">;</span>
        font-size: 12px<span class="comment">;</span>
        color: #717171<span class="comment">;</span>
    }
    .footer_right {
        width: 310px<span class="comment">;</span>
        text-align: center<span class="comment">;</span>
    }
    .footer_right a{
        float: left<span class="comment">;</span>
    }
    .footer_right span{
        font-size: 12px<span class="comment">;</span>
        padding-right: 20px<span class="comment">;</span>
    }
    .phone_pic,.weibo_pic,.weixin_pic{
        width: 65px<span class="comment">;</span>
        height: 65px<span class="comment">;</span>
        margin-right: 25px<span class="comment">;</span>
    }
    .phone_pic{
        background: url(images/icons.png) no-repeat -1020px -190px<span class="comment">;</span>
    }
    .weibo_pic{
        background: url(images/icons.png) no-repeat -1020px -318px<span class="comment">;</span>
    }
    .weixin_pic{
        background: url(images/icons.png) no-repeat -1020px -62px<span class="comment">;</span>
    }   
&lt;/style&gt;
</code></pre><p>OK，刷新下页面 还是很像的 大概模仿了一个七八分吧 可以兼容IE B站的登录页面在IE11下排版是错位的<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/B2.jpg-blogImg" alt=""><br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/B.jpg-blogImg" alt=""></p>
<blockquote>
<p>到JavaScript部分会专门在为这个网页添加相应的事件</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>虽然题目是表格，其实是想把之前的文本，列表，图片，表单结合一起写个简单的小例子。这次就写一个全国最大的同性交友网<a href="https://passport.bilibili.com/login">B站</a>的登录页面吧,毕竟之前的页面写起来不过瘾</p>
</blockquote>
<p><em>权侵删</em></p>
<h1 id="结构分析">结构分析</h1><hr>
<p>首先把原网页结构搞明白<br>最上面是header，header里左侧是一个由li组成的导航栏，右侧是搜索、登录、注册和投稿按钮。<br>header下面是一个宽度为100%的图片。暂时把它称为img_wraper吧。<br>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.supce.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS学习笔记之表格（一）]]></title>
    <link href="http://blog.supce.com/2016/04/27/CSS%E4%B9%8B%E8%A1%A8%E6%A0%BC(1)/"/>
    <id>http://blog.supce.com/2016/04/27/CSS之表格(1)/</id>
    <published>2016-04-26T16:00:00.000Z</published>
    <updated>2016-04-28T09:44:49.202Z</updated>
    <content type="html"><![CDATA[<h1 id="表格介绍">表格介绍</h1><hr>
<p>表格由一行或者多行单元格组成，能够友好的对数据进行整理归类，以便对数据进行分析。<br>一个表格结构由以下标签组成：<br><code>&lt;table&gt;</code> | table标签可定义表格。在table标签内部可以放置表格的标题、行、列<br><code>&lt;caption&gt;</code> | caption可以定义一个表格标题。该标签紧跟在table标签后，每个表格只能定义一个标题。标题通常会显示在表格最上方<br><code>&lt;th&gt;</code> | 定义表格内的表头单元格 文本会显示为粗体居中<br><code>&lt;tr&gt;</code> | 在表格中定义行<br><code>&lt;td&gt;</code> | 在表格中定义列<br><code>&lt;thead&gt;</code> | 定义表格的表头<br><code>&lt;tbody&gt;</code> | 定义表格的主题<br><code>&lt;tfoo&gt;</code> | 定义表格的页脚<br><a id="more"></a></p>
<h1 id="表格修饰">表格修饰</h1><p>首先创建一个table的框架</p>
<pre><code><span class="tag">&lt;<span class="title">table</span>&gt;</span>
    <span class="tag">&lt;<span class="title">caption</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="title">caption</span>&gt;</span>
    <span class="tag">&lt;<span class="title">thead</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
            <span class="tag">&lt;<span class="title">th</span>&gt;</span>标题1<span class="tag">&lt;/<span class="title">th</span>&gt;</span>
            <span class="tag">&lt;<span class="title">th</span>&gt;</span>标题2<span class="tag">&lt;/<span class="title">th</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">thead</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tbody</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
            <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容A<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
            <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容B<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
            <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容C<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
            <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容D<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
            <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容E<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
            <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容F<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tbody</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tfoot</span>&gt;</span>
        <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
            <span class="tag">&lt;<span class="title">td</span> <span class="attribute">colspan</span>=<span class="value">"2"</span>&gt;</span>这里是tfoot<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tfoot</span>&gt;</span>
<span class="tag">&lt;/<span class="title">table</span>&gt;</span>
</code></pre><p>默认的表格样式如下：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bg.jpg-blogImg" alt=""><br>惨不忍睹，下面就给表格添加样式</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="tag">table</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">300px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#E8E8E8</span></span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value">normal <span class="number">15px</span>/<span class="number">1.5</span> Arial</span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
    }</span>
    <span class="tag">caption</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">20px</span></span></span>;
    }</span>
    <span class="tag">tfoot</span><span class="rules">{
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">15px</span>/<span class="number">1.5</span> <span class="string">"楷体"</span></span></span>;
    }</span>
    <span class="tag">th</span><span class="rules">{
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"><span class="hexcolor">#CDCDCD</span></span></span>;
    }</span>
    <span class="tag">tbody</span> <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"><span class="hexcolor">#E8E8E8</span></span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>刷新下页面 美观多了<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bg1.jpg-blogImg" alt=""><br>这里还可以利用之前说到的子选择器与相邻选择器的方式进行样式调整，比如将第一列字体设置为绿色，第二列为红色。</p>
<pre><code><span class="tag">tr</span>&gt;<span class="tag">td</span><span class="rules">{
    <span class="rule"><span class="attribute">color</span>:<span class="value"> green</span></span>;
}</span>
<span class="tag">tr</span>&gt;<span class="tag">td</span>+<span class="tag">td</span><span class="rules">{
    <span class="rule"><span class="attribute">color</span>:<span class="value"> red</span></span>;
}</span>
</code></pre><p>非常容易实现我们想要的效果<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bg2.jpg-blogImg" alt=""><br>下面把单元格的背景色去掉 给单元格添加边框：</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="tag">table</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">300px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#E8E8E8</span></span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value">normal <span class="number">15px</span>/<span class="number">1.5</span> Arial</span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
    }</span>
    <span class="tag">caption</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">20px</span></span></span>;
    }</span>
    <span class="tag">tfoot</span><span class="rules">{
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">15px</span>/<span class="number">1.5</span> <span class="string">"楷体"</span></span></span>;
    }</span>
    <span class="tag">th</span><span class="rules">{
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#E8E8E8</span></span></span>;

    }</span>
    <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#E8E8E8</span></span></span>;
    }</span>
    <span class="tag">tr</span>&gt;<span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">color</span>:<span class="value"> green</span></span>;
    }</span>
    <span class="tag">tr</span>&gt;<span class="tag">td</span>+<span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">color</span>:<span class="value"> red</span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>效果如下：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bg3.jpg-blogImg" alt=""><br>但是表格单元格之间的空白并不是想要的。<br>可以在table中设置<code>border-collapse: collapse;</code>使边框合并<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bg4.jpg-blogImg" alt=""></p>
<h1 id="隔行换色表格">隔行换色表格</h1><p>有时候由于表格行数太多，为了增加表格数据的可视性，可以让表格隔行换色</p>
<h2 id="使用相邻选择器">使用相邻选择器</h2><p>首先把HTML框架搭好,在原来的基础上复制几行<br>然后先使用相邻选择器的方式实现隔行换色：</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="tag">table</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">300px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value">normal <span class="number">15px</span>/<span class="number">1.5</span> Arial</span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
        <span class="rule"><span class="attribute">border-collapse</span>:<span class="value"> collapse</span></span>;
    }</span>
    <span class="tag">caption</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">20px</span></span></span>;
    }</span>
    <span class="tag">tfoot</span><span class="rules">{
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">15px</span>/<span class="number">1.5</span> <span class="string">"楷体"</span></span></span>;
    }</span>
    <span class="tag">th</span><span class="rules">{
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
    }</span>
    <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#CDCDCD</span></span></span>;
    }</span>
    <span class="tag">tr</span>+<span class="tag">tr</span> <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#E8E8E8</span></span></span>;
    }</span>
    <span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span> <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#CDCDCD</span></span></span>;
    }</span>
    <span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span> <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#E8E8E8</span></span></span>;
    }</span>
    <span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span> <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#CDCDCD</span></span></span>;
    }</span>
    <span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span>+<span class="tag">tr</span> <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#E8E8E8</span></span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>效果是实现了，但是行数过多的情况下要添加很多CSS样式代码，此时这种方式是行不通的<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bg5.jpg-blogImg" alt=""></p>
<h2 id="使用类选择器">使用类选择器</h2><p>可以给tr添加类选择器，这样就很简单了。</p>
<pre><code><span class="tag">&lt;<span class="title">tbody</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span> <span class="attribute">class</span>=<span class="value">"tr_bg1"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容A<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容B<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容C<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容D<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span> <span class="attribute">class</span>=<span class="value">"tr_bg1"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容E<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容F<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容G<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容H<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span> <span class="attribute">class</span>=<span class="value">"tr_bg1"</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容I<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容J<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>
    <span class="tag">&lt;<span class="title">tr</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容K<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
        <span class="tag">&lt;<span class="title">td</span>&gt;</span>表格内容L<span class="tag">&lt;/<span class="title">td</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">tr</span>&gt;</span>    
<span class="tag">&lt;/<span class="title">tbody</span>&gt;</span>
</code></pre><p>CSS就少多了</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="tag">table</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">300px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value">normal <span class="number">15px</span>/<span class="number">1.5</span> Arial</span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
        <span class="rule"><span class="attribute">border-collapse</span>:<span class="value"> collapse</span></span>;
    }</span>
    <span class="tag">caption</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">20px</span></span></span>;
    }</span>
    <span class="tag">tfoot</span><span class="rules">{
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">15px</span>/<span class="number">1.5</span> <span class="string">"楷体"</span></span></span>;
    }</span>
    <span class="tag">th</span><span class="rules">{
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
    }</span>
    <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#E8E8E8</span></span></span>;
    }</span>
    <span class="class">.tr_bg1</span> <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#CDCDCD</span></span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><blockquote>
<p>这时候效果跟刚才是一样的。但是如果要修改为隔N行换色就需要修改HTML了，当然也可以在类选择器的基础上添加相邻选择器来修改样式。具体用哪种方式要根据具体的条件背景和要求了。</p>
</blockquote>
<h2 id="使用背景图片">使用背景图片</h2><p>要使用背景图片，首先要准备一张平铺图 如下：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bg6.jpg-blogImg" alt=""><br>修改CSS代码如下：</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    <span class="tag">table</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">300px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value">normal <span class="number">12px</span>/<span class="number">1.5</span> Arial</span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
        <span class="rule"><span class="attribute">border-collapse</span>:<span class="value"> collapse</span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"><span class="function">url</span>(images/td_bg.gif) repeat <span class="number">0</span> <span class="number">0</span></span></span>;
    }</span>
    <span class="tag">caption</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">20px</span></span></span>;
    }</span>
    <span class="tag">tfoot</span><span class="rules">{
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> right</span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">12px</span>/<span class="number">1.5</span> <span class="string">"楷体"</span></span></span>;
    }</span>
    <span class="tag">th</span><span class="rules">{
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">20px</span></span></span>;
        <span class="rule"><span class="attribute">border-right</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
    }</span>
    <span class="tag">td</span><span class="rules">{
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">20px</span></span></span>;
        <span class="rule"><span class="attribute">border-right</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#000</span></span></span>;
    }</span>       
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>效果如下：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bg7.jpg-blogImg" alt=""><br>但是这种方式需要精确计算图片大小、行高以及字体大小。比如我们将字体调大为26px 这是就会发生错位现象<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bg8.jpg-blogImg" alt=""></p>
<blockquote>
<p>除了隔行换色的方式，其实还可以给tr添加hover来增加表格的可视性，在一些炫酷的表格中还可以使用box-shadow来增加立体效果，当然这些都是CSS3的属性。这里就不展示了，以后应该会专门写一些CSS的学习笔记来展示</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="表格介绍">表格介绍</h1><hr>
<p>表格由一行或者多行单元格组成，能够友好的对数据进行整理归类，以便对数据进行分析。<br>一个表格结构由以下标签组成：<br><code>&lt;table&gt;</code> | table标签可定义表格。在table标签内部可以放置表格的标题、行、列<br><code>&lt;caption&gt;</code> | caption可以定义一个表格标题。该标签紧跟在table标签后，每个表格只能定义一个标题。标题通常会显示在表格最上方<br><code>&lt;th&gt;</code> | 定义表格内的表头单元格 文本会显示为粗体居中<br><code>&lt;tr&gt;</code> | 在表格中定义行<br><code>&lt;td&gt;</code> | 在表格中定义列<br><code>&lt;thead&gt;</code> | 定义表格的表头<br><code>&lt;tbody&gt;</code> | 定义表格的主题<br><code>&lt;tfoo&gt;</code> | 定义表格的页脚<br>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.supce.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS学习笔记之表单]]></title>
    <link href="http://blog.supce.com/2016/04/26/CSS%E4%B9%8B%E8%A1%A8%E5%8D%95/"/>
    <id>http://blog.supce.com/2016/04/26/CSS之表单/</id>
    <published>2016-04-25T16:00:00.000Z</published>
    <updated>2016-04-27T02:27:47.373Z</updated>
    <content type="html"><![CDATA[<h1 id="默认表单">默认表单</h1><hr>
<p>表单是一个包含表单元素的区域，在网页中负责数据采集功能。一个表单有三个基本组成部分：</p>
<ul>
<li>表单标签：包含了处理表单数据所用CGI程序的URL以及数据提交到服务器的方法。</li>
<li>表单域：包含了文本框、密码框、隐藏域、多行文本框、多选框、单选框、下拉选择框和文件上传框等。 </li>
<li><p>表单按钮：包括提交按钮、重置按钮和一般按钮；用于将数据传送到服务器上的CGI脚本或者重置输入，还可以用表单按钮来控制其他定义了处理脚本的处理工作。<br>下面就写一个最基本的表单</p>
<a id="more"></a>
<p>  <form></form></p>
<pre><code><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span>&gt;</span>文本框<span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"password"</span> <span class="attribute">value</span>=<span class="value">"123"</span>&gt;</span>密码框<span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">name</span>=<span class="value">"hidden_input"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span>
<span class="tag">&lt;<span class="title">textarea</span>&gt;</span>多行文本框<span class="tag">&lt;/<span class="title">textarea</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span>&gt;</span>多选框<span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"radio"</span> <span class="attribute">name</span>=<span class="value">"sex"</span> <span class="attribute">value</span>=<span class="value">"boy"</span>&gt;</span>男<span class="tag">&lt;/<span class="title">input</span>&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"radio"</span> <span class="attribute">name</span>=<span class="value">"sex"</span> <span class="attribute">value</span>=<span class="value">"girl"</span>&gt;</span>女<span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span>
<span class="tag">&lt;<span class="title">select</span> <span class="attribute">size</span>=<span class="value">"3"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"1"</span> <span class="attribute">selected</span>&gt;</span>被默认选择的<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
    <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"2"</span>&gt;</span>第二个<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
    <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"3"</span>&gt;</span>第三个<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
<span class="tag">&lt;/<span class="title">select</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"file"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"提交"</span> <span class="attribute">name</span>=<span class="value">"mySubmit"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"reset"</span> <span class="attribute">value</span>=<span class="value">"重置"</span> <span class="attribute">name</span>=<span class="value">"myReset"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"普通按钮"</span> <span class="attribute">name</span>=<span class="value">"myButton"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
</code></pre><p>  <br>一个默认样式的表单，在不同的浏览器会有不同的显示效果，比如上面的表单在IE和Chrome中的显示效果如下：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bd.jpg-blogImg" alt=""><br>下面就写几个带有CSS样式的表单练练手</p>
<h1 id="登录表单">登录表单</h1></li>
</ul>
<hr>
<p>首先把HTML写出来 很简单</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"login"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">form</span>&gt;</span>
        <span class="tag">&lt;<span class="title">h1</span>&gt;</span>Sign In<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span>邮箱：<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">value</span>=<span class="value">"mail@address.com"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span>密码：<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"password"</span> <span class="attribute">value</span>=<span class="value">"*******"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;<span class="title">input</span> <span class="attribute">class</span>=<span class="value">"submit"</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"登录"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">form</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>未加任何修饰的表单好丑<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bd1.jpg-blogImg" alt=""><br>下面就开始对表单进行美容</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">0</span></span></span>;
    }</span>
    <span class="class">.login</span><span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">40px</span> auto</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">400px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#007FFF</span></span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">16px</span></span></span>;
        <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;
    }</span>
    <span class="tag">h1</span><span class="rules">{
        <span class="rule"><span class="attribute">font</span>:<span class="value"> <span class="number">35px</span> arial</span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">249</span>,<span class="number">82</span>,<span class="number">82</span>)</span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">70px</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">70px</span></span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
    }</span>
    <span class="tag">p</span><span class="rules">{
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">20px</span> arial</span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#A8A8A8</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">20px</span> <span class="number">20px</span></span></span>;
    }</span>
    <span class="tag">input</span><span class="rules">{
        <span class="rule"><span class="attribute">border</span>:<span class="value">none</span></span>;
        <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">3px</span></span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">15px</span> arial</span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">0</span> <span class="number">8px</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#A8A8A8</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">248</span>,<span class="number">248</span>,<span class="number">248</span>)</span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">344px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">32px</span></span></span>;
    }</span>
    <span class="class">.submit</span><span class="rules">{
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">18px</span> <span class="string">"楷体"</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#33cc77</span></span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">28px</span></span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span> auto</span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>效果如下，是不是美多了？<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bd2.jpg-blogImg" alt=""></p>
<blockquote>
<p>这里面有个有意思的方法，我们可以去掉input元素的border，然后为其添加背景色来增加input的美观度</p>
</blockquote>
<h1 id="反馈表单">反馈表单</h1><hr>
<p>一个网站在用户反馈页面会用到表单，下面这个例子就模仿下<a href="http://im.baidu.com/feedback/feedback.php" target="_blank" rel="external">百度Hi</a>的用户反馈界面。</p>
<p><em>08年到11年高中的时候，一直是百度的粘性用户，后来百度Hi半死不活，这次就算纪念下吧。</em><br>原网页是用的table来写的 自己没有用，想实现的可以自己写下一练练手<br>先把HTML准备好：</p>
<pre><code><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"wrap"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">h1</span>&gt;</span>选择与问题描述<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
    <span class="tag">&lt;<span class="title">form</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span>
            问题反馈<span class="tag">&lt;<span class="title">span</span>&gt;</span>*<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
            <span class="tag">&lt;<span class="title">select</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span> <span class="attribute">selected</span>&gt;</span>客户端版百度HI<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span>&gt;</span>网页版百度HI<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">select</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span>
            反馈类型<span class="tag">&lt;<span class="title">span</span>&gt;</span>*<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
            <span class="tag">&lt;<span class="title">select</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span> <span class="attribute">selected</span>&gt;</span>请选择<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span>&gt;</span>下载和安装过程<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span>&gt;</span>界面问题<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">select</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span>
            提交类型<span class="tag">&lt;<span class="title">span</span>&gt;</span>*<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
            <span class="tag">&lt;<span class="title">select</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span> <span class="attribute">selected</span>&gt;</span>请选择<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span>&gt;</span>发现一个错误<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span>&gt;</span>提交改进建议<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">select</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span> &gt;</span>
            反馈内容<span class="tag">&lt;<span class="title">span</span>&gt;</span>*<span class="tag">&lt;/<span class="title">span</span>&gt;</span>

        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"spe"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"minSize"</span>&gt;</span>(限1000个字符)<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">textarea</span>&gt;</span><span class="tag">&lt;/<span class="title">textarea</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span>
            上传图片
            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"file"</span> <span class="attribute">class</span>=<span class="value">"fileInput"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
            <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"tips"</span>&gt;</span>您可以上传1M以内的jpg、jpeg、png和gif格式的图片文件<span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"line"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>
        <span class="tag">&lt;<span class="title">h1</span>&gt;</span>填写用户信息<span class="tag">&lt;/<span class="title">h1</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span>
            电子邮箱<span class="tag">&lt;<span class="title">span</span>&gt;</span>*<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span>&gt;</span>
            百度账号<span class="tag">&lt;<span class="title">span</span>&gt;</span>*<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"longInput"</span>&gt;</span>
            软件版本号<span class="tag">&lt;<span class="title">span</span>&gt;</span>*<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
            <span class="tag">&lt;<span class="title">select</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span> <span class="attribute">selected</span>&gt;</span>请选择<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span>&gt;</span>百度Hi xx版<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
                <span class="tag">&lt;<span class="title">option</span>&gt;</span>百度Hi xxx版<span class="tag">&lt;/<span class="title">option</span>&gt;</span>
            <span class="tag">&lt;/<span class="title">select</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">p</span> <span class="attribute">class</span>=<span class="value">"longInput"</span>&gt;</span>
            输入验证码<span class="tag">&lt;<span class="title">span</span>&gt;</span>*<span class="tag">&lt;/<span class="title">span</span>&gt;</span>
            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
            <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/genimg.jpg"</span>&gt;</span> <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>看不清？<span class="tag">&lt;/<span class="title">a</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">p</span>&gt;</span>
        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"buttonDiv"</span>&gt;</span>
            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"提交"</span>&gt;</span><span class="tag">&lt;/<span class="title">input</span>&gt;</span>
        <span class="tag">&lt;/<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">form</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><p>看下没有样式的页面：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bd3.jpg-blogImg" alt=""><br>添加美美的CSS代码：</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span></span></span>;
    }</span>
    <span class="class">.wrap</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">980px</span></span></span>;
        <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">20px</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">40px</span> auto</span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#E8E8E8</span></span></span>;
    }</span>
    <span class="tag">form</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
    }</span>
    <span class="class">.line</span><span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">20px</span> auto</span></span>;
        <span class="rule"><span class="attribute">border-bottom</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#E8E8E8</span></span></span>; 
    }</span>
    <span class="tag">p</span><span class="rules">{
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">25px</span> <span class="number">72px</span></span></span>;
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">15px</span>/<span class="number">1.125</span> Microsoft Yahei</span></span>;
    }</span>
    <span class="tag">h1</span><span class="rules">{
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">18px</span>/<span class="number">1.5</span> Microsoft Yahei</span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#666</span></span></span>;
    }</span>
    <span class="tag">span</span><span class="rules">{
        <span class="rule"><span class="attribute">color</span>:<span class="value"> red</span></span>;
    }</span>
    <span class="tag">select</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">20px</span></span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">150px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">25px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#E8E8E8</span></span></span>;
    }</span>
    <span class="tag">input</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">20px</span></span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">150px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">23px</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#E8E8E8</span></span></span>;
    }</span>
    <span class="class">.fileInput</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> auto</span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value">none</span></span>;
    }</span>
    <span class="class">.tips</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">12px</span></span></span>;
        <span class="rule"><span class="attribute">padding-left</span>:<span class="value"><span class="number">85px</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#999</span></span></span>;
    }</span>
    <span class="class">.minSize</span><span class="rules">{
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">12px</span></span></span>;
    }</span>
    <span class="tag">textarea</span><span class="rules">{
        <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;
        <span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">150px</span></span></span>;
        <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">162px</span></span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">400px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">150px</span></span></span>;
    }</span>
    <span class="class">.spe</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-bottom</span>:<span class="value"> <span class="number">125px</span></span></span>;
    }</span>
    <span class="class">.buttonDiv</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-top</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
    }</span>
    <span class="class">.buttonDiv</span> <span class="tag">input</span><span class="rules">{
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">156px</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">51px</span></span></span>;
        <span class="rule"><span class="attribute">background</span>:<span class="value"><span class="function">rgb</span>(<span class="number">51</span>,<span class="number">165</span>,<span class="number">255</span>)</span></span>; 
        <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#FFF</span></span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value">none</span></span>;
    }</span>
    <span class="class">.longInput</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-left</span>:<span class="value"> <span class="number">57px</span></span></span>;
    }</span>
    <span class="class">.longInput</span> <span class="tag">img</span><span class="rules">{
        <span class="rule"><span class="attribute">vertical-align</span>:<span class="value"> bottom</span></span>;
        <span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">1px</span> solid <span class="hexcolor">#E8E8E8</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">25px</span></span></span>;
    }</span>
    <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">13px</span> Microsoft Yahei</span></span>;
        <span class="rule"><span class="attribute">text-decoration</span>:<span class="value"> none</span></span>;
    }</span>
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>刷新下页面：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bd4.jpg-blogImg" alt=""><br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/bd5.jpg-blogImg" alt=""></p>
<blockquote>
<p>Ok搞定 至于为什么写百度Hi呢反馈页面呢，或许是传说中的情怀吧。</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="默认表单">默认表单</h1><hr>
<p>表单是一个包含表单元素的区域，在网页中负责数据采集功能。一个表单有三个基本组成部分：</p>
<ul>
<li>表单标签：包含了处理表单数据所用CGI程序的URL以及数据提交到服务器的方法。</li>
<li>表单域：包含了文本框、密码框、隐藏域、多行文本框、多选框、单选框、下拉选择框和文件上传框等。 </li>
<li><p>表单按钮：包括提交按钮、重置按钮和一般按钮；用于将数据传送到服务器上的CGI脚本或者重置输入，还可以用表单按钮来控制其他定义了处理脚本的处理工作。<br>下面就写一个最基本的表单</p>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.supce.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CSS学习笔记之列表（二）]]></title>
    <link href="http://blog.supce.com/2016/04/25/CSS%E4%B9%8B%E5%88%97%E8%A1%A8(2)/"/>
    <id>http://blog.supce.com/2016/04/25/CSS之列表(2)/</id>
    <published>2016-04-24T16:00:00.000Z</published>
    <updated>2016-04-25T13:28:56.233Z</updated>
    <content type="html"><![CDATA[<h1 id="在列表中图文嵌套">在列表中图文嵌套</h1><hr>
<p>这次写个列表中图文嵌套的小例子 例子中模仿百度新闻首页中的效果<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tw.jpg-blogImg" alt=""><br>先把HTML代码写出来，很简单</p>
<pre><code><span class="tag">&lt;<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw1.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>许晴晒出游美照 河边蹦跳<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw2.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>小芈月刘楚恬周出游爆潮<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw3.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>45岁梁佩瑚嫁圈外富商<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw4.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>高圆圆着宽松衣回京显亲民<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw5.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>姚晨宣布11月将生二胎<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre><a id="more"></a>
<p>默认样式如下：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tw1.jpg-blogImg" alt=""><br>下面就开始仿照百度的样式进行美化</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span></span></span>;
    }</span>
    <span class="tag">ul</span><span class="rules">{
        <span class="rule"><span class="attribute">list-style</span>:<span class="value">none</span></span>;
    }</span>
    <span class="rule"><span class="attribute">ul</span>:<span class="value">after{
        clear: both</span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">visibility</span>:<span class="value"> hidden</span></span>;
        <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">""</span></span></span>;
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">0</span></span></span>;
    }
    <span class="tag">li</span><span class="rules">{
        <span class="rule"><span class="attribute">margin-right</span>:<span class="value"><span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">float</span>:<span class="value">left</span></span>;
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
    }</span>
    <span class="tag">li</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">text-decoration</span>:<span class="value">none</span></span>;
    }</span>
    <span class="tag">li</span> <span class="tag">span</span><span class="rules">{
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">12px</span> arial, <span class="string">"微软雅黑"</span>,<span class="string">"宋体"</span></span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100%</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
        <span class="rule"><span class="attribute">position</span>:<span class="value">absolute</span></span>;
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">top</span>:<span class="value"><span class="number">125px</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"><span class="function">rgb</span>(<span class="number">246</span>,<span class="number">247</span>,<span class="number">248</span>)</span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="function">rgb</span>(<span class="number">34</span>,<span class="number">34</span>,<span class="number">34</span>)</span></span>;
    }</span>
    <span class="tag">li</span> <span class="rule"><span class="attribute">span</span>:<span class="value">hover{
        background-color: <span class="function">rgb</span>(<span class="number">48</span>,<span class="number">100</span>,<span class="number">187</span>)</span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#FFF</span></span></span>;
    }
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>刷新一下页面<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tw2.jpg-blogImg" alt=""><br>其实，我自己感觉把样式做成上次新闻例子中的样式更美观一些 下面就修改CSS对比一下</p>
<pre><code><span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">
    *<span class="rules">{
        <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">margin</span>:<span class="value"><span class="number">0</span></span></span>;
    }</span>
    <span class="tag">ul</span><span class="rules">{
        <span class="rule"><span class="attribute">list-style</span>:<span class="value">none</span></span>;
    }</span>
    <span class="rule"><span class="attribute">ul</span>:<span class="value">after{
        clear: both</span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">visibility</span>:<span class="value"> hidden</span></span>;
        <span class="rule"><span class="attribute">content</span>:<span class="value"> <span class="string">""</span></span></span>;
        <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">0</span></span></span>;
    }
    <span class="tag">li</span><span class="rules">{
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">125px</span></span></span>;
        <span class="rule"><span class="attribute">margin-right</span>:<span class="value"><span class="number">10px</span></span></span>;
        <span class="rule"><span class="attribute">float</span>:<span class="value">left</span></span>;
        <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;
    }</span>
    <span class="tag">li</span> <span class="tag">a</span><span class="rules">{
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">125px</span></span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">text-decoration</span>:<span class="value">none</span></span>;
    }</span>
    <span class="tag">li</span> <span class="tag">span</span><span class="rules">{
        <span class="rule"><span class="attribute">font</span>:<span class="value"><span class="number">12px</span> <span class="string">"宋体"</span></span></span>;
        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">100%</span></span></span>;
        <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">line-height</span>:<span class="value"> <span class="number">30px</span></span></span>;
        <span class="rule"><span class="attribute">display</span>:<span class="value"> block</span></span>;
        <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;
        <span class="rule"><span class="attribute">position</span>:<span class="value">absolute</span></span>;
        <span class="rule"><span class="attribute">left</span>:<span class="value"><span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">bottom</span>:<span class="value"> <span class="number">0</span></span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"> <span class="hexcolor">#FFF</span></span></span>;
        <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#000</span></span></span>;
        <span class="rule"><span class="attribute">filter</span>:<span class="value"><span class="function">alpha</span>(opacity=<span class="number">40</span>)</span></span>;
        <span class="rule"><span class="attribute">opacity</span>:<span class="value"><span class="number">0.4</span></span></span>;
    }</span>
    <span class="tag">li</span> <span class="rule"><span class="attribute">span</span>:<span class="value">hover{
        background-color: <span class="function">rgb</span>(<span class="number">48</span>,<span class="number">100</span>,<span class="number">187</span>)</span></span>;
        <span class="rule"><span class="attribute">color</span>:<span class="value"><span class="hexcolor">#FFF</span></span></span>;
    }
</span><span class="tag">&lt;/<span class="title">style</span>&gt;</span>
</code></pre><p>效果如下：<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tw3.jpg-blogImg" alt=""></p>
<blockquote>
<p>OK 我还是觉得这样好看些</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="在列表中图文嵌套">在列表中图文嵌套</h1><hr>
<p>这次写个列表中图文嵌套的小例子 例子中模仿百度新闻首页中的效果<br><img src="http://7xqkrz.com1.z0.glb.clouddn.com/tw.jpg-blogImg" alt=""><br>先把HTML代码写出来，很简单</p>
<pre><code><span class="tag">&lt;<span class="title">div</span>&gt;</span>
    <span class="tag">&lt;<span class="title">ul</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw1.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>许晴晒出游美照 河边蹦跳<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">""</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw2.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>小芈月刘楚恬周出游爆潮<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw3.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>45岁梁佩瑚嫁圈外富商<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw4.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>高圆圆着宽松衣回京显亲民<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span><span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">"images/tw5.jpg"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>姚晨宣布11月将生二胎<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span>
<span class="tag">&lt;/<span class="title">div</span>&gt;</span>
</code></pre>]]>
    
    </summary>
    
      <category term="CSS" scheme="http://blog.supce.com/tags/CSS/"/>
    
  </entry>
  
</feed>
