<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[vector's blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com//"/>
  <updated>2015-08-12T08:44:35.570Z</updated>
  <id>http://yoursite.com//</id>
  
  <author>
    <name><![CDATA[vector]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[利用 hexo 3 及以上版本 + github/gitcafe 搭建博客]]></title>
    <link href="http://yoursite.com/2015/08/12/github-gitcafe/"/>
    <id>http://yoursite.com/2015/08/12/github-gitcafe/</id>
    <published>2015-08-12T01:04:40.000Z</published>
    <updated>2015-08-12T08:44:35.570Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><hr>
<p>曾经一直有搭建博客的想法，前面由于时间原因搁置了下来，这次抽时间终于把博客搭建完成了。网上很多教程都是基于 hexo 2.x 的教程，而 hexo 3.0 做了很多变动，于是把这次搭建博客的过程记录下来，供大家参考，如有不对的地方欢迎大家指正。</p>
<h1 id="1_安装">1 安装</h1><hr>
<p><em>请选择对应的版本下载安装</em>。</p>
<p>1.1 安装  <a href="https://nodejs.org/" target="_blank" rel="external">node.js</a><br>1.2 安装  <a href="http://git-scm.com/" target="_blank" rel="external">git</a></p>
<h1 id="2_添加SSH公钥">2 添加SSH公钥</h1><hr>
<p><em>由于某些因素，gitcafe 的访问速度比 github 要快，因此以 gitcafe 为例。如果想使用 github，请参考附录。</em></p>
<blockquote>
<p>SSH （ Secure Shell）是一种安全协议，在你的电脑与 GitCafe 服务器进行通信时，我们使用 SSH 密钥（SSH Keys）认证的方式来保证通信安全。你可以在网络上搜索到关于 <strong>SSH 密钥 </strong>的更多介绍；下面我们重点讲解如何创建 SSH 密钥，并将密钥中的公钥添加到 GitCafe，以便我们通过 SSH 协议来访问 Git 仓库。</p>
</blockquote>
<p><strong>2.1 进入 SSH 目录</strong></p>
<p>SSH 密钥的创建需要在终端（命令行）环境下进行，我们首先进入命令行环境。在 Windows 平台中，可以使用刚才安装的 Git Bash 工具。进入命令行环境后，我们执行以下操作来创建 SSH 密钥。</p>
<pre><code><span class="built_in">cd</span>  ~/.ssh
</code></pre><p><em>如果还没有 ~/.ssh 目录，可以手工创建一个 <code>mkdir ~/.ssh</code>，之后再通过 <code>cd ~/.ssh</code> 进入 SSH 目录</em></p>
<blockquote>
<p>可以通过 <code>ls</code> 命令查看 SSH 目录下的文件，来确认你是否已经生成过 SSH 密钥；如果 SSH 目录为空，我们开始第二步，生成 SSH 密钥；如果存在 <strong>id_rsa.pub </strong>这个文件，说明你之前生成过 SSH 密钥，可以跳过第二步，直接进行密钥的获取。</p>
</blockquote>
<p><strong>2.2 生成 SSH 密钥</strong></p>
<p>我们通过下面的命令生成密钥，<strong>请将命令中的 <code>YOUR_EMAIL@YOUREMAIL.COM</code> 替换为你自己的 Email 地址。</strong></p>
<pre><code>ssh-keygen -t rsa -<span class="keyword">C</span> <span class="string">"YOUR_EMAIL@YOUREMAIL.COM"</span>
</code></pre><p>在 SSH 生成过程中会出现以下信息，按屏幕的提示操作即可；当提示 <code>Enter passphrase ( empty for no passphrase ) : </code> 时，可以直接按两次回车键输入一个空的 passphrase；也可以选择输入一个 passphrase 口令，如果此时你输入了一个 passphrase，请牢记，之后每次提交时都需要输入这个口令来确认。</p>
<pre><code>$ ssh-keygen -t rsa -C <span class="string">"YOUR_EMAIL@YOUREMAIL.COM"</span>
Generating <span class="keyword">public</span>/<span class="keyword">private</span> rsa key pair.
Enter passphrase (empty <span class="keyword">for</span> no passphrase):
Enter same passphrase <span class="string">again:</span>
Your identification has been saved <span class="keyword">in</span> <span class="regexp">/Users/</span>USERNAME<span class="regexp">/.ssh/</span>id_rsa.
Your <span class="keyword">public</span> key has been saved <span class="keyword">in</span> <span class="regexp">/Users/</span>USERNAME<span class="regexp">/.ssh/</span>id_rsa.pub.
The key fingerprint <span class="string">is:</span>
<span class="number">15</span>:<span class="number">81</span>:<span class="string">d2:</span><span class="number">7</span><span class="string">a:</span><span class="string">c6:</span><span class="number">6</span><span class="string">c:</span><span class="number">0</span><span class="string">f:</span><span class="string">ec:</span><span class="string">b0:</span><span class="string">b6:</span><span class="string">d4:</span><span class="number">18</span>:<span class="string">b8:</span><span class="string">d1:</span><span class="number">41</span>:<span class="number">48</span> YOUR_EMAIL<span class="annotation">@YOUREMAIL</span>.COM
</code></pre><p><em>一般情况下，在命令行中输入密码、口令一类的信息时是没有信息回显的。在我们这一步的操作中，输入 passphrase 口令时，命令行界面上不会随着键盘敲入密码而有什么反馈。</em></p>
<p><strong>2.3 获取 SSH 公钥信息</strong></p>
<p>SSH 秘钥生成结束后，你可以在 SSH 目录下看到私钥 id_rsa 和公钥 id_rsa.pub 这两个文件，不要把私钥文件 id_rsa 的信息透露给任何人。我们可以通过文本编辑器或 <code>cat</code>   命令来查看 id_rsa.pub 公钥信息。</p>
<ul>
<li>通过编辑器。使用你熟悉的文本编辑器，比如 记事本、Sublime Text 等软件打开 id_rsa.pub ，复制里面的所有内容以备下一步使用。</li>
<li>通过 cat命令。在命令行中敲入 cat id_rsa.pub ，回车执行后命令行界面中会显示 id_rsa.pub 文件里的内容，复制后在下一步使用。</li>
</ul>
<p><strong>2.4 添加 SSH 公钥到 GitCafe</strong></p>
<p>打开 GitCafe 网站，进入 账户设置 –&gt; SSH 公钥管理 设置项，点击 添加新公钥 按钮，在「名称」文本框中可以输入任意文字。之后将我们刚刚复制的 SSH 公钥的内容粘贴到公钥文本框中，之后输入 GitCafe 的账户密码，保存。</p>
<p><img src="https://gitcafe-image.b0.upaiyun.com/0675aeeee7c5ae6234263425c7eb6f42.png" alt="添加ssh"></p>
<p>至此，我们已完成 SSH 密钥的生成，并在 GitCafe 设置了公钥。</p>
<p><strong>2.5 测试 GitCafe SSH 连接</strong></p>
<p>完成上面的操作后，可以通过下面的命令来测试一下是否可以连接 GitCafe 服务器。</p>
<pre><code><span class="title">ssh</span> -T git<span class="variable">@gitcafe</span>.com
</code></pre><p>如果你操作的电脑是第一次与 GitCafe 建立连接，会出现以下警告，</p>
<pre><code>The authenticity <span class="keyword">of</span> host <span class="attribute">'gitcafe</span>.com (<span class="number">50.116</span>.<span class="number">2.223</span>)' can<span class="attribute">'t</span> be established.
#RSA key fingerprint <span class="keyword">is</span> <span class="number">84</span>:<span class="number">9</span>e:c9:<span class="number">8</span>e:<span class="number">7</span>f:<span class="number">36</span>:<span class="number">28</span>:<span class="number">08</span>:<span class="number">7</span>e:<span class="number">13</span>:bf:<span class="number">43</span>:<span class="number">12</span>:<span class="number">74</span>:<span class="number">11</span>:<span class="number">4</span>e.
#Are you sure you want <span class="keyword">to</span> continue connecting (yes/no)?
</code></pre><p>输入 yes 后回车。此时，如果你在生成 SSH 密钥时设置了 passphrase 口令，会提示你输入口令，输入后回车即可。</p>
<p>最后，如果你看到以下信息，说明连接成功。</p>
<pre><code>Hi USERNAME! You've successfully authenticated, <span class="keyword">but</span> GitCafe <span class="keyword">does</span> <span class="keyword">not</span> provide shell access.
</code></pre><p>测试通过后，你就可以到 GitCafe 创建项目并上传要托管的项目了。Happy Coding！Happy Git!</p>
<blockquote>
<p><em>如果你对 GitCafe 网站还不熟悉，推荐阅读<a href="https://help.gitcafe.com/manuals/help/getting-started" target="_blank" rel="external">《 GitCafe 快速上手 》</a></em></p>
</blockquote>
<h1 id="3_gitcafe_建立项目仓库">3 gitcafe 建立项目仓库</h1><hr>
<p>进入 GitCafe 个人主页，点击页面右上角的 <em>新建</em> 按钮来新建一个项目。其中，<strong>项目名称必须与拥有者一致。</strong></p>
<blockquote>
<p>例如：我的拥有者为 byvector，则项目名称也为 byvector ，选填内容根据自己情况填写。</p>
</blockquote>
<p><img src="/img/create.png" alt="建立项目仓库"></p>
<h1 id="4_Hexo_介绍及安装">4 Hexo 介绍及安装</h1><hr>
<p><strong>4.1 什么是 Hexo？</strong></p>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<p><strong>4.2 Hexo 的安装</strong><br>进入 git Bash，输入：</p>
<pre><code>$ npm <span class="operator"><span class="keyword">install</span> -<span class="keyword">g</span> hexo-cli</span>
</code></pre><p>在你的电脑磁盘中新建文件夹 <em>Hexo</em>，右键文件夹，选择 <code>git bash</code> 输入：</p>
<pre><code><span class="variable">$ </span>hexo init
</code></pre><p>完成后输入：</p>
<pre><code>$ npm <span class="keyword">install</span>
</code></pre><p>安装 Hexo3.0 独立出来的模块</p>
<pre><code>npm <span class="operator"><span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-<span class="keyword">category</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-renderer-marked@<span class="number">0.2</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-renderer-stylus@<span class="number">0.2</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-feed@<span class="number">1</span> <span class="comment">--save</span>
npm <span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1</span> <span class="comment">--save</span></span>
</code></pre><p>完成后，指定文件夹的目录如下：</p>
<pre><code>.
├── _config.yml
├── package.json
├── scaffolds
├── scripts
├── source
<span class="string">|   ├── _drafts</span>
<span class="string">|   └── _posts</span>
└── themes
</code></pre><blockquote>
<p><strong>_config.yml</strong><br>网站的 配置 信息，您可以在此配置大部分的参数。<br><strong>package.json</strong><br>应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。<br><strong>scaffolds</strong><br>模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。<br><strong>scripts</strong><br>脚本 文件夹。脚本是扩展 Hexo 最简易的方式，在此文件夹内的 JavaScript 文件会被自动执行。<br><strong>source</strong><br>资源文件夹是存放用户资源的地方。除 <em>posts 文件夹之外，开头命名为 </em> (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去。<br><strong>themes</strong><br>主题 文件夹。Hexo 会根据主题来生成静态页面。</p>
</blockquote>
<p>生成静态文件。</p>
<pre><code><span class="variable">$ </span>hexo generate
</code></pre><p>开启本地server调试。</p>
<pre><code>$ hexo <span class="keyword">server</span>
</code></pre><p>浏览器中打开localhost:4000则可以在本地看到生成的页面。</p>
<p><strong>4.3 Hexo 部署到gitcafe</strong></p>
<p>打开 <code>_config.yml</code> 添加如下配置</p>
<blockquote>
<p>将uer_name 替换成您自己的用户名</p>
</blockquote>
<pre><code><span class="attribute">deploy</span>:
  <span class="attribute">type</span>: git
  <span class="attribute">repo</span>: git<span class="variable">@gitcafe</span>.<span class="attribute">com</span>:usr_name/user_name.git
  <span class="attribute">branch</span>: gitcafe-pages
</code></pre><p>输入命令</p>
<pre><code><span class="variable">$ </span>hexo deploy
</code></pre><p>就可以通过<code>user_name.gitcafe.io</code>访问您自己的博客了。</p>
<blockquote>
<p>其他具体内容可以参考 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo 中文文档</a></p>
</blockquote>
<h1 id="4-4_更换主题">4.4 更换主题</h1><p>输入命令</p>
<pre><code>git clone https://<span class="tag">&lt;<span class="title">git</span>/<span class="attribute">repository</span>&gt;</span> themes/<span class="tag">&lt;<span class="title">themename</span>&gt;</span>
</code></pre><p>将<code>_config.yml</code>文件中的<code>theme</code>字段设置为与 <code>&lt;themename&gt;</code>一致</p>
<p><em>更新主题,更新前备份 <code>themes/&lt;themename&gt;</code>目录下的<code>_config.yml</code></em></p>
<pre><code>cd themes/<span class="tag">&lt;<span class="title">themename</span>&gt;</span>
git pull origin master
</code></pre><p><em>以下以 jacman 主题为例</em><br><em>输入命令</em></p>
<pre><code><span class="variable">$ </span>git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/wuchong</span><span class="regexp">/jacman.git themes/jacman</span>
</code></pre><p><em>将<code>_config.yml</code>文件中的<code>theme</code>字段设置为 jacman</em><br><em>更新主题</em></p>
<pre><code><span class="built_in">cd</span> themes/jacman
git pull origin master
</code></pre><blockquote>
<p>执行hexo deploy时发现fatal: ‘github’ does not appear to be a git repository<br>在重新设置 Repo 的时候要把 .deploy/ 文件夹删掉，让 Hexo 再次初始化，否则 Hexo 只是执行 push 操作，所以会一直报错。</p>
</blockquote>
<p>更多有关主题详细内容可以参考 <a href="https://github.com/wuchong/jacman/blob/master/README_zh.md" target="_blank" rel="external">jacman中文说明</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><hr>
<p>曾经一直有搭建博客的想法，前面由于时间原因搁置了下来，这次抽时间终于把博客搭建完成了。网上很多教程都是基于 hexo 2.x 的教程，而 hexo 3.0 做了很多变动，于是把这次搭建博客的过程记录下来，供大家参考，如有不对的]]>
    </summary>
    
      <category term="Web" scheme="http://yoursite.com/tags/Web/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Test]]></title>
    <link href="http://yoursite.com/2015/08/11/Test/"/>
    <id>http://yoursite.com/2015/08/11/Test/</id>
    <published>2015-08-11T01:45:39.000Z</published>
    <updated>2015-08-12T01:08:41.827Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>This is a test.</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>This is a test.</p>
</blockquote>
]]>
    </summary>
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://yoursite.com/2015/08/11/hello-world/"/>
    <id>http://yoursite.com/2015/08/11/hello-world/</id>
    <published>2015-08-11T01:38:24.681Z</published>
    <updated>2015-08-11T01:38:24.681Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
      <category term="demo" scheme="http://yoursite.com/tags/demo/"/>
    
  </entry>
  
</feed>